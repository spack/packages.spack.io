{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "PHANOTATE is a tool to annotate phage genomes. It uses the assumption\nthat non-coding bases in a phage genome is disadvantageous, and then\npopulates a weighted graph to find the optimal path through the six\nframes of the DNA where open reading frames are beneficial paths, while\ngaps and overlaps are penalized paths.",
            "name": "py-phanotate"
        }
    ],
    "description": "Fastpath is a fast and lightweight tool for finding the shortest path in\na weighted graph. As input it only needs the starting node, the ending\nnode, and the weights of each node to node edge.\n",
    "homepage": "https://github.com/deprekate/fastpath",
    "latest_version": "1.9",
    "maintainers": [],
    "name": "py-fastpath",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "1.9",
            "sha256": "3372d306a3c4e4e764b3995946132333726a229e9002879b9112779dd442b31a"
        }
    ],
    "versions_deprecated": []
}