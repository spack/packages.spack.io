{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GDAL: Geospatial Data Abstraction Library. GDAL is a translator library\nfor raster and vector geospatial data formats that is released under an\nMIT style Open Source License by the Open Source Geospatial Foundation.\nAs a library, it presents a single raster abstract data model and single\nvector abstract data model to the calling application for all supported\nformats. It also comes with a variety of useful command line utilities\nfor data translation and processing.",
            "name": "gdal"
        },
        {
            "description": "GEOS (Geometry Engine, Open Source). GEOS is a C/C++ library for\ncomputational geometry with a focus on algorithms used in geographic\ninformation systems (GIS) software. It implements the OGC Simple\nFeatures geometry model and provides all the spatial functions in that\nstandard as well as many others. GEOS is a core dependency of PostGIS,\nQGIS, GDAL, and Shapely.",
            "name": "geos"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "GMT (Generic Mapping Tools) is an open source collection of about 80\ncommand-line tools for manipulating geographic and Cartesian data sets\n(including filtering, trend fitting, gridding, projecting, etc.) and\nproducing PostScript illustrations ranging from simple x-y plots via\ncontour maps to artificially illuminated surfaces and 3D perspective\nviews.",
            "name": "gmt"
        },
        {
            "description": "PROJ is a generic coordinate transformation software, that transforms\ngeospatial coordinates from one coordinate reference system (CRS) to\nanother. This includes cartographic projections as well as geodetic\ntransformations.",
            "name": "proj"
        },
        {
            "description": "Cartopy - a cartographic python library with matplotlib support.",
            "name": "py-cartopy"
        },
        {
            "description": "IPython Kernel for Jupyter",
            "name": "py-ipykernel"
        },
        {
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.",
            "name": "py-matplotlib"
        },
        {
            "description": "Python interface to the netCDF Library.",
            "name": "py-netcdf4"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "ObsPy is an open-source project dedicated to provide a Python framework\nfor processing seismological data",
            "name": "py-obspy"
        },
        {
            "description": "Python and MATLAB wrappers for the Okada Green's function codes",
            "name": "py-okada-wrapper"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Poetry PEP 517 Build Backend.",
            "name": "py-poetry-core"
        },
        {
            "description": "A Python interface for the Generic Mapping Tools.",
            "name": "py-pygmt"
        },
        {
            "description": "Python interface to PROJ (cartographic projections and coordinate\ntransformations library).",
            "name": "py-pyproj"
        },
        {
            "description": "Pyrocko is an open source seismology toolbox and library, written in the\nPython programming language",
            "name": "py-pyrocko"
        },
        {
            "description": "Fundamental algorithms for scientific computing in Python.",
            "name": "py-scipy"
        },
        {
            "description": "Manipulation and analysis of geometric objects in the Cartesian plane.",
            "name": "py-shapely"
        },
        {
            "description": "Typer, build great CLIs. Easy to code. Based on Python type hints.",
            "name": "py-typer"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [],
    "description": "Wavelet and simulated Annealing SliP inversion (WASP). This code uses a\nnonlinear simulated annealing inversion method to model slip amplitude,\nrake, rupture time, and rise time on a discretized fault plane, finding\nthe solution that best fits the observations in the wavelet domain.\n",
    "homepage": "https://code.usgs.gov/ghsc/neic/algorithms/neic-finitefault",
    "latest_version": "20240410",
    "maintainers": [
        "snehring"
    ],
    "name": "neic-finitefault",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.neic-finitefault",
            "relative_path": "fortran-filename-length.patch",
            "reverse": false,
            "sha256": "b219c6a01be41c179fbc73b40f9c90308cb0a8c27a94797f58c894b504f38baf",
            "version": "",
            "working_dir": "."
        }
    ],
    "resources": [
        {
            "destination": "",
            "name": "fd_bank",
            "placement": null,
            "version": "@0.1.0:"
        },
        {
            "destination": "",
            "name": "LITHO1.0.nc",
            "placement": null,
            "version": "@0.1.0:"
        },
        {
            "destination": "",
            "name": "tectonicplates",
            "placement": null,
            "version": "@0.1.0:"
        }
    ],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "commit": "ef6a1a92d60549100885112e24a18e38d8d4ce0b",
            "name": "20240410"
        },
        {
            "name": "0.1.0",
            "sha256": "36b400dfc418bf78a3099f6fc308681c87ae320e6d71c7d0e98a2738e72fb570"
        }
    ],
    "versions_deprecated": []
}