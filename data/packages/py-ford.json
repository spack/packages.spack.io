{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "Beautiful Soup is a Python library for pulling data out of HTML and XML\nfiles. It works with your favorite parser to provide idiomatic ways of\nnavigating, searching, and modifying the parse tree.",
            "name": "py-beautifulsoup4"
        },
        {
            "description": "Simple Python interface for Graphviz",
            "name": "py-graphviz"
        },
        {
            "description": "Read metadata from Python packages.",
            "name": "py-importlib-metadata"
        },
        {
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment.",
            "name": "py-jinja2"
        },
        {
            "description": "This is a Python implementation of John Gruber's Markdown. It is almost\ncompletely compliant with the reference implementation, though there are\na few very minor differences. See John's Syntax Documentation for the\nsyntax rules.",
            "name": "py-markdown"
        },
        {
            "description": "This is an extension to Python-Markdown which provides an \"include\"\nfunction, similar to that found in LaTeX (and also the C pre-processor\nand Fortran).",
            "name": "py-markdown-include"
        },
        {
            "description": "This is an extension to Python-Markdown which allows environment\nvariables to be used in the text.",
            "name": "py-md-environ"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Pygments is a syntax highlighting package written in Python.",
            "name": "py-pygments"
        },
        {
            "description": "Math extension for Python-Markdown",
            "name": "py-python-markdown-math"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The blessed package to manage your versions by scm tags.",
            "name": "py-setuptools-scm"
        },
        {
            "description": "This is a setuptools_scm plugin that adds support for git archives (for\nexample the ones GitHub automatically generates).",
            "name": "py-setuptools-scm-git-archive"
        },
        {
            "description": "Implements a topological sort algorithm.",
            "name": "py-toposort"
        },
        {
            "description": "A Fast, Extensible Progress Meter",
            "name": "py-tqdm"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [],
    "description": "FORD, standing for FORtran Documenter, is an automatic documentation\ngenerator for modern Fortran programs.\n",
    "homepage": "https://pypi.org/project/FORD/",
    "latest_version": "6.1.13",
    "maintainers": [
        "wscullin"
    ],
    "name": "py-ford",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "6.1.13",
            "sha256": "95b743ea25c5a9c6a9e13db3633e04f91e11d1debb69f48ca3ef7fefc51f0559"
        },
        {
            "name": "6.1.12",
            "sha256": "101191e1aa33cfe780ea5b2d66d02c7281b9b314e82bb138d76809a49c08506a"
        },
        {
            "name": "6.1.11",
            "sha256": "feb9a88040e717e84c632e4b023904ab36a463fc9a8ff80c8c7f86454e5d8043"
        }
    ],
    "versions_deprecated": []
}