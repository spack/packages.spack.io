{
    "aliases": [],
    "build_system": "RPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information.",
            "name": "r"
        },
        {
            "description": "Manipulation of SQLite-based annotations in Bioconductor. Implements a\nuser-friendly interface for querying SQLite-based annotation data\npackages.",
            "name": "r-annotationdbi"
        },
        {
            "description": "Biobase: Base functions for Bioconductor. Functions that are needed by\nmany other packages or which replace R functions.",
            "name": "r-biobase"
        },
        {
            "description": "S4 generic functions used in Bioconductor. The package defines S4\ngeneric functions used in Bioconductor.",
            "name": "r-biocgenerics"
        },
        {
            "description": "Standard Input and Output for Bioconductor Packages. Implements\n`import()` and `export()` standard generics for importing and exporting\nbiological data formats. `import()` supports whole-file as well as\nchunk-wise iterative import. The `import()` interface optionally\nprovides a standard mechanism for 'lazy' access via `filter()` (on row\nor element-like components of the file resource), `select()` (on column-\nlike components of the file resource) and `collect()`. The `import()`\ninterface optionally provides transparent access to remote (e.g. via\nhttps) as well as local access. Developers can register a file\nextension, e.g., `.loom` for dispatch from character-based URIs to\nspecific `import()` / `export()` methods based on classes representing\nfile types, e.g., `LoomFile()`.",
            "name": "r-biocio"
        },
        {
            "description": "Interface to BioMart databases (i.e. Ensembl). In recent years a wealth\nof biological data has become available in public data repositories.\nEasy access to these valuable data resources and firm integration with\ndata analysis is needed for comprehensive bioinformatics data analysis.\nbiomaRt provides an interface to a growing collection of databases\nimplementing the BioMart software suite (<http://www.biomart.org>). The\npackage enables retrieval of large amounts of data in a uniform way\nwithout the need to know the underlying database schemas or write\ncomplex SQL queries. The most prominent examples of BioMart databases\nare maintain by Ensembl, which provides biomaRt users direct access to a\ndiverse set of data and enables a wide range of powerful online queries\nfrom gene annotation to database mining.",
            "name": "r-biomart"
        },
        {
            "description": "Efficient manipulation of biological strings. Memory efficient string\ncontainers, string matching algorithms, and other utilities, for fast\nmanipulation of large biological sequences or sets of sequences.",
            "name": "r-biostrings"
        },
        {
            "description": "R Database Interface. A database interface definition for communication\nbetween R and relational database management systems. All classes in\nthis package are virtual and need to be extended by the various R/DBMS\nimplementations.",
            "name": "r-dbi"
        },
        {
            "description": "Utilities for manipulating chromosome names, including modifying them to\nfollow a particular naming style. Contains data and functions that\ndefine and allow translation between different chromosome sequence\nnaming conventions (e.g., \"chr1\" versus \"1\"), including a function that\nattempts to place sequence names in their natural, rather than\nlexicographic, order.",
            "name": "r-genomeinfodb"
        },
        {
            "description": "Representation and manipulation of genomic intervals. The ability to\nefficiently represent and manipulate genomic annotations and alignments\nis playing a central role when it comes to analyzing high-throughput\nsequencing data (a.k.a. NGS data). The GenomicRanges package defines\ngeneral purpose containers for storing and manipulating genomic\nintervals and variables defined along a genome. More specialized\ncontainers for representing and manipulating short alignments against a\nreference genome, or a matrix-like summarization of an experiment, are\ndefined in the GenomicAlignments and SummarizedExperiment packages,\nrespectively. Both packages build on top of the GenomicRanges\ninfrastructure.",
            "name": "r-genomicranges"
        },
        {
            "description": "Foundation of integer range manipulation in Bioconductor. Provides\nefficient low-level and highly reusable S4 classes for storing,\nmanipulating and aggregating over annotated ranges of integers.\nImplements an algebra of range operations, including efficient\nalgorithms for finding overlaps and nearest neighbors. Defines efficient\nlist-like classes for storing, transforming and aggregating large\ngrouped data, i.e., collections of atomic vectors and DataFrames.",
            "name": "r-iranges"
        },
        {
            "description": "General Network (HTTP/FTP/...) Client Interface for R. A wrapper for\n'libcurl' <http://curl.haxx.se/libcurl/> Provides functions to allow one\nto compose general HTTP requests and provides convenient functions to\nfetch URIs, get & post forms, etc. and process the results returned by\nthe Web server. This provides a great deal of control over the\nHTTP/FTP/... connection and the form of the request while providing a\nhigher-level interface than is available just using R socket\nconnections. Additionally, the underlying implementation is robust and\nextensive, supporting FTP/FTPS/TFTP (uploads and downloads), SSL/HTTPS,\ntelnet, dict, ldap, and also supports cookies, redirects,\nauthentication, etc.",
            "name": "r-rcurl"
        },
        {
            "description": "Database Interface and 'MySQL' Driver for R. Legacy 'DBI' interface to\n'MySQL' / 'MariaDB' based on old code ported from S-PLUS. A modern\n'MySQL' client based on 'Rcpp' is available from the 'RMariaDB' package.",
            "name": "r-rmysql"
        },
        {
            "description": "'SQLite' Interface for R. This package embeds the SQLite database engine\nin R and provides an interface compliant with the DBI package. The\nsource for the SQLite engine (version 3.8.6) is included.",
            "name": "r-rsqlite"
        },
        {
            "description": "R interface to genome annotation files and the UCSC genome browser.\nExtensible framework for interacting with multiple genome browsers\n(currently UCSC built-in) and manipulating annotation tracks in various\nformats (currently GFF, BED, bedGraph, BED15, WIG, BigWig and 2bit\nbuilt-in). The user may export/import tracks to/from the supported\nbrowsers, as well as query and modify the browser state, such as the\ncurrent viewport.",
            "name": "r-rtracklayer"
        },
        {
            "description": "Foundation of vector-like and list-like containers in Bioconductor. The\nS4Vectors package defines the Vector and List virtual classes and a set\nof generic functions that extend the semantic of ordinary vectors and\nlists in R. Package developers can easily implement vector-like or list-\nlike objects as concrete subclasses of Vector or List. In addition, a\nfew low-level concrete subclasses of general interest (e.g. DataFrame,\nRle, and Hits) are implemented in the S4Vectors package itself (many\nmore are implemented in the IRanges package and in other Bioconductor\ninfrastructure packages).",
            "name": "r-s4vectors"
        },
        {
            "description": "Foundation of external vector representation and manipulation in\nBioconductor. Provides memory efficient S4 classes for storing sequences\n\"externally\" (e.g. behind an R external pointer, or on disk).",
            "name": "r-xvector"
        }
    ],
    "dependent_to": [
        {
            "description": "Investigates Allele Specific Expression. Provides a framework for\nallelic specific expression investigation using RNA-seq data.",
            "name": "r-allelicimbalance"
        },
        {
            "description": "alpine. Fragment sequence bias modeling and correction for RNA-seq\ntranscript abundance estimation.",
            "name": "r-alpine"
        },
        {
            "description": "Basic graphic utilities for visualization of genomic data. The\nbiovizBase package is designed to provide a set of utilities, color\nschemes and conventions for genomic data. It serves as the base for\nvarious high-level packages for biological data visualization. This\nsaves development effort and encourages consistency.",
            "name": "r-biovizbase"
        },
        {
            "description": "Bump Hunter. Tools for finding bumps in genomic data",
            "name": "r-bumphunter"
        },
        {
            "description": "Utilities to create and use Ensembl-based annotation databases. The\npackage provides functions to create and use transcript centric\nannotation databases/packages. The annotation for the databases are\ndirectly fetched from Ensembl using their Perl API. The functionality\nand data is similar to that of the TxDb packages from the\nGenomicFeatures package, but, in addition to retrieve all\ngene/transcript models and annotations from the database, ensembldb\nprovides a filter framework allowing to retrieve annotations for\nspecific entries like genes encoded on a chromosome region or transcript\nmodels of lincRNA genes. EnsDb databases built with ensembldb contain\nalso protein annotations and mappings between proteins and their\nencoding transcripts. Finally, ensembldb provides functions to map\nbetween genomic, transcript and protein coordinates.",
            "name": "r-ensembldb"
        },
        {
            "description": "Annotation package for Illumina Infinium DNA methylation probes.\nCompiled HumanMethylation27 and HumanMethylation450 annotations",
            "name": "r-fdb-infiniummethylation-hg18"
        },
        {
            "description": "Annotation package for Illumina Infinium DNA methylation probes.\nCompiled HumanMethylation27 and HumanMethylation450 annotations.",
            "name": "r-fdb-infiniummethylation-hg19"
        },
        {
            "description": "Lengths of mRNA transcripts for a number of genomes. Length of mRNA\ntranscripts for a number of genomes and gene ID formats, largely based\non UCSC table browser",
            "name": "r-genelendatabase"
        },
        {
            "description": "Visualization tools for genomic data. The ggbio package extends and\nspecializes the grammar of graphics for biological data. The graphics\nare designed to answer common scientific questions, in particular those\noften asked of high throughput genomics data. All core Bioconductor data\nstructures are supported, where appropriate. The package supports\ndetailed views of particular genomic regions, as well as genome-wide\noverviews. Supported overviews include ideograms and grand linear views.\nHigh-level plots include sequence fragment length, edge-linked interval\nto data view, mismatch pileup, and several splicing summaries.",
            "name": "r-ggbio"
        },
        {
            "description": "Plotting data and annotation information along genomic coordinates.\nGenomic data analyses requires integrated visualization of known genomic\ninformation and new experimental data. Gviz uses the biomaRt and the\nrtracklayer packages to perform live annotation queries to Ensembl and\nUCSC and translates this to e.g. gene/transcript structures in viewports\nof the grid graphics package. This results in genomic information\nplotted together with your data.",
            "name": "r-gviz"
        },
        {
            "description": "BeadArray Specific Methods for Illumina Methylation and Expression\nMicroarrays. The lumi package provides an integrated solution for the\nIllumina microarray data analysis. It includes functions of Illumina\nBeadStudio (GenomeStudio) data input, quality control, BeadArray-\nspecific variance stabilization, normalization and gene annotation at\nthe probe level. It also includes the functions of processing Illumina\nmethylation microarrays, especially Illumina Infinium methylation\nmicroarrays.",
            "name": "r-lumi"
        },
        {
            "description": "Handle Illumina methylation data. This package provides classes for\nholding and manipulating Illumina methylation data. Based on eSet, it\ncan contain MIAME information, sample information, feature information,\nand multiple matrices of data. An \"intelligent\" import function,\nmethylumiR can read the Illumina text files and create a MethyLumiSet.\nmethylumIDAT can directly read raw IDAT files from HumanMethylation27\nand HumanMethylation450 microarrays. Normalization, background\ncorrection, and quality control features for GoldenGate, Infinium, and\nInfinium HD arrays are also included.",
            "name": "r-methylumi"
        },
        {
            "description": "Software to enable the smooth interfacing of different database\npackages. The package enables a simple unified interface to several\nannotation packages each of which has its own schema by taking advantage\nof the fact that each of these packages implements a select methods.",
            "name": "r-organismdbi"
        },
        {
            "description": "Annotation package for TxDb object(s). Exposes an annotation databases\ngenerated from UCSC by exposing these as TxDb objects",
            "name": "r-txdb-hsapiens-ucsc-hg18-knowngene"
        },
        {
            "description": "Annotation package for TxDb object(s). Exposes an annotation databases\ngenerated from UCSC by exposing these as TxDb objects.",
            "name": "r-txdb-hsapiens-ucsc-hg19-knowngene"
        },
        {
            "description": "Transcript Quantification Import with Automatic Metadata Transcript\nquantification import from Salmon and alevin with automatic attachment\nof transcript ranges and release information, and other associated\nmetadata. De novo transcriptomes can be linked to the appropriate\nsources with linkedTxomes and shared for computational reproducibility.",
            "name": "r-tximeta"
        },
        {
            "description": "Annotation of Genetic Variants. Annotate variants, compute amino acid\ncoding changes, predict coding outcomes.",
            "name": "r-variantannotation"
        }
    ],
    "description": "Conveniently import and query gene models. A set of tools and methods\nfor making and manipulating transcript centric annotations. With these\ntools the user can easily download the genomic locations of the\ntranscripts, exons and cds of a given organism, from either the UCSC\nGenome Browser or a BioMart database (more sources will be supported in\nthe future). This information is then stored in a local database that\nkeeps track of the relationship between transcripts, exons, cds and\ngenes. Flexible methods are provided for extracting the desired features\nin a convenient format.\n",
    "homepage": "https://bioconductor.org/packages/GenomicFeatures",
    "latest_version": "1.52.0",
    "maintainers": [],
    "name": "r-genomicfeatures",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "commit": "207ff08b38421f0394a8f6450e00fb8713ab463c",
            "name": "1.52.0"
        },
        {
            "commit": "4fc9120ceed9ff59f390c8bbdbd79b212ee35b84",
            "name": "1.50.2"
        },
        {
            "commit": "06e37dc1847d49d91391264caec877ed33abf359",
            "name": "1.48.4"
        },
        {
            "commit": "b0ddea0e101e3861928f3ad353348df047d90382",
            "name": "1.48.3"
        },
        {
            "commit": "d3ab6fd069624904ce7fcdf75dad884473f97975",
            "name": "1.46.4"
        },
        {
            "commit": "2e82891974138b0e976799d64a8938f0be61284d",
            "name": "1.42.1"
        },
        {
            "commit": "28082ec465c91ccaec6881ff348b380edac1b555",
            "name": "1.36.4"
        },
        {
            "commit": "c798b3bb111f4de30632303540074ec1875c1387",
            "name": "1.34.8"
        },
        {
            "commit": "80807d88048858846de3750cecb9431a0e5e69e1",
            "name": "1.32.3"
        },
        {
            "commit": "496bbf81beebd7c934b8d3dcea001e3e4a7d7dee",
            "name": "1.30.3"
        },
        {
            "commit": "ba92381ae93cb1392dad5e6acfab8f6c1d744834",
            "name": "1.28.5"
        }
    ],
    "versions_deprecated": []
}