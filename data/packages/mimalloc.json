{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": null,
            "name": "^cmake@:3.17",
            "spec": "@2.1.7:"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [
        {
            "description": "Clingo with some options used for bootstrapping",
            "name": "clingo-bootstrap"
        },
        {
            "description": "C++ runtime system for parallel and distributed applications.",
            "name": "hpx"
        },
        {
            "description": "mold: A Modern Linker",
            "name": "mold"
        },
        {
            "description": "C++ runtime system for parallellism and concurrency.",
            "name": "pika"
        }
    ],
    "description": "mimalloc is a compact general purpose allocator with excellent\nperformance.\n",
    "homepage": "https://microsoft.github.io/mimalloc",
    "latest_version": "3.1.4",
    "maintainers": [
        "msimberg"
    ],
    "name": "mimalloc",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Build test executables",
            "name": "build_tests"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Use full internal heap invariant checking in DEBUG mode (expensive)",
            "name": "debug_full"
        },
        {
            "default": false,
            "description": "Build with thread sanitizer (needs clang)",
            "name": "debug_tsan"
        },
        {
            "default": false,
            "description": "Build with undefined-behavior sanitizer (needs clang++)",
            "name": "debug_ubsan"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": "shared,static,object",
            "description": "Build shared, static, or object libraries",
            "name": "libs"
        },
        {
            "default": false,
            "description": "Use slightly slower, dlopen-compatible TLS mechanism (Unix)",
            "name": "local_dynamic_tls"
        },
        {
            "default": true,
            "description": "Use interpose to override standard malloc on macOS",
            "name": "osx_interpose"
        },
        {
            "default": true,
            "description": "Use malloc zone to override standard malloc on macOS",
            "name": "osx_zone"
        },
        {
            "default": true,
            "description": "Override the standard malloc interface (e.g. define entry points for malloc() etc)",
            "name": "override"
        },
        {
            "default": true,
            "description": "Enable padding to detect heap block overflow (used only in DEBUG mode)",
            "name": "padding"
        },
        {
            "default": false,
            "description": "Use full security mitigations (like guard pages, allocation randomization, double-free mitigation, and free-list corruption detection)",
            "name": "secure"
        },
        {
            "default": false,
            "description": "Generate assembly files",
            "name": "see_asm"
        },
        {
            "default": false,
            "description": "Show error and warning messages by default (only enabled by default in DEBUG mode)",
            "name": "show_errors"
        },
        {
            "default": false,
            "description": "Skip collecting memory on program exit",
            "name": "skip_collect_on_exit"
        },
        {
            "default": false,
            "description": "Use the C++ compiler to compile the library (instead of the C compiler)",
            "name": "use_cxx"
        },
        {
            "default": false,
            "description": "Enable abort() call on memory allocation failure by default",
            "name": "xmalloc"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "3.1.4",
            "sha256": "84992bca18d6f74829b884c369de2707085b8248aaf3a1368e21f3993020171f"
        },
        {
            "name": "3.0.3",
            "sha256": "baf343041420e2924e1760bbbc0c111101c44e1cecb998e7951f646a957ee05f"
        },
        {
            "name": "3.0.1",
            "sha256": "6a514ae31254b43e06e2a89fe1cbc9c447fdbf26edc6f794f3eb722f36e28261"
        },
        {
            "name": "2.1.9",
            "sha256": "dd8ff701691f19bf4e225d42ef0d3d5e6ca0e03498ee4f044a0402e4697e4a20"
        },
        {
            "name": "2.1.7",
            "sha256": "0eed39319f139afde8515010ff59baf24de9e47ea316a315398e8027d198202d"
        },
        {
            "name": "2.1.2",
            "sha256": "2b1bff6f717f9725c70bf8d79e4786da13de8a270059e4ba0bdd262ae7be46eb"
        },
        {
            "name": "2.1.1",
            "sha256": "38b9660d0d1b8a732160191609b64057d8ccc3811ab18b7607bc93ca63a6010f"
        },
        {
            "name": "2.1.0",
            "sha256": "86e5e53e38bace59a9eb20d27e7bd7c5f448cb246a887d4f99478fa4809731fc"
        },
        {
            "name": "2.0.9",
            "sha256": "4a29edae32a914a706715e2ac8e7e4109e25353212edeed0888f4e3e15db5850"
        },
        {
            "name": "2.0.7",
            "sha256": "f23aac6c73594e417af50cb38f1efed88ef1dc14a490f0eff07c7f7b079810a4"
        },
        {
            "name": "2.0.6",
            "sha256": "9f05c94cc2b017ed13698834ac2a3567b6339a8bde27640df5a1581d49d05ce5"
        },
        {
            "name": "1.8.9",
            "sha256": "3aabe30485c4e908c1bf04136d5b95c08c6e73fa6fe6e1ec68b4851d3c60ee47"
        },
        {
            "name": "1.8.2",
            "sha256": "4058d53d6ceb75862f32c30a6ee686c3cbb5e965b2c324b828ca454f7fe064f9"
        },
        {
            "name": "1.8.1",
            "sha256": "7aaa54c3ed1feac90b6187eb93108e808660c6e103b0fa6a7e2fabb58c3147d5"
        },
        {
            "name": "1.8.0",
            "sha256": "4bb69b49821499256e7d9b2a47427c4661f5ad3f1547a21f7bdea7e3bcbc60f8"
        },
        {
            "name": "1.7.9",
            "sha256": "45e05be518363d32b2cdcce1a1fac3580895ea2e4524e1a3c7e71145cb58659f"
        },
        {
            "name": "1.7.7",
            "sha256": "0f6663be1e1764851bf9563fcf7a6b3330e23b933eb4737dd07e3289b87895fe"
        },
        {
            "name": "1.7.6",
            "sha256": "d74f86ada2329016068bc5a243268f1f555edd620b6a7d6ce89295e7d6cf18da"
        },
        {
            "branch": "dev-slice",
            "name": "dev-slice"
        },
        {
            "branch": "dev",
            "name": "dev"
        }
    ],
    "versions_deprecated": []
}