{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\".",
            "name": "py-appdirs"
        },
        {
            "description": "The aim of the decorator module it to simplify the usage of decorators\nfor the average programmer, and to popularize decorators by showing\nvarious non-trivial examples.",
            "name": "py-decorator"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\"",
            "name": "py-platformdirs"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Python 2 and 3 compatibility utilities.",
            "name": "py-six"
        },
        {
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing).",
            "name": "py-typing-extensions"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "cgen offers a simple abstract syntax tree for C and related languages\n(C++/CUDA/OpenCL) to allow structured code generation from Python.",
            "name": "py-cgen"
        },
        {
            "description": "CodePy is a C metaprogramming toolkit for Python. It handles two aspects\nof metaprogramming: - Generating C source code. - Compiling this source\ncode and dynamically loading it into the Python interpreter.",
            "name": "py-codepy"
        },
        {
            "description": "Interoperability between Python and Gmsh",
            "name": "py-gmsh-interop"
        },
        {
            "description": "Simplicial Mesh Generation from Python",
            "name": "py-meshpy"
        },
        {
            "description": "Basis Functions and Node Sets for Interpolation",
            "name": "py-modepy"
        },
        {
            "description": "PyCUDA gives you easy, Pythonic access to Nvidia's CUDA parallel\ncomputation API",
            "name": "py-pycuda"
        },
        {
            "description": "PyFR is an open-source Python based framework for solving advection-\ndiffusion type problems on streaming architectures using the Flux\nReconstruction approach of Huynh.",
            "name": "py-pyfr"
        },
        {
            "description": "A simple package to do symbolic math (focus on code gen and DSLs)",
            "name": "py-pymbolic"
        },
        {
            "description": "PyNucleus is a finite element code that specifically targets nonlocal\noperators.",
            "name": "py-pynucleus"
        },
        {
            "description": "Python wrapper for OpenCL.",
            "name": "py-pyopencl"
        }
    ],
    "description": "A collection of tools for Python\n",
    "homepage": "https://github.com/inducer/pytools",
    "latest_version": "2022.1.14",
    "maintainers": [],
    "name": "py-pytools",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Add numpy dependency",
            "name": "numpy"
        }
    ],
    "versions": [
        {
            "name": "2022.1.14",
            "sha256": "41017371610bb2a03685597c5285205e6597c7f177383d95c8b871244b12c14e"
        },
        {
            "name": "2022.1.12",
            "sha256": "4d62875e9a2ab2a24e393a9a8b799492f1a721bffa840af3807bfd42871dd1f4"
        },
        {
            "name": "2021.2.9",
            "sha256": "db6cf83c9ba0a165d545029e2301621486d1e9ef295684072e5cd75316a13755"
        },
        {
            "name": "2019.1.1",
            "sha256": "ce2d702ae4ef10a70197b00b93141461140d00578f2a862fa946ca1446a300db"
        },
        {
            "name": "2016.2.6",
            "sha256": "6dd49932b8f81a8b622685cff3dd515e351a9290aef0fd5d020e4df00c06aa95"
        }
    ],
    "versions_deprecated": []
}