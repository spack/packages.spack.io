{
    "aliases": [],
    "build_system": "RPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information.",
            "name": "r"
        },
        {
            "description": "Biobase: Base functions for Bioconductor. Functions that are needed by\nmany other packages or which replace R functions.",
            "name": "r-biobase"
        },
        {
            "description": "S4 generic functions used in Bioconductor. The package defines S4\ngeneric functions used in Bioconductor.",
            "name": "r-biocgenerics"
        },
        {
            "description": "Support Functions and Datasets for Venables and Ripley's MASS. Functions\nand datasets to support Venables and Ripley, \"Modern Applied Statistics\nwith S\" (4th edition, 2002).",
            "name": "r-mass"
        },
        {
            "description": "Seamless R and C++ Integration. The 'Rcpp' package provides R functions\nas well as C++ classes which; offer a seamless integration of R and C++.\nMany R data types and objects can be; mapped back and forth to C++\nequivalents which facilitates both writing of new; code as well as\neasier integration of third-party libraries. Documentation; about 'Rcpp'\nis provided by several vignettes included in this package, via the;\n'Rcpp Gallery' site at <https://gallery.rcpp.org>, the paper by\nEddelbuettel and; Francois (2011, <doi:10.18637/jss.v040.i08>), the book\nby Eddelbuettel (2013,; <doi:10.1007/978-1-4614-6868-4>) and the paper\nby Eddelbuettel and Balamuta (2018,;\n<doi:10.1080/00031305.2017.1375990>); see 'citation(\"Rcpp\")' for\ndetails.",
            "name": "r-rcpp"
        }
    ],
    "dependent_to": [
        {
            "description": "Base Functions and Classes for Mass Spectrometry and Proteomics. MSnbase\nprovides infrastructure for manipulation, processing and visualisation\nof mass spectrometry and proteomics data, ranging from raw to\nquantitative and annotated data.",
            "name": "r-msnbase"
        },
        {
            "description": "Somatic Signatures. The SomaticSignatures package identifies mutational\nsignatures of single nucleotide variants (SNVs). It provides a\ninfrastructure related to the methodology described in Nik-Zainal (2012,\nCell), with flexibility in the matrix decomposition algorithms.",
            "name": "r-somaticsignatures"
        }
    ],
    "description": "A collection of PCA methods. Provides Bayesian PCA, Probabilistic PCA,\nNipals PCA, Inverse Non-Linear PCA and the conventional SVD PCA. A\ncluster based method for missing value estimation is included for\ncomparison. BPCA, PPCA and NipalsPCA may be used to perform PCA on\nincomplete data as well as for accurate missing value estimation. A set\nof methods for printing and plotting the results is also provided. All\nPCA methods make use of the same data structure (pcaRes) to provide a\ncommon interface to the PCA results. Initiated at the Max-Planck\nInstitute for Molecular Plant Physiology, Golm, Germany.\n",
    "homepage": "https://bioconductor.org/packages/pcaMethods",
    "latest_version": "1.92.0",
    "maintainers": [],
    "name": "r-pcamethods",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "commit": "ecbbc5b96b8fa79342611af8f798dd43c36d6699",
            "name": "1.92.0"
        },
        {
            "commit": "52474bc6d125122e89834328a1a780988349756f",
            "name": "1.90.0"
        },
        {
            "commit": "02fb58d6fe35579b86fb2ebd2eaf92e6b53444d2",
            "name": "1.88.0"
        },
        {
            "commit": "9419cfa18c18dfbd1e1194127fd120ab456c3657",
            "name": "1.86.0"
        },
        {
            "commit": "d500b3363308f1f8ca70625c5cd10cce59b27641",
            "name": "1.82.0"
        },
        {
            "commit": "5db995330ced37dfd5ddad6ad1d90b4815d3127a",
            "name": "1.76.0"
        },
        {
            "commit": "1b8f0a5cdfe3664119d0d7e926a2e0fe7320133c",
            "name": "1.74.0"
        },
        {
            "commit": "1bb8c7d056645e62ee5179f6bb30b6594ebf3bfd",
            "name": "1.72.0"
        },
        {
            "commit": "3368fad48ea930775505fd26e4179d7714d633d8",
            "name": "1.70.0"
        },
        {
            "commit": "c8d7c93dcaf7ef728f3d089ae5d55771b320bdab",
            "name": "1.68.0"
        }
    ],
    "versions_deprecated": []
}