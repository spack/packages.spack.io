{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.",
            "name": "py-matplotlib"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "PyYAML is a YAML parser and emitter for Python.",
            "name": "py-pyyaml"
        },
        {
            "description": "Python HTTP for Humans.",
            "name": "py-requests"
        },
        {
            "description": "Fundamental algorithms for scientific computing in Python.",
            "name": "py-scipy"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Wavelet and simulated Annealing SliP inversion (WASP). This code uses a\nnonlinear simulated annealing inversion method to model slip amplitude,\nrake, rupture time, and rise time on a discretized fault plane, finding\nthe solution that best fits the observations in the wavelet domain.",
            "name": "neic-finitefault"
        }
    ],
    "description": "Pyrocko is an open source seismology toolbox and library, written in the\nPython programming language\n",
    "homepage": "https://pyrocko.org/",
    "latest_version": "2024.1.10",
    "maintainers": [
        "snehring"
    ],
    "name": "py-pyrocko",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "2024.1.10",
            "sha256": "4fb2c72d0b036ce3c70bfd066e1ce4946eb93d9190d202e9fc689c1f29e4845f"
        },
        {
            "name": "2023.6.29",
            "sha256": "779a234592bfcfa1c96939fee53d0dfc5cadf111432a2679f08166cfd8bcae41"
        }
    ],
    "versions_deprecated": []
}