{
    "aliases": [],
    "build_system": "RPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information.",
            "name": "r"
        },
        {
            "description": "Methods for Affymetrix Oligonucleotide Arrays. The package contains\nfunctions for exploratory oligonucleotide array analysis. The dependence\non tkWidgets only concerns few convenience functions. 'affy' is fully\nfunctional without it.",
            "name": "r-affy"
        },
        {
            "description": "Biobase: Base functions for Bioconductor. Functions that are needed by\nmany other packages or which replace R functions.",
            "name": "r-biobase"
        },
        {
            "description": "S4 generic functions used in Bioconductor. The package defines S4\ngeneric functions used in Bioconductor.",
            "name": "r-biocgenerics"
        },
        {
            "description": "Bioconductor facilities for parallel evaluation. This package provides\nmodified versions and novel implementation of functions for parallel\nevaluation, tailored to use with Bioconductor objects.",
            "name": "r-biocparallel"
        },
        {
            "description": "Create Compact Hash Digests of R Objects. Implementation of a function\n'digest()' for the creation of hash digests of arbitrary R objects\n(using the md5, sha-1, sha-256, crc32, xxhash and murmurhash algorithms)\npermitting easy comparison of R language objects, as well as a function\n'hmac()' to create hash-based message authentication code. The md5\nalgorithm by Ron Rivest is specified in RFC 1321, the sha-1 and sha-256\nalgorithms are specified in FIPS-180-1 and FIPS-180-2, and the crc32\nalgorithm is described in\nftp://ftp.rocksoft.com/cliens/rocksoft/papers/crc_v3.txt. For md5,\nsha-1, sha-256 and aes, this package uses small standalone\nimplementations that were provided by Christophe Devine. For crc32, code\nfrom the zlib library is used. For sha-512, an implementation by Aaron\nD. Gifford is used. For xxhash, the implementation by Yann Collet is\nused. For murmurhash, an implementation by Shane Day is used. Please\nnote that this package is not meant to be deployed for cryptographic\npurposes for which more comprehensive (and widely tested) libraries such\nas OpenSSL should be used.",
            "name": "r-digest"
        },
        {
            "description": "Create Elegant Data Visualisations Using the Grammar of Graphics. A\nsystem for 'declaratively' creating graphics, based on \"The Grammar of\nGraphics\". You provide the data, tell 'ggplot2' how to map variables to\naesthetics, what graphical primitives to use, and it takes care of the\ndetails.",
            "name": "r-ggplot2"
        },
        {
            "description": "impute: Imputation for microarray data. Imputation for microarray data\n(currently KNN only)",
            "name": "r-impute"
        },
        {
            "description": "Foundation of integer range manipulation in Bioconductor. Provides\nefficient low-level and highly reusable S4 classes for storing,\nmanipulating and aggregating over annotated ranges of integers.\nImplements an algebra of range operations, including efficient\nalgorithms for finding overlaps and nearest neighbors. Defines efficient\nlist-like classes for storing, transforming and aggregating large\ngrouped data, i.e., collections of atomic vectors and DataFrames.",
            "name": "r-iranges"
        },
        {
            "description": "Trellis Graphics for R. A powerful and elegant high-level data\nvisualization system inspired by Trellis graphics, with an emphasis on\nmultivariate data. Lattice is sufficient for typical graphics needs, and\nis also flexible enough to handle most nonstandard requirements. See\n?Lattice for an introduction.",
            "name": "r-lattice"
        },
        {
            "description": "Quantitative Analysis of Mass Spectrometry Data. A complete analysis\npipeline for matrix-assisted laser desorption/ionization-time-of-flight\n(MALDI-TOF) and other two-dimensional mass spectrometry data. In\naddition to commonly used plotting and processing methods it includes\ndistinctive features, namely baseline subtraction methods such as\nmorphological filters (TopHat) or the statistics-sensitive non-linear\niterative peak-clipping algorithm (SNIP), peak alignment using warping\nfunctions, handling of replicated measurements as well as allowing\nspectra with different resolutions.",
            "name": "r-maldiquant"
        },
        {
            "description": "Support Functions and Datasets for Venables and Ripley's MASS. Functions\nand datasets to support Venables and Ripley, \"Modern Applied Statistics\nwith S\" (4th edition, 2002).",
            "name": "r-mass"
        },
        {
            "description": "Core Utils for Mass Spectrometry Data. MsCoreUtils defines low-level\nfunctions for mass spectrometry data and is independent of any high-\nlevel data structures. These functions include mass spectra processing\nfunctions (noise estimation, smoothing, binning), quantitative\naggregation functions (median polish, robust summarisation, ...),\nmissing data imputation, data normalisation (quantiles, vsn, ...) as\nwell as misc helper functions, that are used across high-level data\nstructure within the R for Mass Spectrometry packages.",
            "name": "r-mscoreutils"
        },
        {
            "description": "An mzIdentML parser for R. A parser for mzIdentML files implemented\nusing the XML package. The parser tries to be general and able to handle\nall types of mzIdentML files with the drawback of having less 'pretty'\noutput than a vendor specific parser. Please contact the maintainer with\nany problems and supply an mzIdentML file so the problems can be fixed\nquickly.",
            "name": "r-mzid"
        },
        {
            "description": "parser for netCDF, mzXML, mzData and mzML and mzIdentML files (mass\nspectrometry data). mzR provides a unified API to the common file\nformats and parsers available for mass spectrometry data. It comes with\na wrapper for the ISB random access parser for mass spectrometry mzXML,\nmzData and mzML files. The package contains the original code written by\nthe ISB, and a subset of the proteowizard library for mzML and\nmzIdentML. The netCDF reading code has previously been used in XCMS.",
            "name": "r-mzr"
        },
        {
            "description": "A collection of PCA methods. Provides Bayesian PCA, Probabilistic PCA,\nNipals PCA, Inverse Non-Linear PCA and the conventional SVD PCA. A\ncluster based method for missing value estimation is included for\ncomparison. BPCA, PPCA and NipalsPCA may be used to perform PCA on\nincomplete data as well as for accurate missing value estimation. A set\nof methods for printing and plotting the results is also provided. All\nPCA methods make use of the same data structure (pcaRes) to provide a\ncommon interface to the PCA results. Initiated at the Max-Planck\nInstitute for Molecular Plant Physiology, Golm, Germany.",
            "name": "r-pcamethods"
        },
        {
            "description": "Tools for Splitting, Applying and Combining Data. A set of tools that\nsolves a common set of problems: you need to break a big problem down\ninto manageable pieces, operate on each piece and then put all the\npieces back together. For example, you might want to fit a model to each\nspatial location or time point in your study, summarise data by panels\nor collapse high-dimensional arrays to simpler summary statistics. The\ndevelopment of 'plyr' has been generously supported by 'Becton\nDickinson'.",
            "name": "r-plyr"
        },
        {
            "description": "A collection of pre-processing functions. A library of core\npreprocessing routines.",
            "name": "r-preprocesscore"
        },
        {
            "description": "S4 generic functions for Bioconductor proteomics infrastructure. S4\ngeneric functions needed by Bioconductor proteomics packages.",
            "name": "r-protgenerics"
        },
        {
            "description": "Seamless R and C++ Integration. The 'Rcpp' package provides R functions\nas well as C++ classes which; offer a seamless integration of R and C++.\nMany R data types and objects can be; mapped back and forth to C++\nequivalents which facilitates both writing of new; code as well as\neasier integration of third-party libraries. Documentation; about 'Rcpp'\nis provided by several vignettes included in this package, via the;\n'Rcpp Gallery' site at <https://gallery.rcpp.org>, the paper by\nEddelbuettel and; Francois (2011, <doi:10.18637/jss.v040.i08>), the book\nby Eddelbuettel (2013,; <doi:10.1007/978-1-4614-6868-4>) and the paper\nby Eddelbuettel and Balamuta (2018,;\n<doi:10.1080/00031305.2017.1375990>); see 'citation(\"Rcpp\")' for\ndetails.",
            "name": "r-rcpp"
        },
        {
            "description": "Foundation of vector-like and list-like containers in Bioconductor. The\nS4Vectors package defines the Vector and List virtual classes and a set\nof generic functions that extend the semantic of ordinary vectors and\nlists in R. Package developers can easily implement vector-like or list-\nlike objects as concrete subclasses of Vector or List. In addition, a\nfew low-level concrete subclasses of general interest (e.g. DataFrame,\nRle, and Hits) are implemented in the S4Vectors package itself (many\nmore are implemented in the IRanges package and in other Bioconductor\ninfrastructure packages).",
            "name": "r-s4vectors"
        },
        {
            "description": "Scale Functions for Visualization. Graphical scales map data to\naesthetics, and provide methods for automatically determining breaks and\nlabels for axes and legends.",
            "name": "r-scales"
        },
        {
            "description": "Variance stabilization and calibration for microarray data. The package\nimplements a method for normalising microarray intensities, and works\nfor single- and multiple-color arrays. It can also be used for data from\nother technologies, as long as they have similar format. The method uses\na robust variant of the maximum-likelihood estimator for an additive-\nmultiplicative error model and affine calibration. The model\nincorporates data calibration step (a.k.a. normalization), a model for\nthe dependence of the variance on the mean intensity and a variance\nstabilizing data transformation. Differences between transformed\nintensities are analogous to \"normalized log-ratios\". However, in\ncontrast to the latter, their variance is independent of the mean, and\nthey are usually more sensitive and specific in detecting differential\ntranscription.",
            "name": "r-vsn"
        },
        {
            "description": "Tools for Parsing and Generating XML Within R and S-Plus. Many\napproaches for both reading and creating XML (and HTML) documents\n(including DTDs), both local and accessible via HTTP or FTP. Also offers\naccess to an 'XPath' \"interpreter\".",
            "name": "r-xml"
        }
    ],
    "dependent_to": [],
    "description": "Base Functions and Classes for Mass Spectrometry and Proteomics. MSnbase\nprovides infrastructure for manipulation, processing and visualisation\nof mass spectrometry and proteomics data, ranging from raw to\nquantitative and annotated data.\n",
    "homepage": "https://bioconductor.org/packages/MSnbase",
    "latest_version": "2.26.0",
    "maintainers": [],
    "name": "r-msnbase",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "commit": "3e6268a86b93c474e37b21a9b8f564812202b2b6",
            "name": "2.26.0"
        },
        {
            "commit": "b96e0142c663c2cb01e92479816a503c46caa1a8",
            "name": "2.24.0"
        },
        {
            "commit": "4f6e5767eee91b2105781b494fcabcfed16eba2d",
            "name": "2.22.0"
        },
        {
            "commit": "c86ac8b341832f2b577f2153258c1abf064e6448",
            "name": "2.20.4"
        },
        {
            "commit": "4d88b4edd1af59474462b1b06ad0ec5831f3a878",
            "name": "2.16.1"
        },
        {
            "commit": "4d5899bc9c714f0b1a70cddd537cd4621b2b53b0",
            "name": "2.10.1"
        },
        {
            "commit": "ef883752c5e92d445647bc5b5d23d5df320db415",
            "name": "2.8.3"
        },
        {
            "commit": "46836860ce0281eef135303f2e2948303d67f68c",
            "name": "2.6.4"
        },
        {
            "commit": "c045d65daa730c7837852e6343a05cae9644ab5e",
            "name": "2.4.2"
        },
        {
            "commit": "d6e8fb7f106d05096fa9074da0f829ac8f02c197",
            "name": "2.2.0"
        }
    ],
    "versions_deprecated": []
}