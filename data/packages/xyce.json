{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": "xyce: Disabling shared libraries is incompatible with the activation of plug-in support",
            "name": "~shared",
            "spec": "+plugin"
        },
        {
            "description": "xyce: cray-libsci not supported with +pymi_static_tpls",
            "name": "^cray-libsci",
            "spec": "+pymi_static_tpls"
        },
        {
            "description": "xyce: essl not supported with +pymi_static_tpls",
            "name": "^essl",
            "spec": "+pymi_static_tpls"
        },
        {
            "description": "xyce: flexiblas not supported with +pymi_static_tpls",
            "name": "^flexiblas",
            "spec": "+pymi_static_tpls"
        },
        {
            "description": "xyce: nvhpc not supported with +pymi_static_tpls",
            "name": "^nvhpc",
            "spec": "+pymi_static_tpls"
        }
    ],
    "dependencies": [
        {
            "description": "ADMS is a code generator that converts electrical compact device models\nspecified in high-level description language into ready-to-compile c\ncode for the API of spice simulators.",
            "name": "adms"
        },
        {
            "description": "Arm Performance Libraries provides optimized standard core math\nlibraries for high-performance computing applications on Arm processors.",
            "name": "armpl-gcc"
        },
        {
            "description": "Automatically Tuned Linear Algebra Software, generic shared ATLAS is an\napproach for the automatic generation and optimization of numerical\nsoftware. Currently ATLAS supplies optimized versions for the complete\nset of linear algebra kernels known as the Basic Linear Algebra\nSubroutines (BLAS), and a subset of the linear algebra routines in the\nLAPACK library.",
            "name": "atlas"
        },
        {
            "description": "Bison is a general-purpose parser generator that converts an annotated\ncontext-free grammar into a deterministic LR or generalized LR (GLR)\nparser employing LALR(1) parser tables.",
            "name": "bison"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "BLIS is a portable software framework for instantiating high-performance\nBLAS-like dense linear algebra libraries. The framework was designed to\nisolate essential kernels of computation that, when optimized,\nimmediately enable optimized implementations of most of its commonly\nused and computationally intensive operations. BLIS is written in ISO\nC99 and available under a new/modified/3-clause BSD license. While BLIS\nexports a new BLAS-like API, it also includes a BLAS compatibility layer\nwhich gives application developers access to BLIS implementations via\ntraditional BLAS routine calls. An object-based API unique to BLIS is\nalso available.",
            "name": "blis"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "CLBlast is a modern, lightweight, performant and tunable OpenCL BLAS\nlibrary written in C++11. It is designed to leverage the full\nperformance potential of a wide variety of OpenCL devices from different\nvendors, including desktop and laptop GPUs, embedded GPUs, and other\naccelerators. CLBlast implements BLAS routines: basic linear algebra\nsubprograms operating on vectors and matrices.",
            "name": "clblast"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "Flex is a tool for generating scanners.",
            "name": "flex"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Intel oneAPI Math Kernel Library (Intel oneMKL; formerly Intel Math\nKernel Library or Intel MKL), is a library of optimized math routines\nfor science, engineering, and financial applications. Core math\nfunctions include BLAS, LAPACK, ScaLAPACK, sparse solvers, fast Fourier\ntransforms, and vector math. LICENSE INFORMATION: By downloading and\nusing this software, you agree to the terms and conditions of the\nsoftware license agreements at https://intel.ly/393CijO.",
            "name": "intel-oneapi-mkl"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "LAPACK version 3.X is a comprehensive FORTRAN library that does linear\nalgebra operations including matrix inversions, least squared solutions\nto linear sets of equations, eigenvector analysis, singular value\ndecomposition, etc. It is a very comprehensive and reputable package\nthat has found extensive use in the scientific community.",
            "name": "netlib-lapack"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "OpenBLAS: An optimized BLAS library",
            "name": "openblas"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        },
        {
            "description": "The Trilinos Project is an effort to develop algorithms and enabling\ntechnologies within an object-oriented software framework for the\nsolution of large-scale, complex multi-physics engineering and\nscientific problems. A unique design feature of Trilinos is its focus on\npackages.",
            "name": "trilinos"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "veclibfort"
        }
    ],
    "dependent_to": [
        {
            "description": "QUCS - Quite Universal Circuit Simulator Qucs is an integrated circuit\nsimulator which means you are able to setup a circuit with a graphical\nuser interface (GUI) and simulate the large-signal, small-signal and\nnoise behaviour of the circuit. After that simulation has finished you\ncan view the simulation results on a presentation page or window.",
            "name": "qucs"
        }
    ],
    "description": "Xyce (rhymes with 'spice') is an open source, SPICE-compatible, high-\nperformance analog circuit simulator, Xyce supports the standard\nanalysis capabilities found in other SPICE-like codes, such as DC,\ntransient, AC, and small-signal noise analyses; it also has less common\ncapabilities, such as harmonic balance, sensitivity analysis, and\nuncertainty propagation techniques. Xyce supplies industry-standard\ncompact models and can support custom models via its Verilog-A model\ncompiler. Foundry process-development kits (PDKs) in other SPICE syntax\ncan be used via the XDM netlist translator, which is included as part of\nthe Xyce package. In addition to supporting use on all common desktop\nplatforms (Mac, Windows, Linux), Xyce can also be compiled to run in a\nlarge-scale parallel mode to provide scalable, numerically accurate\nanalog simulation of circuits containing millions of devices, or more.\n",
    "homepage": "https://xyce.sandia.gov",
    "latest_version": "7.8.0",
    "maintainers": [
        "kuberry",
        "tbird2001"
    ],
    "name": "xyce",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.xyce",
            "reverse": false,
            "sha256": "1aeaac78830fbc9ae089a50ef61c6cbd89d29ead54ce7fdca258e194fa05b1a3",
            "url": "https://github.com/xyce/xyce/commit/2f95783637a5171a7f65f5d18c24d9a580a7f39e.patch?full_index=1",
            "version": "@:7.6",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.xyce",
            "reverse": false,
            "sha256": "3c32faeeea0bb29be44ec20e414670c9fd375f9ed921a7f6e9fd3de02c28859d",
            "url": "https://github.com/xyce/xyce/commit/40dbc0e0341a5cf9a7fa82a87313869dc284fdd9.patch?full_index=1",
            "version": "@7.3:7.5+shared",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.xyce",
            "reverse": false,
            "sha256": "077f91d2ff0649b3f7e83c224f71a030521c6fb5a84b29acd772d5657cdb6c23",
            "url": "https://github.com/xyce/xyce/commit/fdf457fce1b1511b8a29d134d38e515fb7149246.patch?full_index=1",
            "version": "@7.4:7.6+pymi",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.xyce",
            "reverse": false,
            "sha256": "62c3d0c17b3225be5f61b6ec3d9cf762cc08bb20a80e768d87a37e87c522bbf1",
            "url": "https://github.com/Xyce/Xyce/commit/47d9dd04ec55cd8722cb3704a88beb228dfcf363.patch?full_index=1",
            "version": "@:7.7",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.xyce",
            "relative_path": "454-cmake-xyce.patch",
            "reverse": false,
            "sha256": "4d47cd1f10607205e64910ac124c6dd329f1ecbf861416e9da24a1736f2149ff",
            "version": "@7.6:",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "11",
            "description": "C++ standard",
            "name": "cxxstd"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Enable MPI support",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Enable plug-in support for Xyce",
            "name": "plugin"
        },
        {
            "default": false,
            "description": "Enable Python Model Interpreter for Xyce",
            "name": "pymi"
        },
        {
            "default": true,
            "description": "Require static blas build for PyMi",
            "name": "pymi_static_tpls"
        },
        {
            "default": false,
            "description": "Enable shared libraries for Xyce",
            "name": "shared"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "7.8.0",
            "sha256": "f763b7d5ad6defd25d2c7e5cc95155958cd12510a5e22a179daab459b21fa713"
        },
        {
            "name": "7.7.0",
            "sha256": "1b95450e1905c3af3c16b42c41d5ef1f8ab0e640f48086d0cb4d52961a90a175"
        }
    ],
    "versions_deprecated": [
        {
            "name": "7.6.0",
            "sha256": "fc25557e2edc82adbe0436a15fca2929a2f9ab08ddf91f1a47aab5e8b27ec88c"
        },
        {
            "name": "7.5.0",
            "sha256": "854d7d5e19e0ee2138d1f20f10f8f27f2bebb94ec81c157040955cff7250dacd"
        },
        {
            "name": "7.4.0",
            "sha256": "2d6bc1b7377834b2e0bf50131e96728c5be83dbb3548e765bb48911067c87c91"
        },
        {
            "name": "7.3.0",
            "sha256": "43869a70967f573ff6f00451db3f4642684834bdad1fd3926380e3789016b446"
        },
        {
            "name": "7.2.0",
            "sha256": "cf49705278ecda46373784bb24925cb97f9017b6adff49e4416de146bdd6a4b5"
        }
    ]
}