{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "Cray's Process Management Interface library",
            "name": "cray-pmi"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "Doxygen is the de facto standard tool for generating documentation from\nannotated C++ sources, but it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba,\nMicrosoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some\nextent D..",
            "name": "doxygen"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Google's fast malloc/free implementation, especially for multi-threaded\napplications. Contains tcmalloc, heap-checker, heap-profiler, and cpu-\nprofiler.",
            "name": "gperftools"
        },
        {
            "description": "The Open Fabrics Interfaces (OFI) is a framework focused on exporting\nfabric communication services to applications.",
            "name": "libfabric"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "PAPI provides the tool designer and application engineer with a\nconsistent interface and methodology for use of the performance counter\nhardware found in most major microprocessors. PAPI enables software\nengineers to see, in near real time, the relation between software\nperformance and processor events. In addition Component PAPI provides\naccess to a collection of components that expose performance measurement\nopportunities across the hardware and software stack.",
            "name": "papi"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "RDMA core userspace libraries and daemons",
            "name": "rdma-core"
        },
        {
            "description": "a communication library implementing high-performance messaging for\nMPI/PGAS frameworks",
            "name": "ucx"
        }
    ],
    "dependent_to": [],
    "description": "LCI: the Lightweight Communication Interface\n",
    "homepage": "https://github.com/uiuc-hpc/lci",
    "latest_version": "2.0.0-beta.1",
    "maintainers": [
        "JiakunYan",
        "omor1"
    ],
    "name": "lci",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": false,
            "description": "Build LCI benchmarks",
            "name": "benchmarks"
        },
        {
            "default": "auto",
            "description": "Bootstrap backends to enable",
            "name": "bootstrap"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "auto",
            "description": "Cache line size, in bytes",
            "name": "cache-line"
        },
        {
            "default": false,
            "description": "Enable the debug mode",
            "name": "debug"
        },
        {
            "default": "auto",
            "description": "Order of process management backends to try by default",
            "name": "default-pm"
        },
        {
            "default": false,
            "description": "Build LCI documentation",
            "name": "docs"
        },
        {
            "default": "auto",
            "description": "Whether to use registration cache by default",
            "name": "dreg"
        },
        {
            "default": "auto",
            "description": "Process management backends to enable",
            "name": "enable-pm"
        },
        {
            "default": false,
            "description": "Build LCI examples",
            "name": "examples"
        },
        {
            "default": "ibv",
            "description": "Communication fabric",
            "name": "fabric"
        },
        {
            "default": "auto",
            "description": "Max number of completion queue entries that can be posted (completion queue length) at the fabric layer by default",
            "name": "fabric-ncqes-max"
        },
        {
            "default": "auto",
            "description": "Max number of receive descriptors that can be posted (receive queue length) at the fabric layer by default",
            "name": "fabric-nrecvs-max"
        },
        {
            "default": "auto",
            "description": "Max number of send descriptors that can be posted (send queue length) at the fabric layer by default",
            "name": "fabric-nsends-max"
        },
        {
            "default": "ninja",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Enable thread-safe LCI_progress function",
            "name": "multithread-progress"
        },
        {
            "default": "auto",
            "description": "Number of packets by default",
            "name": "npackets"
        },
        {
            "default": "auto",
            "description": "Size of packet by default",
            "name": "packet-size"
        },
        {
            "default": false,
            "description": "Enable the PAPI plugin to collect hardware counters",
            "name": "papi"
        },
        {
            "default": false,
            "description": "Enable the performance counters",
            "name": "pcounter"
        },
        {
            "default": true,
            "description": "Enable tcmalloc for memory management",
            "name": "tcmalloc"
        },
        {
            "default": false,
            "description": "Build LCI tests",
            "name": "tests"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "2.0.0-beta.1",
            "sha256": "5d28b88e4a5aed67c3f1fe16eccf60c7237a9c8bba890b9c479fb21d30153b39"
        },
        {
            "name": "1.7.9",
            "sha256": "49f212d034e7d0b63af29e76b17935a3221830090af02c0e0912cea8a7a58d91"
        },
        {
            "name": "1.7.8",
            "sha256": "9d54dd669b54e715162c5184a0e5cc64fd479e9fda60b2a490197d901368afda"
        },
        {
            "name": "1.7.7",
            "sha256": "c310f699b7b4317a2f5c3557f85c240fe3c85d2d06618dd248434ef807d53779"
        },
        {
            "name": "1.7.6",
            "sha256": "c88ccea2ad277ed38fc23187771b52b6fb212ed4429114717bfa8887ed21665c"
        },
        {
            "name": "1.7.5",
            "sha256": "13e4084c9e7aaf55966ba5aa0423164b8fd21ee7526fc62017b3c9b3db99cb83"
        },
        {
            "name": "1.7.4",
            "sha256": "00c6ef06bf90a02b55c72076dedf912580dcb1fb59fdc0e771d9e1a71283b72f"
        },
        {
            "name": "1.7.3",
            "sha256": "3c47d51d4925e6700294ac060c88a73c26ca6e9df5b4010d0e90b0bf5e505040"
        }
    ],
    "versions_deprecated": []
}