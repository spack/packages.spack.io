{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Catch2 is a multi-paradigm test framework for C++, which also supports\nObjective-C (and maybe C).",
            "name": "catch2"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "fmt (formerly cppformat) is an open-source formatting library. It can be\nused as a safe alternative to printf or as a fast alternative to C++\nIOStreams.",
            "name": "fmt"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "SCOREC RPI's Parallel Unstructured Mesh Infrastructure (PUMI). An\nefficient distributed mesh data structure and methods to support\nparallel adaptive analysis including general mesh-based operations, such\nas mesh entity creation/deletion, adjacency and geometric\nclassification, iterators, arbitrary (field) data attachable to mesh\nentities, efficient communication involving entities duplicated across\nmultiple tasks, migration of mesh entities between tasks, and dynamic\nload balancing.",
            "name": "pumi"
        },
        {
            "description": "Simmetrix' Simulation Modeling Suite is a set of component software\ntoolkits that allow developers to easily implement geometry-based\nsimulation applications. Each component of the Simulation Modeling Suite\nis designed to address specific capabilities: | MeshSim - automatic mesh\ngeneration | FieldSim - simulation data management | GeomSim - direct,\nuntranslated access to geometry from a wide variety of sources",
            "name": "simmetrix-simmodsuite"
        },
        {
            "description": "A YAML parser and emitter in C++",
            "name": "yaml-cpp"
        }
    ],
    "dependent_to": [],
    "description": "Model setup and querying in C++.\n",
    "homepage": "https://github.com/jacobmerson/model-traits/",
    "latest_version": "0.2.1",
    "maintainers": [
        "jacobmerson"
    ],
    "name": "model-traits",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "build the pumi examples",
            "name": "pumi"
        },
        {
            "default": false,
            "description": "build the Simmetrix backend",
            "name": "simmetrix"
        },
        {
            "default": true,
            "description": "build the Yaml IO backend",
            "name": "yaml"
        }
    ],
    "versions": [
        {
            "branch": "main",
            "name": "main"
        },
        {
            "name": "0.2.1",
            "sha256": "241ce5738ea72182a570ae474aedff58751e6ea448bd174005c5520c8b5a95d1"
        },
        {
            "name": "0.2.0",
            "sha256": "f367cf96a4c1c19f6e2dcf92af6bf69b39217a01fe6f1942d4825258eca8d4bc"
        },
        {
            "name": "0.1.1",
            "sha256": "75af53b4f576071570fdcfa7a4ce150b935cf21368da41d16d8377c5b3b93713"
        },
        {
            "name": "0.1.0",
            "sha256": "ff7c1c5be6977f1d3dc592e8b6c5bff5a8b7ea80d0f059d85c02300bdb8faf2c"
        }
    ],
    "versions_deprecated": []
}