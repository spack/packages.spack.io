{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Distribution-building parts of Flit.",
            "name": "py-flit-core"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "OpenTURNS is a scientific C++ and Python library featuring an internal\ndata model and algorithms dedicated to the treatment of uncertainties.\nThe main goal of this library is to provide all functionalities needed\nto treat uncertainties in studies with industrial applications. Targeted\nusers are all engineers who want to introduce the probabilistic\ndimension in their so far deterministic studies.",
            "name": "openturns"
        },
        {
            "description": "ABCpy is a highly modular, scientific library for approximate Bayesian\ncomputation (ABC) written in Python. It is designed to run all included\nABC algorithms in parallel, either using multiple cores of a single\ncomputer or using an Apache Spark or MPI enabled cluster.",
            "name": "py-abcpy"
        },
        {
            "description": "Azure ML Data Preparation SDK.",
            "name": "py-azureml-dataprep"
        },
        {
            "description": "Dask is a flexible parallel computing library for analytics.",
            "name": "py-dask"
        },
        {
            "description": "Dask-glm is a library for fitting Generalized Linear Models on large\ndatasets.",
            "name": "py-dask-glm"
        },
        {
            "description": "An analysis environment for satellite and other earth observation data.",
            "name": "py-datacube"
        },
        {
            "description": "Scalable asynchronous hyperparameter optimization, neural architecture\nsearch, and parallel ensemble of predictive models.",
            "name": "py-deephyper"
        },
        {
            "description": "Distributed scheduler for Dask",
            "name": "py-distributed"
        },
        {
            "description": "doit - Automation Tool.",
            "name": "py-doit"
        },
        {
            "description": "OpenAI Gym is a toolkit for developing and comparing reinforcement\nlearning algorithms. This is the gym open-source library, which gives\nyou access to a standardized set of environments.",
            "name": "py-gym"
        },
        {
            "description": "Horovod is a distributed deep learning training framework for\nTensorFlow, Keras, PyTorch, and Apache MXNet.",
            "name": "py-horovod"
        },
        {
            "description": "Hyperopt is a Python library for serial and parallel optimization over\nawkward search spaces, which may include real-valued, discrete, and\nconditional dimensions.",
            "name": "py-hyperopt"
        },
        {
            "description": "Reusable Process Pool Executor",
            "name": "py-loky"
        },
        {
            "description": "Melissa is a file-avoiding, adaptive, fault-tolerant and elastic\nframework, to run large-scale sensitivity analysis or deep-surrogate\ntraining on supercomputers. This package builds the launcher and server\nmodules.",
            "name": "py-melissa-core"
        },
        {
            "description": "MLflow: A Platform for ML Development and Productionization.",
            "name": "py-mlflow"
        },
        {
            "description": "Blazingly fast DataFrame library.",
            "name": "py-polars"
        },
        {
            "description": "Raster I/O Simplification. A set of python modules which makes it easy\nto write raster processing code in Python. Built on top of GDAL, it\nhandles the details of opening and closing files, checking alignment of\nprojection and raster grid, stepping through the raster in small blocks,\netc., allowing the programmer to concentrate on the processing involved.",
            "name": "py-rios"
        },
        {
            "description": "Image processing algorithms for SciPy, including IO, morphology,\nfiltering, warping, color manipulation, object detection, etc.",
            "name": "py-scikit-image"
        },
        {
            "description": "SHAP (SHapley Additive exPlanations): a unified approach to explain the\noutput of any machine learning model.",
            "name": "py-shap"
        },
        {
            "description": "Python toolbox for submitting jobs to Slurm.",
            "name": "py-submitit"
        },
        {
            "description": "TensorFlow Probability (TFP) is a Python library built on TensorFlow\nthat makes it easy to combine probabilistic models and deep learning on\nmodern hardware (TPU, GPU). It's for data scientists, statisticians, ML\nresearchers, and practitioners who want to encode domain knowledge to\nunderstand data and make predictions.",
            "name": "py-tensorflow-probability"
        },
        {
            "description": "Parallel Global Multiobjective Optimizer (and its Python alter ego\nPyGMO) is a C++ / Python platform to perform parallel computations of\noptimisation tasks (global and local) via the asynchronous generalized\nisland model.",
            "name": "pygmo"
        }
    ],
    "description": "Extended pickling support for Python objects.\n",
    "homepage": "https://github.com/cloudpipe/cloudpickle",
    "latest_version": "3.0.0",
    "maintainers": [],
    "name": "py-cloudpickle",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "3.0.0",
            "sha256": "996d9a482c6fb4f33c1a35335cf8afd065d2a56e973270364840712d9131a882"
        },
        {
            "name": "2.2.1",
            "sha256": "d89684b8de9e34a2a43b3460fbca07d09d6e25ce858df4d5a44240403b6178f5"
        },
        {
            "name": "2.2.0",
            "sha256": "3f4219469c55453cfe4737e564b67c2a149109dabf7f242478948b895f61106f"
        },
        {
            "name": "1.6.0",
            "sha256": "9bc994f9e9447593bd0a45371f0e7ac7333710fcf64a4eb9834bf149f4ef2f32"
        },
        {
            "name": "1.2.1",
            "sha256": "603244e0f552b72a267d47a7d9b347b27a3430f58a0536037a290e7e0e212ecf"
        },
        {
            "name": "1.1.1",
            "sha256": "7d43c4d0c7e9735ee8a352c96f84031dabd6676170c4e5e0585a469cc4769f22"
        },
        {
            "name": "0.5.2",
            "sha256": "b0e63dd89ed5285171a570186751bc9b84493675e99e12789e9a5dc5490ef554"
        }
    ],
    "versions_deprecated": []
}