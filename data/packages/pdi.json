{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "Doxygen is the de facto standard tool for generating documentation from\nannotated C++ sources, but it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba,\nMicrosoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some\nextent D..",
            "name": "doxygen"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "Paraconf is a library that provides a simple query language to access a\nYaml tree on top of libyaml.",
            "name": "paraconf"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "Very fast, header only, C++ logging library",
            "name": "spdlog"
        }
    ],
    "dependent_to": [
        {
            "description": "Decl'HDF5 plugin enables one to read and write data from HDF5 files in a\ndeclarative way. Decl'HDF5 does not support the full HDF5 feature set\nbut offers a simple declarative interface to access a large subset of it\nfor the PDI library",
            "name": "pdiplugin-decl-hdf5"
        },
        {
            "description": "The trace plugin is intended to generate a trace of what happens in PDI\n\"data store\".",
            "name": "pdiplugin-decl-netcdf"
        },
        {
            "description": "MPI plugin for the PDI library",
            "name": "pdiplugin-mpi"
        },
        {
            "description": "pycall plugin for the PDI library",
            "name": "pdiplugin-pycall"
        },
        {
            "description": "The trace plugin is intended to generate a trace of what happens in PDI\n\"data store\".",
            "name": "pdiplugin-serialize"
        },
        {
            "description": "The trace plugin is intended to generate a trace of what happens in PDI\n\"data store\".",
            "name": "pdiplugin-set-value"
        },
        {
            "description": "The trace plugin is intended to generate a trace of what happens in PDI\n\"data store\".",
            "name": "pdiplugin-trace"
        },
        {
            "description": "The user-code plugin for the PDI librarie enables one to call a user-\ndefined function when a specified event occur or certain data becomes\navailable",
            "name": "pdiplugin-user-code"
        }
    ],
    "description": "PDI is a library that aims to decouple high-performance simulation codes\nfrom Input/Output concerns. It offers a declarative application\nprogramming interface that enables codes to expose the buffers in which\nthey store data and to notify PDI of significant steps of the\nsimulation. It supports a plugin system to make existing libraries such\nas HDF5, SIONlib or FTI available to codes, potentially mixed in a\nsingle execution.\n",
    "homepage": "https://pdi.dev",
    "latest_version": "1.9.1",
    "maintainers": [
        "jbigot"
    ],
    "name": "pdi",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": false,
            "description": "Build benchmarks",
            "name": "benchs"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Build documentation",
            "name": "docs"
        },
        {
            "default": true,
            "description": "Enable Fortran support",
            "name": "fortran"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Enable Python support",
            "name": "python"
        },
        {
            "default": false,
            "description": "Build tests",
            "name": "tests"
        }
    ],
    "versions": [
        {
            "branch": "main",
            "name": "develop"
        },
        {
            "name": "1.9.1",
            "sha256": "5bb6257efb32674db69e2d89a8947015a2f1e284dbe8dcfdc601f6412640b551"
        },
        {
            "name": "1.9.0",
            "sha256": "04fee7851c4f2a156daddf7eb2c3c3b0132d80d3f0e448cdeebda0b7c4595639"
        },
        {
            "name": "1.8.3",
            "sha256": "df7200289a2a368ec874140039b417abdfe681b57fb1b9f4c52f924952226020"
        }
    ],
    "versions_deprecated": [
        {
            "name": "1.8.2",
            "sha256": "bb4d1654c97f7ff379067adbff339f8b4117c0cf9432f41f1a5cb20a747cac1a"
        },
        {
            "name": "1.8.1",
            "sha256": "43f0c0b2bda5515ecf99da7be1600af2c1f669d6c73e3f309275b14940c7e35c"
        },
        {
            "name": "1.8.0",
            "sha256": "5d353bfa64f45ee4715b88bd30330030f79f2020cd6bede0ad9b8f9beddadea9"
        }
    ]
}