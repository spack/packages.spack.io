{
    "aliases": [],
    "build_system": "Package",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "The SIMDe header-only library provides fast, portable implementations of\nSIMD intrinsics on hardware which doesn't natively support them, such as\ncalling SSE functions on ARM. There is no performance penalty if the\nhardware supports the native implementation (e.g., SSE/AVX runs at full\nspeed on x86, NEON on ARM, etc.).",
            "name": "simde"
        }
    ],
    "dependent_to": [],
    "description": "miniGMG is a compact benchmark for understanding the performance\nchallenges associated with geometric multigrid solvers found in\napplications built from AMR MG frameworks like CHOMBO or BoxLib when\nrunning on modern multi- and manycore-based supercomputers. It includes\nboth productive reference examples as well as highly-optimized\nimplementations for CPUs and GPUs. It is sufficiently general that it\nhas been used to evaluate a broad range of research topics including\nPGAS programming models and algorithmic tradeoffs inherit in multigrid.\nminiGMG was developed under the CACHE Joint Math-CS Institute. Note,\nminiGMG code has been supersceded by HPGMG.\n",
    "homepage": "https://crd.lbl.gov/departments/computer-science/PAR/research/previous-projects/miniGMG/",
    "latest_version": "master",
    "maintainers": [],
    "name": "minigmg",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.minigmg",
            "relative_path": "simde.patch",
            "reverse": false,
            "sha256": "41a3422f0e28d0f0ba785b6ceaabe4e57c015a5aaed43fdf16619ffdfdae55d3",
            "version": "vec=simde",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.minigmg",
            "relative_path": "aarch64_time.patch",
            "reverse": false,
            "sha256": "819fe72412126805873a8f7720d9422597ab0dadd509c0b1ff5bc0dbd11782d7",
            "version": "arch=None-None-aarch64:",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.minigmg",
            "relative_path": "inline_static.patch",
            "reverse": false,
            "sha256": "f4dad8e5d961e61f884208b6cf7b44cff646ba43af56d2fc5a556b8f20143700",
            "version": "",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable optimization flags for improved OpenMP",
            "name": "opt"
        },
        {
            "default": "ompif",
            "description": "Which method of vectorisation to use",
            "name": "vec"
        }
    ],
    "versions": [
        {
            "name": "master",
            "sha256": "1c2d27496a881f655f5e849d6a7a132625e535739f82575991c511cc2cf899ac"
        }
    ],
    "versions_deprecated": []
}