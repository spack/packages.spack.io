{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use.",
            "name": "boost"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\".",
            "name": "py-appdirs"
        },
        {
            "description": "The aim of the decorator module it to simplify the usage of decorators\nfor the average programmer, and to popularize decorators by showing\nvarious non-trivial examples.",
            "name": "py-decorator"
        },
        {
            "description": "A super-fast templating language that borrows the best ideas from the\nexisting templating languages.",
            "name": "py-mako"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\"",
            "name": "py-platformdirs"
        },
        {
            "description": "A collection of tools for Python",
            "name": "py-pytools"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Python 2 and 3 compatibility utilities.",
            "name": "py-six"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "PyTorch implementation for the climate segmentation benchmark, based on\nthe Exascale Deep Learning for Climate Analytics",
            "name": "mlperf-deepcam"
        }
    ],
    "description": "PyCUDA gives you easy, Pythonic access to Nvidia's CUDA parallel\ncomputation API\n",
    "homepage": "https://mathema.tician.de/software/pycuda/",
    "latest_version": "2024.1.2",
    "maintainers": [],
    "name": "py-pycuda",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "2024.1.2",
            "sha256": "d110b727cbea859da4b63e91b6fa1e9fc32c5bade02d89ff449975996e9ccfab"
        },
        {
            "name": "2021.1",
            "sha256": "ab87312d0fc349d9c17294a087bb9615cffcf966ad7b115f5b051008a48dd6ed"
        },
        {
            "name": "2020.1",
            "sha256": "effa3b99b55af67f3afba9b0d1b64b4a0add4dd6a33bdd6786df1aa4cc8761a5"
        },
        {
            "name": "2019.1.2",
            "sha256": "ada56ce98a41f9f95fe18809f38afbae473a5c62d346cfa126a2d5477f24cc8a"
        },
        {
            "name": "2016.1.2",
            "sha256": "a7dbdac7e2f0c0d2ad98f5f281d5a9d29d6673b3c20210e261b96e9a2d0b6e37"
        }
    ],
    "versions_deprecated": []
}