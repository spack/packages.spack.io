{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "This package includes tools to use with AMPL and amplpy.",
            "name": "py-ampltools"
        },
        {
            "description": "Clean single-source support for Python 3 and 2",
            "name": "py-future"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [],
    "description": "AMPL API is an interface that allows developers to access the features\nof the AMPL interpreter from within a programming language. All model\ngeneration and solver interaction is handled directly by AMPL, which\nleads to great stability and speed; the library just acts as an\nintermediary, and the added overhead (in terms of memory and CPU usage)\ndepends mostly on how much data is read back from AMPL, the size of the\nmodel as such is irrelevant.\n",
    "homepage": "https://ampl.com/",
    "latest_version": "0.8.6",
    "maintainers": [],
    "name": "py-amplpy",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.8.6",
            "sha256": "ad0945d69f75e7762802bb54849009717fbcf226a6da6f37b539d9534bdcf68d"
        }
    ],
    "versions_deprecated": []
}