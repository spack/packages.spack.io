{
    "aliases": [
        {
            "alias_for": "nvpl-scalapack",
            "name": "scalapack"
        }
    ],
    "build_system": "Package",
    "conflicts": [
        {
            "description": null,
            "name": "%clang@:13",
            "spec": ""
        },
        {
            "description": null,
            "name": "%gcc@:7",
            "spec": ""
        }
    ],
    "dependencies": [
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "NVPL BLAS (NVIDIA Performance Libraries BLAS) is part of NVIDIA\nPerformance Libraries that provides standard Fortran 77 BLAS APIs as\nwell as C (CBLAS).",
            "name": "nvpl-blas"
        },
        {
            "description": "NVPL LAPACK (NVIDIA Performance Libraries LAPACK) is part of NVIDIA\nPerformance Libraries that provides standard Fortran 90 LAPACK APIs.",
            "name": "nvpl-lapack"
        }
    ],
    "dependent_to": [
        {
            "description": "ABINIT is a package whose main program allows one to find the total\nenergy, charge density and electronic structure of systems made of\nelectrons and nuclei (molecules and periodic solids) within Density\nFunctional Theory (DFT), using pseudopotentials and a planewave or\nwavelet basis. ABINIT also includes options to optimize the geometry\naccording to the DFT forces and stresses, or to perform molecular\ndynamics simulations using these forces, or to generate dynamical\nmatrices, Born effective charges, and dielectric tensors, based on\nDensity-Functional Perturbation Theory, and many more properties.\nExcited states can be computed within the Many-Body Perturbation Theory\n(the GW approximation and the Bethe-Salpeter equation), and Time-\nDependent Density Functional Theory (for molecules). In addition to the\nmain ABINIT code, different utility programs are provided.",
            "name": "abinit"
        },
        {
            "description": "AMD Optimizing CPU Libraries (AOCL) - AOCL is a set of numerical\nlibraries tuned specifically for AMD EPYC processor family. They have a\nsimple interface to take advantage of the latest hardware innovations.\nThe tuned implementations of industry standard math libraries enable\nfast development of scientific and high performance computing projects\nLICENSING INFORMATION: By downloading, installing and using this\nsoftware, you agree to the terms and conditions of the AMD AOCL license\nagreement. You may obtain a copy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/aocl-eula.html\nhttps://www.amd.com/en/developer/aocl/eula/aocl-4-1-eula.html",
            "name": "amd-aocl"
        },
        {
            "description": "BerkeleyGW is a many-body perturbation theory code for excited states,\nusing the GW method and the GW plus Bethe-Salpeter equation (GW-BSE)\nmethod to solve respectively for quasiparticle excitations and optical\nproperties of materials.",
            "name": "berkeleygw"
        },
        {
            "description": "BigDFT-CheSS: A module for performing Fermi Operator Expansions via\nChebyshev Polynomials.",
            "name": "bigdft-chess"
        },
        {
            "description": "BigDFT-core: the core components of BigDFT, an electronic structure\ncalculation based on Daubechies wavelets.",
            "name": "bigdft-core"
        },
        {
            "description": "BigDFT-liborbs: a library for orbital treatments in DFT.",
            "name": "bigdft-liborbs"
        },
        {
            "description": "BigDFT-Psolver: a flexible real-space Poisson Solver based on\nInterpolating Scaling Functions. It constitutes a fundamental building\nblock of BigDFT code, and it can also be used separately and linked to\nother codes.",
            "name": "bigdft-psolver"
        },
        {
            "description": "BigDFT-spred: a library for structure prediction tools, that is compiled\non top of BigDFT routines.",
            "name": "bigdft-spred"
        },
        {
            "description": "ButterflyPACK is a mathematical software for rapidly solving large-scale\ndense linear systems that exhibit off-diagonal rank-deficiency. These\nsystems arise frequently from boundary element methods, or factorization\nphases in finite-difference/finite-element methods. ButterflyPACK relies\non low-rank or butterfly formats under Hierarchical matrix, HODLR or\nother hierarchically nested frameworks to compress, factor and solve the\nlinear system in quasi-linear time. The computationally most intensive\nphase, factorization, is accelerated via randomized linear algebras. The\nbutterfly format, originally inspired by the butterfly data flow in fast\nFourier Transform, is a linear algebra tool well-suited for compressing\nmatrices arising from high-frequency wave equations or highly\noscillatory integral operators.",
            "name": "butterflypack"
        },
        {
            "description": "CONQUEST is a DFT code designed for large-scale calculations, with\nexcellent parallelisation.",
            "name": "conquest"
        },
        {
            "description": "Distributed Communication-Optimal Matrix-Matrix Multiplication Library",
            "name": "cosma"
        },
        {
            "description": "Distributed Communication-Optimal Matrix Transpose and Reshuffle\nLibrary Based on the paper: https://arxiv.org/abs/2106.06601",
            "name": "costa"
        },
        {
            "description": "CP2K is a quantum chemistry and solid state physics software package\nthat can perform atomistic simulations of solid state, liquid,\nmolecular, periodic, material, crystal, and biological systems",
            "name": "cp2k"
        },
        {
            "description": "C++ software library providing well-documented tools to build finite\nelement codes for a broad variety of PDEs.",
            "name": "dealii"
        },
        {
            "description": "DFTB+ is an implementation of the Density Functional based Tight Binding\n(DFTB) method, containing many extensions to the original method.",
            "name": "dftbplus"
        },
        {
            "description": "Real-space DFT calculations using Finite Elements",
            "name": "dftfe"
        },
        {
            "description": "DLA-Future library: Distributed Linear Algebra with Future",
            "name": "dla-future"
        },
        {
            "description": "EigenExa is a high-performance eigenvalue solver.",
            "name": "eigenexa"
        },
        {
            "description": "Elmer is an open source multiphysical simulation software. It includes\nphysical models of fluid dynamics, structural mechanics,\nelectromagnetics, heat transfer and acoustics.",
            "name": "elmerfem"
        },
        {
            "description": "Eigenvalue solvers for Petaflop-Applications (ELPA)",
            "name": "elpa"
        },
        {
            "description": "ELSI provides a unified interface for electronic structure codes to a\nvariety of eigenvalue solvers.",
            "name": "elsi"
        },
        {
            "description": "exciting is a full-potential all-electron density-functional-theory\npackage implementing the families of linearized augmented planewave\nmethods. It can be applied to all kinds of materials, irrespective of\nthe atomic species in volved, and also allows for exploring the physics\nof core electrons. A particular focus are excited states within many-\nbody perturbation theory.",
            "name": "exciting"
        },
        {
            "description": "Computational Fluid Dynamics Software for aeroacoustics",
            "name": "ffb"
        },
        {
            "description": "FLEUR (Full-potential Linearised augmented plane wave in EURope) is a\ncode family for calculating groundstate as well as excited-state\nproperties of solids within the context of density functional theory\n(DFT).",
            "name": "fleur"
        },
        {
            "description": "Open-Source Large-Scale Parallel FEM Program for Nonlinear Structural\nAnalysis",
            "name": "frontistr"
        },
        {
            "description": "This is a fork repository of the FrontISTR tuned for A64FX.",
            "name": "fujitsu-frontistr"
        },
        {
            "description": "Global Arrays (GA) is a Partitioned Global Address Space (PGAS)\nprogramming model. It provides primitives for one-sided communication\n(Get, Put, Accumulate) and Atomic Operations (read increment). It\nsupports blocking and non-blocking primtives, and supports location\nconsistency.",
            "name": "globalarrays"
        },
        {
            "description": "GPTune is an autotuning framework that relies on multitask and transfer\nlearnings to help solve the underlying black-box optimization problem\nusing Bayesian optimization methodologies.",
            "name": "gptune"
        },
        {
            "description": "High-performance unified framework for domain decomposition methods.",
            "name": "hpddm"
        },
        {
            "description": "HyPar is a finite-difference algorithm to solve hyperbolic-parabolic\npartial differential equations (with source terms) on Cartesian grids.\nIt is a unified framework that can handle systems of PDEs with arbitrary\nnumber of spatial dimensions and solution components. It provides the\nspatial discretization and time integration functions, functions to read\nand write solutions from/to files, as well as functions required to\nsolve the system on parallel (MPI) platforms. The physical models define\nthe physics-specific functions such as the exact forms of the hyperbolic\nflux, parabolic flux, source terms, upwinding functions, etc.",
            "name": "hypar"
        },
        {
            "description": "KADATH SPECTRAL SOLVER. The Frankfurt University/Kadath (FUKA) Initial\nData solver branch is a collection of ID solvers aimed at delivering\nconsistent initial data (ID) solutions to the eXtended Conformal Thin-\nSandwich (XCTS) formulation of Einstein's field equations for a variety\nof compact object configurations to include extremely compact,\nasymmetric, and mixed spin binaries.",
            "name": "kadath"
        },
        {
            "description": "LINSYS_V: Verified Solution of Linear Systems",
            "name": "linsys-v"
        },
        {
            "description": "Intermediary interface between high-level routines for physics-related\nalgorithms and low-level routines dealing with matrix storage and\nmanipulation.",
            "name": "matrix-switch"
        },
        {
            "description": "MOLGW is a quantum chemistry code that implements the many-body\nperturbation theory (MBPT) to describe the excited electronic states in\nfinite systems (atoms, molecules, clusters). MOLGW implements the GW\napproximation for the self-energy (ionization and affinity) and the\nBethe-Salpeter equation for the optical excitations. MOLGW also applies\nthe real-time time-dependent density-functional theory (RT-TDDFT). MOLGW\nemploys standard Gaussian basis set.",
            "name": "molgw"
        },
        {
            "description": "mptensor is parallel C++ libarary for tensor calculations. It provides\nsimilar interfaces as Numpy and Scipy in Python.",
            "name": "mptensor"
        },
        {
            "description": "MUMPS: a MUltifrontal Massively Parallel sparse direct Solver",
            "name": "mumps"
        },
        {
            "description": "High-performance computational chemistry software",
            "name": "nwchem"
        },
        {
            "description": "A real-space finite-difference (time-dependent) density-functional\ntheory code.",
            "name": "octopus"
        },
        {
            "description": "Solution of Kohn-Sham equations using the Orbital Minimization Method\n(OMM).",
            "name": "omm"
        },
        {
            "description": "Omm-bundle is a library implementing the orbital minimization method for\nsolving the Kohn-Sham equation as a generalized eigenvalue problem and a\nbundle of four separate libraries: pspBLAS, MatrixSwitch, libOMM,\ntomato.",
            "name": "omm-bundle"
        },
        {
            "description": "OpenMX (Open source package for Material eXplorer) is a software package\nfor nano-scale material simulations based on density functional theories\n(DFT), norm-conserving pseudopotentials, and pseudo-atomic localized\nbasis functions.",
            "name": "openmx"
        },
        {
            "description": "PETSc is a suite of data structures and routines for the scalable\n(parallel) solution of scientific applications modeled by partial\ndifferential equations.",
            "name": "petsc"
        },
        {
            "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation\nenvironment (ASE).",
            "name": "py-gpaw"
        },
        {
            "description": "SIRIUS enabled fork of QuantumESPRESSO.",
            "name": "q-e-sirius"
        },
        {
            "description": "Quantum ESPRESSO is an integrated suite of Open-Source computer codes\nfor electronic-structure calculations and materials modeling at the\nnanoscale. It is based on density-functional theory, plane waves, and\npseudopotentials.",
            "name": "quantum-espresso"
        },
        {
            "description": "SALMON is an open-source computer program for ab-initio quantum-\nmechanical calculations of electron dynamics at the nanoscale that takes\nplace in various situations of light-matter interactions. It is based on\ntime-dependent density functional theory, solving time-dependent Kohn-\nSham equation in real time and real space with norm-conserving\npseudopotentials.",
            "name": "salmon-tddft"
        },
        {
            "description": "SeLaLib is a modular library for the kinetic and gyrokinetic simulation\nof tokamak plasmas by the semi-lagrangian or particle-in-cell methods",
            "name": "selalib"
        },
        {
            "description": "SIESTA performs electronic structure calculations and ab initio\nmolecular dynamics simulations of molecules and solids.",
            "name": "siesta"
        },
        {
            "description": "Domain specific library for electronic structure calculations",
            "name": "sirius"
        },
        {
            "description": "The Software for Linear Algebra Targeting Exascale (SLATE) project\nprovides fundamental dense linear algebra capabilities to the US\nDepartment of Energy and to the high-performance computing (HPC)\ncommunity at large. To this end, SLATE provides basic dense matrix\noperations (e.g., matrix multiplication, rank-k update, triangular\nsolve), linear systems solvers, least square solvers, singular value and\neigenvalue solvers.",
            "name": "slate"
        },
        {
            "description": "STRUMPACK -- STRUctured Matrix PACKage - provides linear solvers for\nsparse matrices and for dense rank-structured matrices, i.e., matrices\nthat exhibit some kind of low-rank property. It provides a distributed\nmemory fully algebraic sparse solver and preconditioner. The\npreconditioner is mostly aimed at large sparse linear systems which\nresult from the discretization of a partial differential equation, but\nis not limited to any particular type of problem. STRUMPACK also\nprovides preconditioned GMRES and BiCGStab iterative solvers.",
            "name": "strumpack"
        },
        {
            "description": "The Trilinos Project is an effort to develop algorithms and enabling\ntechnologies within an object-oriented software framework for the\nsolution of large-scale, complex multi-physics engineering and\nscientific problems. A unique design feature of Trilinos is its focus on\npackages.",
            "name": "trilinos"
        },
        {
            "description": "The Vienna Ab initio Simulation Package (VASP) is a computer program\nfor atomic scale materials modelling, e.g. electronic structure\ncalculations and quantum-mechanical molecular dynamics, from first\nprinciples.",
            "name": "vasp"
        },
        {
            "description": "Yambo is a FORTRAN/C code for Many-Body calculations in solid state and\nmolecular physics. Yambo relies on the Kohn-Sham wavefunctions generated\nby two DFT public codes: abinit, and PWscf. The code was originally\ndeveloped in the Condensed Matter Theoretical Group of the Physics\nDepartment at the University of Rome \"Tor Vergata\" by Andrea Marini.\nPrevious to its release under the GPL license, yambo was known as SELF.",
            "name": "yambo"
        }
    ],
    "description": "NVPL ScaLAPACK (NVIDIA Performance Libraries ScaLAPACK).\n",
    "homepage": "https://docs.nvidia.com/nvpl/latest/scalapack/index.html",
    "latest_version": "0.2.1",
    "maintainers": [
        "RMeli"
    ],
    "name": "nvpl-scalapack",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Force 64-bit Fortran native integers",
            "name": "ilp64"
        }
    ],
    "versions": [
        {
            "name": "0.2.1",
            "sha256": "dada4d1ecf044d90609b9e62750b383d11be9b22c87e109414bcc07dce3c83c9"
        }
    ],
    "versions_deprecated": []
}