{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications.",
            "name": "fftw"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Library for USB device access.",
            "name": "libusb"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [
        {
            "description": "While primarily being developed for the OsmoSDR hardware, this block as\nwell supports: FunCube Dongle through libgnuradio-fcd, FUNcube Dongle\nPro+ through gr-fcdproplus, sysmocom OsmoSDR Devices through libosmosdr,\nNuand LLC bladeRF through libbladeRF library, Great Scott Gadgets HackRF\nthrough libhackrf, Ettus USRP Devices through Ettus UHD library,\nFairwaves UmTRX through Fairwaves' fork of Ettus' UHD library, RFSPACE\nSDR-IQ, SDR-IP, NetSDR (incl. X2 option), RTL2832U based DVB-T dongles\nthrough librtlsdr, RTL-TCP spectrum server (see librtlsdr project),\nMSi2500 based DVB-T dongles through libmirisdr, SDRplay RSP through\nSDRplay API library, AirSpy R820t dongles through libairspy, gnuradio\n.cfile input through libgnuradio-blocks",
            "name": "gr-osmosdr"
        }
    ],
    "description": "Software for HackRF, a low cost, open source Software Defined Radio\nplatform.\n",
    "homepage": "https://github.com/mossmann/hackrf",
    "latest_version": "2018.01.1",
    "maintainers": [
        "aweits"
    ],
    "name": "hackrf-host",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        }
    ],
    "versions": [
        {
            "name": "2018.01.1",
            "sha256": "84dbb5536d3aa5bd6b25d50df78d591e6c3431d752de051a17f4cb87b7963ec3"
        }
    ],
    "versions_deprecated": []
}