{
    "aliases": [],
    "build_system": "Package",
    "conflicts": [],
    "dependencies": [],
    "dependent_to": [
        {
            "description": "Composable Kernel: Performance Portable Programming Model for Machine\nLearning Tensor Operators.",
            "name": "composable-kernel"
        },
        {
            "description": "Hydrogen: Distributed-memory dense and sparse-direct linear algebra and\noptimization library. Based on the Elemental library.",
            "name": "hydrogen"
        },
        {
            "description": "LBANN: Livermore Big Artificial Neural Network Toolkit. A distributed\nmemory, HPC-optimized, model and data parallel training toolkit for deep\nneural networks.",
            "name": "lbann"
        },
        {
            "description": "AMD's graph optimization engine.",
            "name": "migraphx"
        },
        {
            "description": "AMD's library for high performance machine learning primitives.",
            "name": "miopen-hip"
        },
        {
            "description": "AMD's library for high performance machine learning primitives.",
            "name": "miopen-opencl"
        },
        {
            "description": "Multi-Level Intermediate Representation for rocm miopen project.",
            "name": "mlirmiopen"
        },
        {
            "description": "This is the repository for a MLIR-based convolution and GEMM kernel\ngenerator targetting AMD hardware. This generator is mainly used from\nMIOpen and MIGraphX, but it can be used on a standalone basis.",
            "name": "rocmlir"
        },
        {
            "description": "Radeon Performance Primitives (RPP) library is a comprehensive high-\nperformance computer vision library for AMD (CPU and GPU) with HIP and\nOPENCL back-ends",
            "name": "rpp"
        }
    ],
    "description": "This is a C++ header-only library to provide an IEEE-754 conformant\nhalf-precision floating point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims\nfor both efficiency and ease of use, trying to accurately mimic the\nbehaviour of the builtin floating point types at the best performance\npossible. It automatically uses and provides C++11 features when\npossible, but stays completely C++98-compatible when neccessary.\n",
    "homepage": "https://sourceforge.net/projects/half/",
    "latest_version": "2.1.0",
    "maintainers": [
        "bvanessen"
    ],
    "name": "half",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.half",
            "relative_path": "f16fix.patch",
            "reverse": false,
            "sha256": "ca0992b59f8cdada8f121a783c7dd0c56241f34d28e810a93fa0a607d9b7437d",
            "version": "@2.1.0",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "2.1.0",
            "sha256": "ad1788afe0300fa2b02b0d1df128d857f021f92ccf7c8bddd07812685fa07a25"
        },
        {
            "name": "1.12.0",
            "sha256": "cdd70d3bf3fe091b688e7ab3f48471c881a197d2c186c95cca8bf156961fb41c"
        }
    ],
    "versions_deprecated": []
}