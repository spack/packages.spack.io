{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "description": null,
            "name": "^py-scipy@1.9.2",
            "spec": "@:0.14.1"
        },
        {
            "description": null,
            "name": "^py-scipy@2.1.0",
            "spec": "@:0.14.1"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "The Cython compiler for writing C extensions for the Python language.",
            "name": "py-cython"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "Core utilities for Python packages.",
            "name": "py-packaging"
        },
        {
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage.",
            "name": "py-pandas"
        },
        {
            "description": "A Python package for describing statistical models and for building\ndesign matrices.",
            "name": "py-patsy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "pytest: simple powerful testing with Python.",
            "name": "py-pytest"
        },
        {
            "description": "Fundamental algorithms for scientific computing in Python.",
            "name": "py-scipy"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The blessed package to manage your versions by scm tags.",
            "name": "py-setuptools-scm"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "CallFlow is an interactive visual analysis tool that provides a high-\nlevel overview of CCTs together with semantic refinement operations to\nprogressively explore the CCTs.",
            "name": "callflow"
        },
        {
            "description": "GPTune is an autotuning framework that relies on multitask and transfer\nlearnings to help solve the underlying black-box optimization problem\nusing Bayesian optimization methodologies.",
            "name": "gptune"
        },
        {
            "description": "AlpacaFarm is a simulator that enables research and development on\nlearning from feedback at a fraction of the usual cost, promoting\naccessible research on instruction following and alignment.",
            "name": "py-alpaca-farm"
        },
        {
            "description": "Advanced Normalization Tools in Python.",
            "name": "py-antspyx"
        },
        {
            "description": "Anvi\u2019o is a comprehensive platform that brings together many aspects of\ntoday\u2019s cutting-edge computational strategies of data-enabled\nmicrobiology, including genomics, metagenomics, metatranscriptomics,\npangenomics, metapangenomics, phylogenomics, and microbial population\ngenetics in an integrated and easy-to-use fashion through extensive\ninteractive visualization capabilities.",
            "name": "py-anvio"
        },
        {
            "description": "Autoregressive Conditional Heteroskedasticity (ARCH) and other tools for\nfinancial econometrics, written in Python (with Cython and/or Numba used\nto improve performance)",
            "name": "py-arch"
        },
        {
            "description": "Elephant is a package for analysis of electrophysiology data in Python",
            "name": "py-elephant"
        },
        {
            "description": "Python scripts to find enrichment of GO terms",
            "name": "py-goatools"
        },
        {
            "description": "A distributed Hyperband implementation with lots of room for\nimprovement",
            "name": "py-hpbandster"
        },
        {
            "description": "Normalize intensities of images from various MRI modalities",
            "name": "py-intensity-normalization"
        },
        {
            "description": "MNE python project for MEG and EEG data analysis.",
            "name": "py-mne"
        },
        {
            "description": "Up-to-date remote data access for pandas. Works for multiple versions of\npandas",
            "name": "py-pandas-datareader"
        },
        {
            "description": "An open-source toolkit for computational pathology and machine learning.",
            "name": "py-pathml"
        },
        {
            "description": "phydms enables phylogenetic analyses using deep mutational scanning data\nto inform the substitution models. It implements Experimentally informed\ncodon models (ExpCM) for phylogenetic inference and the detection of\nbiologically interesting selection.",
            "name": "py-phydms"
        },
        {
            "description": "plotnine is an implementation of a grammar of graphics in Python, it is\nbased on ggplot2. The grammar allows users to compose plots by\nexplicitly mapping data to the visual objects that make up the plot.",
            "name": "py-plotnine"
        },
        {
            "description": "Sequence Elements Enrichment Analysis (SEER), python implementation",
            "name": "py-pyseer"
        },
        {
            "description": "Scanpy is a scalable toolkit for analyzing single-cell gene expression\ndata built jointly with anndata.",
            "name": "py-scanpy"
        },
        {
            "description": "Seaborn: statistical data visualization. Seaborn is a library for making\nattractive and informative statistical graphics in Python. It is built\non top of matplotlib and tightly integrated with the PyData stack,\nincluding support for numpy and pandas data structures and statistical\nroutines from scipy and statsmodels.",
            "name": "py-seaborn"
        },
        {
            "description": "Bioinformatics tools and a software library developed by the Oxford\nNanopore Technologies Applications group.",
            "name": "py-wub"
        }
    ],
    "description": "Statistical computations and models for use with SciPy\n",
    "homepage": "https://www.statsmodels.org",
    "latest_version": "0.14.1",
    "maintainers": [
        "climbfuji"
    ],
    "name": "py-statsmodels",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.14.1",
            "sha256": "2260efdc1ef89f39c670a0bd8151b1d0843567781bcafec6cda0534eb47a94f6"
        }
    ],
    "versions_deprecated": [
        {
            "name": "0.14.0",
            "sha256": "6875c7d689e966d948f15eb816ab5616f4928706b180cf470fd5907ab6f647a4"
        },
        {
            "name": "0.13.5",
            "sha256": "593526acae1c0fda0ea6c48439f67c3943094c542fe769f8b90fe9e6c6cc4871"
        },
        {
            "name": "0.13.2",
            "sha256": "77dc292c9939c036a476f1770f9d08976b05437daa229928da73231147cde7d4"
        },
        {
            "name": "0.13.1",
            "sha256": "006ec8d896d238873af8178d5475203844f2c391194ed8d42ddac37f5ff77a69"
        },
        {
            "name": "0.13.0",
            "sha256": "f2efc02011b7240a9e851acd76ab81150a07d35c97021cb0517887539a328f8a"
        },
        {
            "name": "0.12.2",
            "sha256": "8ad7a7ae7cdd929095684118e3b05836c0ccb08b6a01fe984159475d174a1b10"
        },
        {
            "name": "0.12.1",
            "sha256": "a271b4ccec190148dccda25f0cbdcbf871f408fc1394a10a7dc1af4a62b91c8e"
        },
        {
            "name": "0.10.2",
            "sha256": "9cd2194c6642a8754e85f9a6e6912cdf996bebf6ff715d3cc67f65dadfd37cc9"
        },
        {
            "name": "0.10.1",
            "sha256": "320659a80f916c2edf9dfbe83512d9004bb562b72eedb7d9374562038697fa10"
        }
    ]
}