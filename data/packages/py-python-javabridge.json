{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The free and opensource java implementation",
            "name": "java"
        },
        {
            "description": "The Cython compiler for writing C extensions for the Python language.",
            "name": "py-cython"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "CellProfiler cell image analysis software. CellProfiler is a free open-\nsource software designed to enable biologists without training in\ncomputer vision or programming to quantitatively measure phenotypes from\nthousands of images automatically.",
            "name": "py-cellprofiler"
        },
        {
            "description": "Core classes and components used by CellProfiler.",
            "name": "py-cellprofiler-core"
        },
        {
            "description": "Python-bioformats is a Python wrapper for Bio-Formats, a standalone Java\nlibrary for reading and writing life sciences image file formats. Bio-\nFormats is capable of parsing both pixels and metadata for a large\nnumber of formats, as well as writing to several formats.",
            "name": "py-python-bioformats"
        }
    ],
    "description": "The python-javabridge package makes it easy to start a Java virtual\nmachine (JVM) from Python and interact with it.\n",
    "homepage": "https://github.com/CellProfiler/python-javabridge/",
    "latest_version": "4.0.3",
    "maintainers": [],
    "name": "py-python-javabridge",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "4.0.3",
            "sha256": "3fee0c235efcfe866f95695fdc0b6289eab2371043b32ff4ca6feff098de59c5"
        }
    ],
    "versions_deprecated": []
}