{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": null,
            "name": "%gcc@5:",
            "spec": "@:1.0.0"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution.",
            "name": "netcdf-c"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "NUMA support for Linux",
            "name": "numactl"
        }
    ],
    "dependent_to": [
        {
            "description": "easi is a library for the Easy Initialization of models in three (or\nless or more) dimensional domains.",
            "name": "easi"
        },
        {
            "description": "Seissol - A scientific software for the numerical simulation of seismic\nwave phenomena and earthquake dynamics.",
            "name": "seissol"
        }
    ],
    "description": "a pArallel Server for Adaptive GeoInformation.\n",
    "homepage": "https://github.com/TUM-I5/ASAGI",
    "latest_version": "1.0.1",
    "maintainers": [],
    "name": "asagi",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "compile examples",
            "name": "examples"
        },
        {
            "default": true,
            "description": "enable fortran support",
            "name": "fortran"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": "shared",
            "description": "build shared and/or static libraries",
            "name": "link_type"
        },
        {
            "default": "4",
            "description": "max. number of dimensions supported",
            "name": "max_dimensions"
        },
        {
            "default": true,
            "description": "enable MPI",
            "name": "mpi"
        },
        {
            "default": true,
            "description": "enable MPI-3 (enables additional features)",
            "name": "mpi3"
        },
        {
            "default": true,
            "description": "enable NUMA support",
            "name": "numa"
        },
        {
            "default": false,
            "description": "compile tests",
            "name": "tests"
        },
        {
            "default": true,
            "description": "enable threadsafe ASAGI-functions",
            "name": "threadsafe"
        },
        {
            "default": false,
            "description": "enable threadsafe access counters",
            "name": "threadsafe_counter"
        },
        {
            "default": true,
            "description": "make MPI calls threadsafe",
            "name": "threadsafe_mpi"
        }
    ],
    "versions": [
        {
            "commit": "f633f96931ae00805f599078d5a1a6a830881554",
            "name": "1.0.1"
        },
        {
            "commit": "f67250798b435c308b9a1e7516f916f7855534ec",
            "name": "1.0"
        }
    ],
    "versions_deprecated": []
}