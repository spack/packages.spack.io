{
    "aliases": [
        {
            "alias_for": "mvapich",
            "name": "mpi"
        },
        {
            "alias_for": "mvapich",
            "name": "mpi"
        }
    ],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        },
        {
            "description": null,
            "name": "pmi_version=pmi2",
            "spec": "process_managers=auto"
        },
        {
            "description": null,
            "name": "pmi_version=pmi2",
            "spec": "process_managers=hydra"
        },
        {
            "description": null,
            "name": "pmi_version=pmix",
            "spec": "process_managers=hydra"
        },
        {
            "description": null,
            "name": "pmi_version=pmi2",
            "spec": "process_managers=slurm"
        }
    ],
    "dependencies": [
        {
            "description": "Bison is a general-purpose parser generator that converts an annotated\ncontext-free grammar into a deterministic LR or generalized LR (GLR)\nparser employing LALR(1) parser tables.",
            "name": "bison"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The GNU Find Utilities are the basic directory searching utilities of\nthe GNU operating system.",
            "name": "findutils"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "The Open Fabrics Interfaces (OFI) is a framework focused on exporting\nfabric communication services to applications.",
            "name": "libfabric"
        },
        {
            "description": "Generic PCI access library.",
            "name": "libpciaccess"
        },
        {
            "description": "Libxml2 is the XML C parser and toolkit developed for the Gnome project\n(but usable outside of the Gnome platform), it is free software\navailable under the MIT License.",
            "name": "libxml2"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        },
        {
            "description": "The Process Management Interface (PMI) has been used for quite some time\nas a means of exchanging wireup information needed for interprocess\ncommunication. However, meeting the significant orchestration challenges\npresented by exascale systems requires that the process-to-system\ninterface evolve to permit a tighter integration between the different\ncomponents of the parallel application and existing and future SMS\nsolutions. PMI Exascale (PMIx) addresses these needs by providing an\nextended version of the PMI definitions specifically designed to support\nexascale and beyond environments by: (a) adding flexibility to the\nfunctionality expressed in the existing APIs, (b) augmenting the\ninterfaces with new APIs that provide extended capabilities, (c) forging\na collaboration between subsystem providers including resource manager,\nfabric, file system, and programming library developers, (d)\nestablishing a standards-like body for maintaining the definitions, and\n(e) providing a reference implementation of the PMIx standard that\ndemonstrates the desired level of scalability while maintaining strict\nseparation between it and the standard itself.",
            "name": "pmix"
        },
        {
            "description": "Slurm is an open source, fault-tolerant, and highly scalable cluster\nmanagement and job scheduling system for large and small Linux clusters.\nSlurm requires no kernel modifications for its operation and is\nrelatively self-contained. As a cluster workload manager, Slurm has\nthree key functions. First, it allocates exclusive and/or non-exclusive\naccess to resources (compute nodes) to users for some duration of time\nso they can perform work. Second, it provides a framework for starting,\nexecuting, and monitoring work (normally a parallel job) on the set of\nallocated nodes. Finally, it arbitrates contention for resources by\nmanaging a queue of pending work.",
            "name": "slurm"
        },
        {
            "description": "a communication library implementing high-performance messaging for\nMPI/PGAS frameworks",
            "name": "ucx"
        },
        {
            "description": "zlib replacement with optimizations for next generation systems.",
            "name": "zlib-api"
        }
    ],
    "dependent_to": [
        {
            "description": "Fluid interface model solver based on Pandya and Shkoller's Z-Model\nformulation.",
            "name": "beatnik"
        },
        {
            "description": "Seissol - A scientific software for the numerical simulation of seismic\nwave phenomena and earthquake dynamics.",
            "name": "seissol"
        },
        {
            "description": "SPH and N-body simulation framework",
            "name": "sphexa"
        },
        {
            "description": "Tandem is a scientific software for SEAS modelling and for solving\nPoisson and linear elasticity problems. It implements the Symmetric\nInterior Penalty Galerkin (SIPG) method using unstructured simplicial\nmeshes (triangle meshes in 2D, tetrahedral meshes in 3D).",
            "name": "tandem"
        }
    ],
    "description": "Mvapich is a High-Performance MPI Library for clusters with diverse\nnetworks (InfiniBand, Omni-Path, Ethernet/iWARP, and RoCE) and computing\nplatforms (x86 (Intel and AMD), ARM and OpenPOWER)\n",
    "homepage": "https://mvapich.cse.ohio-state.edu/userguide/userguide_spack/",
    "latest_version": "4.0",
    "maintainers": [
        "MatthewLieber",
        "harisubramoni",
        "natshineman"
    ],
    "name": "mvapich",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": false,
            "description": "Use alloca to allocate temporary memory if available",
            "name": "alloca"
        },
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "32",
            "description": "Number of bits allocated to the rank field (16 or 32)",
            "name": "ch3_rank_bits"
        },
        {
            "default": false,
            "description": "Enable CUDA extension",
            "name": "cuda"
        },
        {
            "default": false,
            "description": "Enable debug info and error messages at run-time",
            "name": "debug"
        },
        {
            "default": "auto",
            "description": "List of the ROMIO file systems to activate",
            "name": "file_systems"
        },
        {
            "default": "ofi",
            "description": "Select the netmod to be enabled for this build.For IB/RoCE systems, use the ucx netmod, for interconnects supported by libfabrics, use the ofi netmod. For more info, visit the homepage url.",
            "name": "netmod"
        },
        {
            "default": "none",
            "description": "Which pmi version to be used. If using pmi2 add it to your CFLAGS",
            "name": "pmi_version"
        },
        {
            "default": "auto",
            "description": "List of the process managers to activate",
            "name": "process_managers"
        },
        {
            "default": true,
            "description": "Enable memory registration cache",
            "name": "regcache"
        },
        {
            "default": "multiple",
            "description": "Control the level of thread support",
            "name": "threads"
        },
        {
            "default": true,
            "description": "Enable wrapper rpath",
            "name": "wrapperrpath"
        }
    ],
    "versions": [
        {
            "name": "4.0",
            "sha256": "c532f7bdd5cca71f78c12e0885c492f6e276e283711806c84d0b0f80bb3e3b74"
        },
        {
            "name": "3.0",
            "sha256": "ee076c4e672d18d6bf8dd2250e4a91fa96aac1db2c788e4572b5513d86936efb"
        }
    ],
    "versions_deprecated": []
}