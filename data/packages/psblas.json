{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "The GNU Compiler Collection includes front ends for C, C++, Objective-C,\nFortran, Ada, and Go, as well as libraries for these languages.",
            "name": "gcc"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "METIS is a set of serial programs for partitioning graphs, partitioning\nfinite element meshes, and producing fill reducing orderings for sparse\nmatrices. The algorithms implemented in METIS are based on the\nmultilevel recursive-bisection, multilevel k-way, and multi-constraint\npartitioning schemes.",
            "name": "metis"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "SuiteSparse is a suite of sparse matrix algorithms",
            "name": "suite-sparse"
        }
    ],
    "dependent_to": [],
    "description": "PSBLAS: Parallel Sparse BLAS. A library of distributed sparse linear\nalgebra with support for GPU and Multithread acceleration. Part of the\nPSCToolkit: Parallel Sparse Computation Toolkit.\n",
    "homepage": "https://psctoolkit.github.io/",
    "latest_version": "3.9.0-rc1",
    "maintainers": [
        "cirdans-home",
        "sfilippone"
    ],
    "name": "psblas",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "4",
            "description": "Length in bytes for short integers (8 or 4)",
            "name": "IPK"
        },
        {
            "default": "8",
            "description": "Length in bytes for long integers (8 or 4)",
            "name": "LPK"
        },
        {
            "default": false,
            "description": "Activate AMD support via SuiteSparse",
            "name": "amd"
        },
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "none",
            "description": "Additional CCOPENACC flags",
            "name": "ccopenacc"
        },
        {
            "default": "none",
            "description": "Additional CCOPT flags",
            "name": "ccopt"
        },
        {
            "default": "none",
            "description": "Additional CLIBS flags",
            "name": "clibs"
        },
        {
            "default": false,
            "description": "Activate CUDA support",
            "name": "cuda"
        },
        {
            "default": "70,75,80,86,89,90",
            "description": "Specify CUDA Compute Capabilities",
            "name": "cudacc"
        },
        {
            "default": "none",
            "description": "Additional CXXOPENACC flags",
            "name": "cxxopenacc"
        },
        {
            "default": "none",
            "description": "Additional CXXOPT flags",
            "name": "cxxopt"
        },
        {
            "default": "none",
            "description": "Additional EXTRA_NVCC flags",
            "name": "extra_nvcc"
        },
        {
            "default": "none",
            "description": "Additional EXTRA_OPT flags",
            "name": "extra_opt"
        },
        {
            "default": "none",
            "description": "Additional EXTRAOPENACC flags",
            "name": "extraopenacc"
        },
        {
            "default": "none",
            "description": "Additional FCOPENACC flags",
            "name": "fcopenacc"
        },
        {
            "default": "none",
            "description": "Additional FCOPT flags",
            "name": "fcopt"
        },
        {
            "default": "none",
            "description": "Additional FLIBS flags",
            "name": "flibs"
        },
        {
            "default": "none",
            "description": "Additional link flags",
            "name": "libs"
        },
        {
            "default": false,
            "description": "Activate METIS support",
            "name": "metis"
        },
        {
            "default": true,
            "description": "Activates MPI support",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Activate OpenACC support",
            "name": "openacc"
        },
        {
            "default": false,
            "description": "Activates OpenMP support",
            "name": "openmp"
        }
    ],
    "versions": [
        {
            "name": "3.9.0-rc1",
            "sha256": "7a7091ce52582b6fc442e8793e36461be36c0947272ea803ad72736ec2d56da8"
        },
        {
            "name": "3.8.1-2",
            "sha256": "285ddb7c9a793ea7ecb428d68cf23f4cc04f1c567631aa84bc2bedb65a3d1b0c"
        },
        {
            "name": "3.8.1",
            "sha256": "02e1f00e644426eb15eb08c735cf9c8ae692392f35c2cfe4f7474e1ab91575dc"
        },
        {
            "name": "3.8.0-2",
            "sha256": "86a76bb0987edddd4c10c810d7f18e13742aadc66ac14ad3679669809c1184fa"
        },
        {
            "branch": "development",
            "name": "development"
        }
    ],
    "versions_deprecated": []
}