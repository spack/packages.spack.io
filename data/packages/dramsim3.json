{
    "aliases": [],
    "build_system": "Package",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        }
    ],
    "dependent_to": [
        {
            "description": "SST Elements implements a range of components for performing\narchitecture simulation from node-level to system-level using the SST\ndiscrete event core.",
            "name": "sst-elements"
        }
    ],
    "description": "DRAMsim3 models the timing paramaters and memory controller behavior for\nseveral DRAM protocols such as DDR3, DDR4, LPDDR3, LPDDR4, GDDR5, GDDR6,\nHBM, HMC, STT-MRAM. It is implemented in C++ as an objected oriented\nmodel that includes a parameterized DRAM bank model, DRAM controllers,\ncommand queues and system-level interfaces to interact with a CPU\nsimulator (GEM5, ZSim) or trace workloads. It is designed to be\naccurate, portable and parallel.\n",
    "homepage": "https://github.com/umd-memsys/DRAMsim3",
    "latest_version": "1.0.0",
    "maintainers": [],
    "name": "dramsim3",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "1.0.0",
            "sha256": "064b732256f3bec9b553e00bcbc9a1d82172ec194f2b69c8797f585200b12566"
        }
    ],
    "versions_deprecated": []
}