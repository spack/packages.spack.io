{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Neo4j is the world's leading Graph Database. It is a high performance\ngraph store with all the features expected of a mature and robust\ndatabase, like a friendly query language and ACID transactions. The\nprogrammer works with a flexible network structure of nodes and\nrelationships rather than static tables--yet enjoys all the benefits of\nenterprise-quality database. For many applications, Neo4j offers orders\nof magnitude performance benefits compared to relational DBs.",
            "name": "neo4j"
        },
        {
            "description": "In-process task scheduler with Cron-like capabilities.",
            "name": "py-apscheduler"
        },
        {
            "description": "Celery - Distributed Task Queue.",
            "name": "py-celery"
        },
        {
            "description": "Foreign Function Interface for Python calling C code",
            "name": "py-cffi"
        },
        {
            "description": "Python Utilities and Autogenerated Classes for loading and parsing CWL\nv1.0, CWL v1.1, and CWL v1.2 documents.",
            "name": "py-cwl-utils"
        },
        {
            "description": "Docutils is an open-source text processing system for processing\nplaintext documentation into useful formats, such as HTML, LaTeX, man-\npages, open-document or XML. It includes reStructuredText, the easy to\nread, easy to use, what-you-see-is-what-you-get plaintext markup\nlanguage.",
            "name": "py-docutils"
        },
        {
            "description": "FastAPI framework, high performance, easy to learn, fast to code, ready\nfor production",
            "name": "py-fastapi"
        },
        {
            "description": "A simple framework for building complex web applications.",
            "name": "py-flask"
        },
        {
            "description": "Simple framework for creating REST APIs",
            "name": "py-flask-restful"
        },
        {
            "description": "Simple Python interface for Graphviz",
            "name": "py-graphviz"
        },
        {
            "description": "WSGI HTTP Server for UNIX",
            "name": "py-gunicorn"
        },
        {
            "description": "Python library for serializing any arbitrary object graph into JSON.",
            "name": "py-jsonpickle"
        },
        {
            "description": "Experimental type system extensions for programs checked with the mypy\ntypechecker.",
            "name": "py-mypy-extensions"
        },
        {
            "description": "This is the neo4j bolt driver for python from the official repository",
            "name": "py-neo4j"
        },
        {
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks.",
            "name": "py-networkx"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Python dependency management and packaging made easy.",
            "name": "py-poetry"
        },
        {
            "description": "A framework for managing and maintaining multi-language pre-commit\nhooks.",
            "name": "py-pre-commit"
        },
        {
            "description": "Library to implement a well-behaved Unix daemon process. This library\nimplements the well-behaved daemon specification of PEP Standard daemon\nprocess. A well-behaved Unix daemon process is tricky to get right, but\nthe required steps are much the same for every daemon program. A\nDaemonContext instance holds the behaviour and configured process\nenvironment for the program; use the instance as a context manager to\nenter a daemon state.",
            "name": "py-python-daemon"
        },
        {
            "description": "PyYAML is a YAML parser and emitter for Python.",
            "name": "py-pyyaml"
        },
        {
            "description": "Python HTTP for Humans.",
            "name": "py-requests"
        },
        {
            "description": "Use requests to talk HTTP via a UNIX domain socket.",
            "name": "py-requests-unixsocket"
        },
        {
            "description": "Typer, build great CLIs. Easy to code. Based on Python type hints.",
            "name": "py-typer"
        },
        {
            "description": "The lightning-fast ASGI server.",
            "name": "py-uvicorn"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        },
        {
            "description": "Redis is an open source (BSD licensed), in-memory data structure store,\nused as a database, cache and message broker. It supports data\nstructures such as strings, hashes, lists, sets, sorted sets with range\nqueries, bitmaps, hyperloglogs, geospatial indexes with radius queries\nand streams. Redis has built-in replication, Lua scripting, LRU\neviction, transactions and different levels of on-disk persistence, and\nprovides high availability via Redis Sentinel and automatic partitioning\nwith Redis Cluster",
            "name": "redis"
        }
    ],
    "dependent_to": [],
    "description": "BEE is a workflow orchestration system designed to build containerized\nHPC applications and orchestrate workflows across HPC and cloud systems.\nBEE has adopted the Common Workflow Language (CWL) for specifying\nworkflows. Complex scientific workflows specified by CWL are managed and\nvisualized through a graph database, giving the user the ability to\nmonitor the state of each task in the workflow. BEE runs jobs using the\nworkload scheduler (i.e. Slurm or Flux) on the HPC system that tasks are\nspecified to run on.\n",
    "homepage": "https://github.com/lanl/bee",
    "latest_version": "0.1.10",
    "maintainers": [
        "pagrubel"
    ],
    "name": "hpc-beeflow",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.1.10",
            "sha256": "b7863798e15591a16f6cd265f9b5b7385779630f1c37d8a2a5178b8bf89fc664"
        },
        {
            "branch": "spack-develop",
            "name": "spack-develop"
        }
    ],
    "versions_deprecated": []
}