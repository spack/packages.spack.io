{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "Autoconf -- system configuration part of autotools",
            "name": "autoconf"
        },
        {
            "description": "Automake -- make file builder part of autotools",
            "name": "automake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "libtool -- library building part of autotools.",
            "name": "libtool"
        },
        {
            "description": "GNU M4 is an implementation of the traditional Unix macro processor.",
            "name": "m4"
        },
        {
            "description": "Texinfo is the official documentation format of the GNU project. It was\ninvented by Richard Stallman and Bob Chassell many years ago, loosely\nbased on Brian Reid's Scribe and other formatting languages of the time.\nIt is used by many non-GNU projects as well.",
            "name": "texinfo"
        }
    ],
    "dependent_to": [
        {
            "description": "The LDC project aims to provide a portable D programming language\ncompiler with modern optimization and code generation capabilities. LDC\nis fully Open Source; the parts of the code not taken/adapted from other\nprojects are BSD-licensed (see the LICENSE file for details). Consult\nthe D wiki for further information: https://wiki.dlang.org/LDC",
            "name": "ldc"
        },
        {
            "description": "The LDC project aims to provide a portable D programming language\ncompiler with modern optimization and code generation capabilities. LDC\nis fully Open Source; the parts of the code not taken/adapted from other\nprojects are BSD-licensed (see the LICENSE file for details). Consult\nthe D wiki for further information: https://wiki.dlang.org/LDC This old\nversion of the compiler is needed to bootstrap newer ones.",
            "name": "ldc-bootstrap"
        },
        {
            "description": "The CXI library provides interfaces which interact directly with CXI\ndrivers.",
            "name": "libcxi"
        }
    ],
    "description": "C/C++ Configuration File Library\n",
    "homepage": "https://www.hyperrealm.com/libconfig/",
    "latest_version": "1.7.3",
    "maintainers": [],
    "name": "libconfig",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "1.7.3",
            "sha256": "68757e37c567fd026330c8a8449aa5f9cac08a642f213f2687186b903bd7e94e"
        },
        {
            "name": "1.7.2",
            "sha256": "f67ac44099916ae260a6c9e290a90809e7d782d96cdd462cac656ebc5b685726"
        },
        {
            "name": "1.7.1",
            "sha256": "d288e6ae817f4ef78df43cdb2647f768dc97899ee82fcc41f857e8eb9fd7fbdb"
        },
        {
            "name": "1.5",
            "sha256": "cae5c02361d8a9b2bb26946c64f089d2e5e599972f386203fbc48975c0d885c8"
        }
    ],
    "versions_deprecated": []
}