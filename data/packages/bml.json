{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": "bml: Must use master branch of bml",
            "name": "+magma",
            "spec": "@1.1.0:2.2.0"
        },
        {
            "description": null,
            "name": "+mpi",
            "spec": "@:1.2.2"
        }
    ],
    "dependencies": [
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "The MAGMA project aims to develop a dense linear algebra library similar\nto LAPACK but for heterogeneous/hybrid architectures, starting with\ncurrent \"Multicore+GPU\" systems.",
            "name": "magma"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [
        {
            "description": "ExaSP2 is a reference implementation of typical linear algebra\nalgorithms and workloads for a quantum molecular dynamics (QMD)\nelectronic structure code. The algorithm is based on a recursive second-\norder Fermi-Operator expansion method (SP2) and is tailored for density\nfunctional based tight-binding calculations of material systems. The SP2\nalgorithm variants are part of the Los Alamos Transferable Tight-binding\nfor Energetics (LATTE) code, based on a matrix expansion of the Fermi\noperator in a recursive series of generalized matrix-matrix\nmultiplications. It is created and maintained by Co-Design Center for\nParticle Applications (CoPA). The code is intended to serve as a vehicle\nfor co-design by allowing others to extend and/or reimplement as needed\nto test performance of new architectures, programming models, etc.",
            "name": "exasp2"
        },
        {
            "description": "Los Alamos Crystal Cut (LCC) is a simple crystal builder. It is an easy-\nto-use and easy-to-develop code to make crystal solid/shape and slabs\nfrom a crystal lattice. Provided you have a \u2018.pdb\u2018 file containing your\nlattice basis you can create a solid or slab from command line.",
            "name": "lcc"
        },
        {
            "description": "PROGRESS: Parallel, Rapid O(N) and Graph-based Recursive Electronic\nStructure Solver. This library is focused on the development of general\nsolvers that are commonly used in quantum chemistry packages.",
            "name": "qmd-progress"
        }
    ],
    "description": "The basic matrix library (bml) is an implementation of various matrix\ndata formats (dense and sparse) and their associated algorithms for\nbasic matrix operations used electronic structure solvers.\n",
    "homepage": "https://lanl.github.io/bml/",
    "latest_version": "2.2.0",
    "maintainers": [
        "finkeljos",
        "jeanlucf22"
    ],
    "name": "bml",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Use cusolver diagonalization instead internal magma one.",
            "name": "cusolver"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Build with magma support",
            "name": "magma"
        },
        {
            "default": true,
            "description": "Build with MPI Support",
            "name": "mpi"
        },
        {
            "default": true,
            "description": "Build shared libs",
            "name": "shared"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "2.2.0",
            "sha256": "41703eee605bcb0ce3bcb5dde5914363aaa382393138ab24f02acf84f670fad0"
        },
        {
            "name": "2.1.2",
            "sha256": "d5bb4726759eb35ec66fae7b6ce8b4978cee33fa879aed314bf7aa1fa7eece91"
        },
        {
            "name": "2.1.1",
            "sha256": "412cdc1609e8d66d4a47799806c0974ed3f84c25f09132ad2821a173e8d89261"
        },
        {
            "name": "2.1.0",
            "sha256": "f95f0289d055a91d8499e2a37f785f69ca3b86dc6cf16726ee6c433b8b8a7f62"
        },
        {
            "name": "2.0.1",
            "sha256": "ffb590b745888bbf1ff1892e920c29dd3edd7b29405ade3a738df4db5b1e2370"
        },
        {
            "name": "2.0.0",
            "sha256": "dd9454f825605ee849b68e80bf28c2eaec0d0dd1d491807895352eb08e616bd9"
        },
        {
            "name": "1.3.1",
            "sha256": "d9cbf95467f7a97d0eaa5a1a7a16481a160464c930a593bce4f2a32b012e2c24"
        },
        {
            "name": "1.3.0",
            "sha256": "c2d3de0021b314b3fbdaa5445b96109dc22b1ae5c78363eac08fbde692ffe1ad"
        },
        {
            "name": "1.2.3",
            "sha256": "8106b8ba3d1fb402b98fcfb0110e00ac18264b240b47320268888fc27971aeab"
        },
        {
            "name": "1.2.2",
            "sha256": "babc2fd0229397e418be00f3691277e86f549b5a23cadbcee66078595e9176a0"
        },
        {
            "name": "1.1.0",
            "sha256": "a90ede19d80ed870f0bf1588875a9f371484d89006a7296010d8d791da3eac33"
        }
    ],
    "versions_deprecated": []
}