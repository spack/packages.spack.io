{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "ecBuild is the ECMWF build system. It is built on top of CMake and\nconsists of a set of macros as well as a wrapper around CMake",
            "name": "ecbuild"
        },
        {
            "description": "ecKit is a cross-platform c++ toolkit that supports development of tools\nand applications at ECMWF.",
            "name": "eckit"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The OpenMP subproject of LLVM contains the components required to build\nan executable OpenMP program that are outside the compiler itself.",
            "name": "llvm-openmp"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        }
    ],
    "dependent_to": [
        {
            "description": "A library for numerical weather prediction and climate modelling.",
            "name": "ecmwf-atlas"
        },
        {
            "description": "FIAT (Fortran IFS and Arpege Toolkit) is a collection of selected\nFortran utility libraries, extracted from the IFS/Arpege model.",
            "name": "fiat"
        }
    ],
    "description": "A Fortran toolkit for interoperating Fortran with C/C++.\n",
    "homepage": "https://software.ecmwf.int/wiki/display/fckit",
    "latest_version": "0.13.2",
    "maintainers": [
        "climbfuji"
    ],
    "name": "fckit",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "RelWithDebInfo",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": true,
            "description": "Enable eckit",
            "name": "eckit"
        },
        {
            "default": false,
            "description": "Apply patching for FISMA-high compliance",
            "name": "fismahigh"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Use OpenMP?",
            "name": "openmp"
        },
        {
            "default": true,
            "description": "Build shared libraries",
            "name": "shared"
        }
    ],
    "versions": [
        {
            "branch": "develop",
            "name": "develop"
        },
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "0.13.2",
            "sha256": "990623eb4eb999145f2d852da9fbd71a69e2e0be601c655c274e8382750dfda2"
        },
        {
            "name": "0.13.1",
            "sha256": "89a067a7b5b1f2c7909739b567bd43b69f8a2d91e8cbcbac58655fb2d861db51"
        },
        {
            "name": "0.11.0",
            "sha256": "846f5c369940c0a3d42cd12932f7d6155339e79218d149ebbfdd02e759dc86c5"
        },
        {
            "name": "0.10.1",
            "sha256": "9cde04fefa50624bf89068ab793cc2e9437c0cd1c271a41af7d54dbd37c306be"
        },
        {
            "name": "0.10.0",
            "sha256": "f16829f63a01cdef5e158ed2a51f6d4200b3fe6dce8f251af158141a1afe482b"
        },
        {
            "name": "0.9.5",
            "sha256": "183cd78e66d3283d9e6e8e9888d3145f453690a4509fb701b28d1ac6757db5de"
        }
    ],
    "versions_deprecated": []
}