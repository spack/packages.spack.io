{
    "aliases": [
        {
            "alias_for": "amdlibflame+lapack2flame",
            "name": "lapack"
        },
        {
            "alias_for": "amdlibflame@2:",
            "name": "flame"
        }
    ],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": "amdlibflame: openmp is not supported by amdlibflame < 4.0",
            "name": "threads=openmp",
            "spec": "@:3"
        },
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        },
        {
            "description": null,
            "name": "generator=ninja",
            "spec": "build_system=cmake"
        },
        {
            "description": "amdlibflame: pthread is not supported",
            "name": "threads=pthreads",
            "spec": ""
        }
    ],
    "dependencies": [
        {
            "description": "The library AOCL-Utils is intended to provide a uniform interface to all\nAOCL libraries to access CPU features, especially for AMD CPUs. The\nlibrary provides the following features: * Core details * Flags\navailable/usable * ISA available/usable * Topology about L1/L2/L3 AOCL-\nUtils is designed to be integrated into other AMD AOCL libraries. Each\nproject has their own mechanism to identify CPU and provide necessary\nfeatures such as \"dynamic dispatch\".The main purpose of this library is\nto provide a centralized mechanism to update/validate and provide\ninformation to the users of this library. LICENSING INFORMATION: By\ndownloading, installing and using this software, you agree to the terms\nand conditions of the AMD AOCL-Utils license agreement. You may obtain a\ncopy of this license agreement from https://www.amd.com/content/dam/amd/\nen/documents/developer/version-4-2-eulas/utils-elua-4-2.pdf",
            "name": "aocl-utils"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        }
    ],
    "dependent_to": [
        {
            "description": "AMD Optimizing CPU Libraries (AOCL) - AOCL is a set of numerical\nlibraries tuned specifically for AMD EPYC processor family. They have a\nsimple interface to take advantage of the latest hardware innovations.\nThe tuned implementations of industry standard math libraries enable\nfast development of scientific and high performance computing projects\nLICENSING INFORMATION: By downloading, installing and using this\nsoftware, you agree to the terms and conditions of the AMD AOCL license\nagreement. You may obtain a copy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/aocl-eula.html\nhttps://www.amd.com/en/developer/aocl/eula/aocl-4-1-eula.html",
            "name": "amd-aocl"
        },
        {
            "description": "ScaLAPACK is a library of high-performance linear algebra routines for\nparallel distributed memory machines. It depends on external libraries\nincluding BLAS and LAPACK for Linear Algebra computations. AMD's\noptimized version of ScaLAPACK enables using BLIS and LibFLAME library\nthat have optimized dense matrix functions and solvers for AMD EPYC\nprocessor family CPUs. LICENSING INFORMATION: By downloading, installing\nand using this software, you agree to the terms and conditions of the\nAMD AOCL-ScaLAPACK license agreement. You may obtain a copy of this\nlicense agreement from\nhttps://www.amd.com/en/developer/aocl/scalapack/eula/scalapack-\nlibraries-4-2-eula.html\nhttps://www.amd.com/en/developer/aocl/scalapack/eula/scalapack-\nlibraries-eula.html",
            "name": "amdscalapack"
        },
        {
            "description": "The AOCL Data Analytics Library (AOCL-DA) is a data analytics library\nproviding optimized building blocks for data analysis. It is written\nwith a C-compatible interface to make it as seamless as possible to\nintegrate with the library from whichever programming language you are\nusing. The intended workflow for using the library is as follows: \u2022 load\ndata from memory by reading CSV files or using the in-built da_datastore\nobject \u2022 preprocess the data by removing missing values, standardizing,\nand selecting certain subsets of the data, before extracting contiguous\narrays of data from the da_datastore objects \u2022 data processing (e.g.\nprincipal component analysis, linear model fitting, etc.) C++ example\nprograms can be found in the examples folder of your installation.",
            "name": "aocl-da"
        },
        {
            "description": "AOCL-Sparse is a library that contains basic linear algebra subroutines\nfor sparse matrices and vectors optimized for AMD EPYC family of\nprocessors. It is designed to be used with C and C++. Current\nfunctionality of sparse library supports SPMV function with CSR and\nELLPACK formats. LICENSING INFORMATION: By downloading, installing and\nusing this software, you agree to the terms and conditions of the AMD\nAOCL-Sparse license agreement. You may obtain a copy of this license\nagreement from https://www.amd.com/en/developer/aocl/sparse/eula/sparse-\nlibraries-4-2-eula.html\nhttps://www.amd.com/en/developer/aocl/sparse/eula/sparse-libraries-\neula.html",
            "name": "aocl-sparse"
        }
    ],
    "description": "libFLAME (AMD Optimized version) is a portable library for dense matrix\ncomputations, providing much of the functionality present in Linear\nAlgebra Package (LAPACK). It includes a compatibility layer, FLAPACK,\nwhich includes complete LAPACK implementation. The library provides\nscientific and numerical computing communities with a modern, high-\nperformance dense linear algebra library that is extensible, easy to\nuse, and available under an open source license. libFLAME is a C-only\nimplementation and does not depend on any external FORTRAN libraries\nincluding LAPACK. There is an optional backward compatibility layer,\nlapack2flame that maps LAPACK routine invocations to their corresponding\nnative C implementations in libFLAME. This allows legacy applications to\nstart taking advantage of libFLAME with virtually no changes to their\nsource code. In combination with BLIS library which includes\noptimizations for the AMD EPYC processor family, libFLAME enables\nrunning high performing LAPACK functionalities on AMD platform.\nLICENSING INFORMATION: By downloading, installing and using this\nsoftware, you agree to the terms and conditions of the AMD AOCL-libFLAME\nlicense agreement. You may obtain a copy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/dense/eula-\nlibflame/libflame-4-2-eula.html\nhttps://www.amd.com/en/developer/aocl/dense/eula-libflame/libflame-\neula.html\n",
    "homepage": "https://www.amd.com/en/developer/aocl/blis.html#libflame",
    "latest_version": "5.0",
    "maintainers": [
        "amd-toolchain-support"
    ],
    "name": "amdlibflame",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.amdlibflame",
            "relative_path": "Makefile_5.1.0.patch",
            "reverse": false,
            "sha256": "952fb1aea7056fdf37c38dfad596d375dfd9d35d82d0e7662cacb06c08e5e4bf",
            "version": "@5.1.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.amdlibflame",
            "relative_path": "Makefile_5.2.0.patch",
            "reverse": false,
            "sha256": "c5cae9e9afe42a6cdca1dcfdc39058a3e75d076483467c1e0fefe6bb76a4b16b",
            "version": "@5.2.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.amdlibflame",
            "relative_path": "Makefile_5.2.0_darwin.patch",
            "reverse": false,
            "sha256": "bf75a5b56d4d63f23d01976eb2e61bb0b2816b662a7c7a3de9f03b9276b0973a",
            "version": "@5.2.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.amdlibflame",
            "relative_path": "aocc-2.2.0.patch",
            "reverse": false,
            "sha256": "0f919537891ef7dafd5733167e7b5217b4fe0d684fcd3d48f2df19d6605c0c0d",
            "version": "@:2",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.amdlibflame",
            "relative_path": "cray-compiler-wrapper.patch",
            "reverse": false,
            "sha256": "b3066e8ea70f9a59d1ce00330d72764482dd0faa57d185a45f73ce0effa2bc14",
            "version": "@:3.0.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.amdlibflame",
            "relative_path": "supermat.patch",
            "reverse": false,
            "sha256": "4e9ea3fa30a6266ebcd3dcc4839be8e3a55ad5d5481e88188c973436cfb85d25",
            "version": "@4.0:4.1",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.amdlibflame",
            "relative_path": "libflame-pkgconfig.patch",
            "reverse": false,
            "sha256": "9c62ab50d7de63aebc01994616f96f2a81f7ca77af0cd2940bd84f867c4af956",
            "version": "@4.2",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Build with debugging support",
            "name": "debug"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "Build with ILP64 support",
            "name": "ilp64"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Map legacy LAPACK routine invocations to their corresponding native C implementations in libflame.",
            "name": "lapack2flame"
        },
        {
            "default": "False",
            "description": "Enable AOCL DTL Logging",
            "name": "logging"
        },
        {
            "default": true,
            "description": "Build shared library",
            "name": "shared"
        },
        {
            "default": true,
            "description": "Build static library",
            "name": "static"
        },
        {
            "default": "none",
            "description": "Multithreading support",
            "name": "threads"
        },
        {
            "default": "False",
            "description": "Enable AOCL DTL Tracing",
            "name": "tracing"
        },
        {
            "default": "auto",
            "description": "Use hardware vectorization support",
            "name": "vectorization"
        }
    ],
    "versions": [
        {
            "name": "5.0",
            "sha256": "3bee3712459a8c5bd728a521d8a4c8f46735730bf35d48c878d2fc45fc000918"
        },
        {
            "name": "4.2",
            "sha256": "93a433c169528ffba74a99df0ba3ce3d5b1fab9bf06ce8d2fd72ee84768ed84c"
        },
        {
            "name": "4.1",
            "sha256": "8aed69c60d11cc17e058cabcb8a931cee4f343064ade3e73d3392b7214624b61"
        },
        {
            "name": "4.0",
            "sha256": "bcb05763aa1df1e88f0da5e43ff86d956826cbea1d9c5ff591d78a3e091c66a4"
        },
        {
            "name": "3.2",
            "sha256": "6b5337fb668b82d0ed0a4ab4b5af4e2f72e4cedbeeb4a8b6eb9a3ef057fb749a"
        },
        {
            "name": "3.1",
            "sha256": "4520fb93fcc89161f65a40810cae0fa1f87cecb242da4a69655f502545a53426"
        },
        {
            "name": "3.0.1",
            "sha256": "5859e7b39ffbe73115dd598b035f212d36310462cf3a45e555a5087301710776"
        },
        {
            "name": "3.0",
            "sha256": "d94e08b688539748571e6d4c1ec1ce42732eac18bd75de989234983c33f01ced"
        },
        {
            "name": "2.2",
            "sha256": "12b9c1f92d2c2fa637305aaa15cf706652406f210eaa5cbc17aaea9fcfa576dc"
        }
    ],
    "versions_deprecated": []
}