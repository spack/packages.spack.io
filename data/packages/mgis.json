{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use.",
            "name": "boost"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        },
        {
            "description": "The TFEL project is a collaborative development of CEA (French\nAlternative Energies and Atomic Energy Commission) and EDF (Electricite\nde France). It mostly contains the MFront code generator which\ntranslates a set of closely related domain specific languages into plain\nC++ on top of the TFEL libraries. MFront handles material properties,\nmechanical behaviours and simple point-wise models. Interfaces are\nprovided for several finite element solvers, such as: Abaqus/Standard,\nAbaqus/Explicit, Ansys APDL, Cast3M, Europlexus, Code_Aster, CalculiX\nand a few others. MFront comes with an handy easy-to-use tool called\nMTest that can test the local behaviour of a material, by imposing\nindependent constraints on each component of the strain or the stress.",
            "name": "tfel"
        }
    ],
    "dependent_to": [],
    "description": " The MFrontGenericInterfaceSupport project (MGIS) provides helper\nfunctions for various solvers to interact with behaviour written using\nMFront generic interface. MGIS is written in C++. Bindings are provided\nfor C and fortran (2003). A FEniCS binding is also available.\n",
    "homepage": "https://thelfer.github.io/mgis/web/index.html",
    "latest_version": "3.0.1",
    "maintainers": [
        "thelfer"
    ],
    "name": "mgis",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": true,
            "description": "Enables c bindings",
            "name": "c"
        },
        {
            "default": true,
            "description": "Enables fortran bindings",
            "name": "fortran"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Enables python bindings",
            "name": "python"
        },
        {
            "default": false,
            "description": "Enables static libraries",
            "name": "static"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "3.0.1",
            "sha256": "fb9a7f5008a43c70bdb1c4b80f32f7fd3e4274c912b93c36af7011d3c4f93039"
        },
        {
            "name": "3.0",
            "sha256": "dae915201fd20848b69745dabda1a334eb242d823af600825b8b010ddc597640"
        },
        {
            "name": "2.2.1",
            "sha256": "a0e6af65f5fd2237f39306354ef786eadb0c6bc6868c23e2681e04a83e629ad2"
        },
        {
            "name": "2.2",
            "sha256": "b3776d7b3a534ca626525a42b97665f7660ae2b28ea57b3f53fd7e8538da1ceb"
        },
        {
            "name": "2.1",
            "sha256": "f5b556aab130da0c423f395fe4c35d6bf509dd8fc958242f2e37ea788464aea9"
        },
        {
            "name": "2.0",
            "sha256": "cb427d77f2c79423e969815b948a8b44da33a4370d1760e8c1e22a569f3585e2"
        },
        {
            "name": "1.2.2",
            "sha256": "dc24e85cc90ec656ed707eef3d511317ad800915014d9e4e9cf8818b406586d5"
        },
        {
            "name": "1.2.1",
            "sha256": "a2d7cae3a24546adcf1d1bf7f13f012170d359370f5b6b2c1730b19eb507601d"
        },
        {
            "name": "1.2",
            "sha256": "ed82ab91cbe17c00ef36578dbfcb4d1817d4c956619b7cccbea3e3f1a3b31940"
        },
        {
            "name": "1.1",
            "sha256": "06593d7a052678deaee87ef60b2213db7545c5be9823f261d3388b3978a0b7a5"
        },
        {
            "name": "1.0.1",
            "sha256": "6102621455bc5d9b1591cd33e93b2e15a9572d2ce59ca6dfa30ba57ae1265c08"
        },
        {
            "name": "1.0",
            "sha256": "279c98da00fa6855edf29c2b8f8bad6e7732298dc62ef67d028d6bbeaac043b3"
        },
        {
            "branch": "rliv-3.0",
            "name": "rliv-3.0"
        },
        {
            "branch": "rliv-2.2",
            "name": "rliv-2.2"
        },
        {
            "branch": "rliv-2.1",
            "name": "rliv-2.1"
        },
        {
            "branch": "rliv-2.0",
            "name": "rliv-2.0"
        },
        {
            "branch": "rliv-1.2",
            "name": "rliv-1.2"
        },
        {
            "branch": "rliv-1.1",
            "name": "rliv-1.1"
        },
        {
            "branch": "rliv-1.0",
            "name": "rliv-1.0"
        }
    ],
    "versions_deprecated": []
}