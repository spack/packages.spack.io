{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "ETSF_IO is a library implementing the Nanoquanta/ETSF file format\nspecifications. ETSF_IO enables an architecture-independent exchange of\ncrystallographic data, electronic wavefunctions, densities and\npotentials, as well as spectroscopic data. It is meant to be used by\nquantum-physical and quantum-chemical applications relying upon Density\nFunctional Theory (DFT).",
            "name": "etsf-io"
        },
        {
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications.",
            "name": "fftw"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data.",
            "name": "hdf5"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "Libxc is a library of exchange-correlation functionals for density-\nfunctional theory.",
            "name": "libxc"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution.",
            "name": "netcdf-c"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the Fortran\ndistribution.",
            "name": "netcdf-fortran"
        },
        {
            "description": "NVPL ScaLAPACK (NVIDIA Performance Libraries ScaLAPACK).",
            "name": "scalapack"
        }
    ],
    "dependent_to": [],
    "description": "Yambo is a FORTRAN/C code for Many-Body calculations in solid state and\nmolecular physics. Yambo relies on the Kohn-Sham wavefunctions generated\nby two DFT public codes: abinit, and PWscf. The code was originally\ndeveloped in the Condensed Matter Theoretical Group of the Physics\nDepartment at the University of Rome \"Tor Vergata\" by Andrea Marini.\nPrevious to its release under the GPL license, yambo was known as SELF.\n",
    "homepage": "https://www.yambo-code.org/index.php",
    "latest_version": "5.2.4",
    "maintainers": [
        "LydDeb"
    ],
    "name": "yambo",
    "patches": [],
    "resources": [
        {
            "destination": "ydriver_archive",
            "name": "ydriver",
            "placement": "archive",
            "version": "@5.2.4"
        },
        {
            "destination": "ydriver_archive",
            "name": "ydriver",
            "placement": "archive",
            "version": "@5.2.1:5.2.3"
        },
        {
            "destination": "yambo_libraries",
            "name": "iotk",
            "placement": null,
            "version": "@5.2"
        }
    ],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable double precision",
            "name": "dp"
        },
        {
            "default": "iotk",
            "description": "Activate support for different io formats (requires network access)",
            "name": "io"
        },
        {
            "default": true,
            "description": "Enable MPI support",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Enable OpenMP support",
            "name": "openmp"
        },
        {
            "default": "none",
            "description": "Activate profiling of specific sections",
            "name": "profile"
        }
    ],
    "versions": [
        {
            "name": "5.2.4",
            "sha256": "7c3f2602389fc29a0d8570c2fe85fe3768d390cfcbb2d371e83e75c6c951d5fc"
        },
        {
            "name": "5.2.3",
            "sha256": "a6168d1fa820af857ac51217bd6ad26dda4cc89c07e035bd7dc230038ae1ab9c"
        },
        {
            "name": "5.2.1",
            "sha256": "0ac362854313927d75bbf87be98ff58447f3805f79724c38dc79df07f03a7046"
        },
        {
            "name": "5.1.1",
            "sha256": "c85036ca60507e627c47b6c6aee8241830349e88110e1ce9132ef03ab2c4e9f6"
        },
        {
            "name": "4.2.2",
            "sha256": "86b4ebe679387233266aba49948246c85a32b1e6840d024f162962bd0112448c"
        },
        {
            "name": "4.2.1",
            "sha256": "8ccd0ca75cc32d9266d4a37edd2a7396cf5038f3a68be07c0f0f77d1afc72bdc"
        },
        {
            "name": "4.2.0",
            "sha256": "9f78c4237ff363ff4e9ea5eeea671b6fff783d9a6078cc31b0b1abeb1f040f4d"
        }
    ],
    "versions_deprecated": []
}