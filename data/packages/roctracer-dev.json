{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": null,
            "name": "amdgpu_target=none",
            "spec": "+rocm"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "HIP is a C++ Runtime API and Kernel Language that allows developers to\ncreate portable applications for AMD and NVIDIA GPUs from single source\ncode.",
            "name": "hip"
        },
        {
            "description": "This repository includes the user mode API nterfaces and libraries\nnecessary for host applications to launch computer kernels to available\nHSA ROCm kernel agents.AMD Heterogeneous System Architecture HSA - Linux\nHSA Runtime for Boltzmann (ROCm) platforms.",
            "name": "hsa-rocr-dev"
        },
        {
            "description": "This is a thunk python recipe to build and install Thunk Interface.\nThunk Interface is a user-mode API interfaces used to interact with the\nROCk driver.",
            "name": "hsakmt-roct"
        },
        {
            "description": "Toolkit for the construction of highly optimized compilers, optimizers,\nand run-time environments.",
            "name": "llvm-amdgpu"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "Parse C++ header files and generate a data structure representing the\nclass",
            "name": "py-cppheaderparser"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "rocm-core is a utility which can be used to get ROCm release version. It\nalso provides the Lmod modules files for the ROCm release.\ngetROCmVersion function provides the ROCm version.",
            "name": "rocm-core"
        },
        {
            "description": "Radeon Open Compute (ROCm) Runtime rocminfo tool",
            "name": "rocminfo"
        },
        {
            "description": "ROCPROFILER library for AMD HSA runtime API extension support",
            "name": "rocprofiler-dev"
        }
    ],
    "dependent_to": [
        {
            "description": "Aluminum provides a generic interface to high-performance communication\nlibraries, with a focus on allreduce algorithms. Blocking and non-\nblocking algorithms and GPU-aware algorithms are supported. Aluminum\nalso contains custom implementations of select algorithms to optimize\nfor certain situations.",
            "name": "aluminum"
        },
        {
            "description": "Autonomic Performance Environment for eXascale (APEX).",
            "name": "apex"
        },
        {
            "description": "DiHydrogen is the second version of the Hydrogen fork of the well-known\ndistributed linear algebra library, Elemental. DiHydrogen aims to be a\nbasic distributed multilinear algebra interface with a particular\nemphasis on the needs of the distributed machine learning effort, LBANN.",
            "name": "dihydrogen"
        },
        {
            "description": "hipBLASLt is a library that provides general matrix-matrix operations\nwith a flexible API and extends functionalities beyond a traditional\nBLAS library",
            "name": "hipblaslt"
        },
        {
            "description": "HPCToolkit is an integrated suite of tools for measurement and analysis\nof program performance on computers ranging from multicore desktop\nsystems to the nation's largest supercomputers. By using statistical\nsampling of timers and hardware performance counters, HPCToolkit\ncollects accurate measurements of a program's work, resource\nconsumption, and inefficiency and attributes them to the full calling\ncontext in which they occur.",
            "name": "hpctoolkit"
        },
        {
            "description": "LBANN: Livermore Big Artificial Neural Network Toolkit. A distributed\nmemory, HPC-optimized, model and data parallel training toolkit for deep\nneural networks.",
            "name": "lbann"
        },
        {
            "description": "AMD's library for high performance machine learning primitives.",
            "name": "miopen-hip"
        },
        {
            "description": "Application Profiling, Tracing, and Analysis",
            "name": "omnitrace"
        },
        {
            "description": "CuPy is an open-source array library accelerated with NVIDIA CUDA. CuPy\nprovides GPU accelerated computing with Python. CuPy uses CUDA-related\nlibraries including cuBLAS, cuDNN, cuRand, cuSolver, cuSPARSE, cuFFT and\nNCCL to make full use of the GPU architecture.",
            "name": "py-cupy"
        },
        {
            "description": "XLA library for Jax. jaxlib is the support library for JAX. While JAX\nitself is a pure Python package, jaxlib contains the binary (C/C++)\nparts of the library, including Python bindings, the XLA compiler, the\nPJRT runtime, and a handful of handwritten kernels.",
            "name": "py-jaxlib"
        },
        {
            "description": "ONNX Runtime is a performance-focused complete scoring engine for Open\nNeural Network Exchange (ONNX) models, with an open extensible\narchitecture to continually address the latest developments in AI and\nDeep Learning. ONNX Runtime stays up to date with the ONNX standard with\ncomplete implementation of all ONNX operators, and supports all ONNX\nreleases (1.2+) with both future and backwards compatibility.",
            "name": "py-onnxruntime"
        },
        {
            "description": "TensorFlow is an open source machine learning framework for everyone.",
            "name": "py-tensorflow"
        },
        {
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration.",
            "name": "py-torch"
        },
        {
            "description": "RCCL (pronounced \"Rickle\") is a stand-alone library of standard\ncollective communication routines for GPUs, implementing all-reduce,\nall-gather, reduce, broadcast, and reduce-scatter.",
            "name": "rccl"
        },
        {
            "description": "A Redis module for serving tensors and executing deep learning graphs",
            "name": "redis-ai"
        },
        {
            "description": "Radeon Open Compute BLAS library",
            "name": "rocblas"
        },
        {
            "description": "Application Profiling, Tracing, and Analysis",
            "name": "rocprofiler-systems"
        },
        {
            "description": "A portable profiling and tracing toolkit for performance analysis of\nparallel programs written in Fortran, C, C++, UPC, Java, Python.",
            "name": "tau"
        }
    ],
    "description": "ROC-tracer library: Runtimes Generic Callback/Activity APIs. The goal of\nthe implementation is to provide a generic independent from specific\nruntime profiler to trace API and asyncronous activity.\n",
    "homepage": "https://github.com/ROCm/roctracer",
    "latest_version": "6.4.1",
    "maintainers": [
        "afzpatel",
        "renjithravindrankannath",
        "srekolam"
    ],
    "name": "roctracer-dev",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.roctracer-dev",
            "relative_path": "0001-include-rocprofiler-dev-path.patch",
            "reverse": false,
            "sha256": "54e0203e7307418864caac312515465e763b72819e8508999afabaed47e8cbdc",
            "version": "@5.3:5.4",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "none",
            "description": "AMD GPU architecture",
            "name": "amdgpu_target"
        },
        {
            "default": false,
            "description": "Build with address-sanitizer enabled or disabled",
            "name": "asan"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Enable ROCm support",
            "name": "rocm"
        }
    ],
    "versions": [
        {
            "name": "6.4.1",
            "sha256": "57d61441d95b05b12cd05210a80d81cd1d7a21dab7487680897427dfbdafddca"
        },
        {
            "name": "6.4.0",
            "sha256": "e5c6e3b20ed3c0d2dca61ad472f9878107c9ce09a2108ff6583ae32031298022"
        },
        {
            "name": "6.3.3",
            "sha256": "0d03ebd058291d584be6bf8b114292c666a799b0fd23c697e1c6cb2b6d43f990"
        },
        {
            "name": "6.3.2",
            "sha256": "ca8e93fc37f4671db28df5cb7a24b48f3d4879a188e4780e45961bba3725bb8a"
        },
        {
            "name": "6.3.1",
            "sha256": "89e4ab249f527131f684714c9135c69eaad1a63b7e74bae718b1617543b94426"
        },
        {
            "name": "6.3.0",
            "sha256": "6eb09e3b3b45ed68b2ac7ed6848521e645569bcd4a1f3a336cf2473a801308a2"
        },
        {
            "name": "6.2.4",
            "sha256": "b94c7db8ac57a4a1d7f8115020c36551220c20f33289fd06830495b4914a7d7b"
        },
        {
            "name": "6.2.1",
            "sha256": "9e69c90b9dc650e0d8642ec675082c9566e576285a725c3a5d07a37cebb18810"
        },
        {
            "name": "6.2.0",
            "sha256": "2fc39f47161f41cc041cd5ee4b1bb0e9832508650e832434056423fec3739735"
        },
        {
            "name": "6.1.2",
            "sha256": "073e67e728d5eda16d7944f3abd96348b3f278e9f36cab3ac22773ebaad0d2d6"
        },
        {
            "name": "6.1.1",
            "sha256": "9cb77fd700a0d615056f0db1e9500b73bd0352214f33bdac520e25b9125a926a"
        },
        {
            "name": "6.1.0",
            "sha256": "3f8e296c4d04123a7177d815ca166e978b085ad7c816ac298e6bb47a299fa187"
        },
        {
            "name": "6.0.2",
            "sha256": "1e0105b32fdd9c010aab304bb2ca1a5a38ba323cea610afe1135657edda8f26e"
        },
        {
            "name": "6.0.0",
            "sha256": "941166a0363c5689bfec118d54e986c43fb1ec8cbf18d95721d9a824bd52c0f8"
        },
        {
            "name": "5.7.1",
            "sha256": "ec0453adac7e62b142eb0df1e1e2506863aac4c3f2ce9d117c3184c08c0c6b48"
        },
        {
            "name": "5.7.0",
            "sha256": "40bb757920488466e29df90bb80a975cc340bf7f8771fb1d754dfbb6b688d78e"
        },
        {
            "name": "5.6.1",
            "sha256": "007c498be25b067ad9a7631a2b0892f9129150ee9714e471a921225875d45e69"
        },
        {
            "name": "5.6.0",
            "sha256": "cbcfe4fa2e8b627006b320a93992fb3078696d8ef2ef049b4b880b6b7d57e13e"
        },
        {
            "name": "5.5.1",
            "sha256": "3afc31ebfdb14b0365185ca6b9326a83b1503a94a51d910f5ce7ced192d8c133"
        },
        {
            "name": "5.5.0",
            "sha256": "fe9ad95628fa96639db6fc33f78d334c814c7161b4a754598f5a4a7852625777"
        }
    ],
    "versions_deprecated": [
        {
            "name": "5.4.3",
            "sha256": "6b5111be5efd4d7fd6935ca99b06fab19b43d97a58d26fc1fe6e783c4de9a926"
        },
        {
            "name": "5.4.0",
            "sha256": "04c1e955267a3e8440833a177bb976f57697aba0b90c325d07fc0c6bd4065aea"
        },
        {
            "name": "5.3.3",
            "sha256": "f2cb1e6bb69ea1a628c04f984741f781ae1d8498dc58e15795bb03015f924d13"
        },
        {
            "name": "5.3.0",
            "sha256": "36f1da60863a113bb9fe2957949c661f00a702e249bb0523cda1fb755c053808"
        }
    ]
}