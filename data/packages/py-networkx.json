{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The aim of the decorator module it to simplify the usage of decorators\nfor the average programmer, and to popularize decorators by showing\nvarious non-trivial examples.",
            "name": "py-decorator"
        },
        {
            "description": "lxml is the most feature-rich and easy-to-use library for processing XML\nand HTML in the Python language.",
            "name": "py-lxml"
        },
        {
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.",
            "name": "py-matplotlib"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage.",
            "name": "py-pandas"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Python interface to Graphviz's Dot language",
            "name": "py-pydot"
        },
        {
            "description": "Python interface to Graphviz",
            "name": "py-pygraphviz"
        },
        {
            "description": "Fundamental algorithms for scientific computing in Python.",
            "name": "py-scipy"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "SymPy is a Python library for symbolic mathematics.",
            "name": "py-sympy"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "CallFlow is an interactive visual analysis tool that provides a high-\nlevel overview of CCTs together with semantic refinement operations to\nprogressively explore the CCTs.",
            "name": "callflow"
        },
        {
            "description": "Falcon: a set of tools for fast aligning long reads for consensus and\nassembly. The Falcon tool kit is a set of simple code collection which I\nuse for studying efficient assembly algorithm for haploid and diploid\ngenomes. It has some back-end code implemented in C for speed and some\nsimple front-end written in Python for convenience.",
            "name": "falcon"
        },
        {
            "description": "An experiment-independent HEP event data processing framework",
            "name": "gaudi"
        },
        {
            "description": "BEE is a workflow orchestration system designed to build containerized\nHPC applications and orchestrate workflows across HPC and cloud systems.\nBEE has adopted the Common Workflow Language (CWL) for specifying\nworkflows. Complex scientific workflows specified by CWL are managed and\nvisualized through a graph database, giving the user the ability to\nmonitor the state of each task in the workflow. BEE runs jobs using the\nworkload scheduler (i.e. Slurm or Flux) on the HPC system that tasks are\nspecified to run on.",
            "name": "hpc-beeflow"
        },
        {
            "description": "Liftoff is a tool that accurately maps annotations in GFF or GTF between\nassemblies of the same, or closely-related species.",
            "name": "liftoff"
        },
        {
            "description": "Parallel Global Multiobjective Optimizer (and its Python alter ego\nPyGMO) is a C++ / Python platform to perform parallel computations of\noptimisation tasks (global and local) via the asynchronous generalized\nisland model.",
            "name": "pagmo"
        },
        {
            "description": "Possvm (Phylogenetic Ortholog Sorting with Species oVerlap and MCL) is a\npython tool to analyse pre-computed gene trees and identify pairs and\nclusters of orthologous genes. It takes advantage of the species overlap\nalgorithm implemented in the ETE toolkit to parse the phylogeny and\nidentify orthologous gene pairs, and MCL clustering for orthogroup\nidentification.",
            "name": "possvm"
        },
        {
            "description": "Anvi\u2019o is a comprehensive platform that brings together many aspects of\ntoday\u2019s cutting-edge computational strategies of data-enabled\nmicrobiology, including genomics, metagenomics, metatranscriptomics,\npangenomics, metapangenomics, phylogenomics, and microbial population\ngenetics in an integrated and easy-to-use fashion through extensive\ninteractive visualization capabilities.",
            "name": "py-anvio"
        },
        {
            "description": "Biotite is your Swiss army knife for bioinformatics. Whether you want to\nidentify homologous sequence regions in a protein family or you would\nlike to find disulfide bonds in a protein structure: Biotite has the\nright tool for you. This package bundles popular tasks in computational\nmolecular biology into a uniform Python library.",
            "name": "py-biotite"
        },
        {
            "description": "Color math and conversion library.",
            "name": "py-colormath"
        },
        {
            "description": "DaCe is a fast parallel programming framework that takes code in\nPython/NumPy and other programming languages, and maps it to high-\nperformance CPU, GPU, and FPGA programs, which can be optimized\nprogrammatically or interactively.",
            "name": "py-dace"
        },
        {
            "description": "Deep Graph Library (DGL). DGL is an easy-to-use, high performance and\nscalable Python package for deep learning on graphs. DGL is framework\nagnostic, meaning if a deep graph model is a component of an end-to-end\napplication, the rest of the logics can be implemented in any major\nframeworks, such as PyTorch, Apache MXNet or TensorFlow.",
            "name": "py-dgl"
        },
        {
            "description": "Git for data scientists - manage your code and data together.",
            "name": "py-dvc"
        },
        {
            "description": "Python bindings and ensemble workflow management for GROMACS. The\nGROMACS C++ API is affected by its package variants. You can specify a\nparticular GROMACS API by making the dependency variant explicit. E.g.\n``spack install gmxapi ^gromacs+mpi~double``",
            "name": "py-gmxapi"
        },
        {
            "description": "Hyperopt is a Python library for serial and parallel optimization over\nawkward search spaces, which may include real-valued, discrete, and\nconditional dimensions.",
            "name": "py-hyperopt"
        },
        {
            "description": "inStrain is python program for analysis of co-occurring genome\npopulations from metagenomes that allows highly accurate genome\ncomparisons, analysis of coverage, microdiversity, and linkage, and\nsensitive SNP detection with gene localization and synonymous non-\nsynonymous identification.",
            "name": "py-instrain"
        },
        {
            "description": "Metadata tracking tools help to manage an increasingly diverse set of\nlife science, environmental and biomedical experiments",
            "name": "py-isa-rwval"
        },
        {
            "description": "Kosh allows codes to store, query, share data via an easy-to-use Python\nAPI. Kosh lies on top of Sina and can use any database backend supported\nby Sina. In adition Kosh aims to make data access and sharing as simple\nas possible.",
            "name": "py-kosh"
        },
        {
            "description": "Classification Schemes for Choropleth Maps.",
            "name": "py-mapclassify"
        },
        {
            "description": "Implementation of the Markov clustering (MCL) algorithm in python",
            "name": "py-markov-clustering"
        },
        {
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)",
            "name": "py-mdanalysis"
        },
        {
            "description": "Mikado is a lightweight Python3 pipeline whose purpose is to facilitate\nthe identification of expressed loci from RNA-Seq data * and to select\nthe best models in each locus.",
            "name": "py-mikado"
        },
        {
            "description": "Neuroimaging in Python: Pipelines and Interfaces.",
            "name": "py-nipype"
        },
        {
            "description": "A tool to help with the maintenance of container build scripts on\nmultiple systems, backends (e.g podman or apptainer) and distros.",
            "name": "py-olcf-velocity"
        },
        {
            "description": "A Bacterial Pangenome Analysis Pipeline",
            "name": "py-panaroo"
        },
        {
            "description": "Simple data dependent workflows in Python",
            "name": "py-parsl"
        },
        {
            "description": "PennyLane is a Python quantum machine learning library by Xanadu Inc.",
            "name": "py-pennylane"
        },
        {
            "description": "Fast, flexible and easy to use probabilistic modelling in Python.",
            "name": "py-pomegranate"
        },
        {
            "description": "A Python library for W3C Provenance Data Model (PROV). A library for W3C\nProvenance Data Model supporting PROV-JSON, PROV-XML and PROV-O (RDF)",
            "name": "py-prov"
        },
        {
            "description": "Python Cortical mapping software for fMRI data.",
            "name": "py-pycortex"
        },
        {
            "description": "Python Materials Genomics is a robust materials analysis code that\ndefines core object representations for structures and molecules with\nsupport for many electronic structure codes. It is currently the core\nanalysis code powering the Materials Project.",
            "name": "py-pymatgen"
        },
        {
            "description": "Pyomo is a Python-based open-source software package that supports a\ndiverse set of optimization capabilities for formulating and analyzing\noptimization models.",
            "name": "py-pyomo"
        },
        {
            "description": "pypeFLOW is light weight and reusable make / flow data process library\nwritten in Python.",
            "name": "py-pypeflow"
        },
        {
            "description": "This module implements community detection. It uses the louvain method\ndescribed in Fast unfolding of communities in large networks, Vincent D\nBlondel, Jean-Loup Guillaume, Renaud Lambiotte, Renaud Lefebvre, Journal\nof Statistical Mechanics: Theory and Experiment 2008(10), P10008 (12pp)",
            "name": "py-python-louvain"
        },
        {
            "description": "Ahead of Time compiler for numeric kernels.",
            "name": "py-pythran"
        },
        {
            "description": "Blackbird is a quantum assembly language for continuous-variable quantum\ncomputation, that can be used to program Xanadu\u2019s quantum photonics\nhardware and Strawberry Fields simulator.",
            "name": "py-quantum-blackbird"
        },
        {
            "description": "Robocrystallographer is a tool to generate text descriptions of crystal\nstructures. Similar to how a real-life crystallographer would analyse a\nstructure, robocrystallographer looks at the symmetry, local\nenvironment, and extended connectivity when generating a description.\nThe package includes utilities for identifying molecule names, component\norientations, heterostructure information, and more.",
            "name": "py-robocrys"
        },
        {
            "description": "Representational Similarity Analysis (RSA) in Python.",
            "name": "py-rsatoolbox"
        },
        {
            "description": "Scanpy is a scalable toolkit for analyzing single-cell gene expression\ndata built jointly with anndata.",
            "name": "py-scanpy"
        },
        {
            "description": "Fuzzy logic toolkit for SciPy",
            "name": "py-scikit-fuzzy"
        },
        {
            "description": "Image processing algorithms for SciPy, including IO, morphology,\nfiltering, warping, color manipulation, object detection, etc.",
            "name": "py-scikit-image"
        },
        {
            "description": "Software driving the automated exploration of chemical reaction networks",
            "name": "py-scine-chemoton"
        },
        {
            "description": "Open source library for continuous-variable quantum computation",
            "name": "py-strawberryfields"
        },
        {
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration.",
            "name": "py-torch"
        },
        {
            "description": "Import, export, process, analyze and view triangular meshes",
            "name": "py-trimesh"
        },
        {
            "description": "VCF-kit is a command-line based collection of utilities for performing\nanalysis on Variant Call Format (VCF) files.",
            "name": "py-vcf-kit"
        },
        {
            "description": "WAVES (LANL code C23004) is a computational science and engineering\nworkflow tool that integrates parametric studies with traditional\nsoftware build systems.",
            "name": "py-waves"
        },
        {
            "description": "WhatsHap is a software for phasing genomic variants using DNA sequencing\nreads, also called read-based phasing or haplotype assembly.",
            "name": "py-whatshap"
        },
        {
            "description": "YAHMM is a HMM package for Python, implemented in Cython for speed.",
            "name": "py-yahmm"
        },
        {
            "description": "Workflow management system to create reproducible and scalable data\nanalyses.",
            "name": "snakemake"
        }
    ],
    "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks.\n",
    "homepage": "https://networkx.github.io/",
    "latest_version": "3.4.2",
    "maintainers": [],
    "name": "py-networkx",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": true,
            "description": "Enable installation of default dependencies.",
            "name": "default"
        },
        {
            "default": false,
            "description": "Optional requirements that may require extra steps to install",
            "name": "extra"
        }
    ],
    "versions": [
        {
            "name": "3.4.2",
            "sha256": "307c3669428c5362aab27c8a1260aa8f47c4e91d3891f48be0141738d8d053e1"
        },
        {
            "name": "3.4.1",
            "sha256": "f9df45e85b78f5bd010993e897b4f1fdb242c11e015b101bd951e5c0e29982d8"
        },
        {
            "name": "3.4",
            "sha256": "1269b90f8f0d3a4095f016f49650f35ac169729f49b69d0572b2bb142748162b"
        },
        {
            "name": "3.3",
            "sha256": "0c127d8b2f4865f59ae9cb8aafcd60b5c70f3241ebd66f7defad7c4ab90126c9"
        },
        {
            "name": "3.2.1",
            "sha256": "9f1bb5cf3409bf324e0a722c20bdb4c20ee39bf1c30ce8ae499c8502b0b5e0c6"
        },
        {
            "name": "3.2",
            "sha256": "bda29edf392d9bfa5602034c767d28549214ec45f620081f0b74dc036a1fbbc1"
        },
        {
            "name": "3.1",
            "sha256": "de346335408f84de0eada6ff9fafafff9bcda11f0a0dfaa931133debb146ab61"
        },
        {
            "name": "3.0",
            "sha256": "9a9992345353618ae98339c2b63d8201c381c2944f38a2ab49cb45a4c667e412"
        },
        {
            "name": "2.8.6",
            "sha256": "bd2b7730300860cbd2dafe8e5af89ff5c9a65c3975b352799d87a6238b4301a6"
        },
        {
            "name": "2.7.1",
            "sha256": "d1194ba753e5eed07cdecd1d23c5cd7a3c772099bd8dbd2fea366788cf4de7ba"
        },
        {
            "name": "2.6.3",
            "sha256": "c0946ed31d71f1b732b5aaa6da5a0388a345019af232ce2f49c766e2d6795c51"
        },
        {
            "name": "2.5.1",
            "sha256": "109cd585cac41297f71103c3c42ac6ef7379f29788eb54cb751be5a663bb235a"
        },
        {
            "name": "2.5",
            "sha256": "7978955423fbc9639c10498878be59caf99b44dc304c2286162fd24b458c1602"
        },
        {
            "name": "2.4",
            "sha256": "f8f4ff0b6f96e4f9b16af6b84622597b5334bf9cae8cf9b2e42e7985d5c95c64"
        },
        {
            "name": "2.3",
            "sha256": "8311ddef63cf5c5c5e7c1d0212dd141d9a1fe3f474915281b73597ed5f1d4e3d"
        },
        {
            "name": "2.2",
            "sha256": "45e56f7ab6fe81652fb4bc9f44faddb0e9025f469f602df14e3b2551c2ea5c8b"
        },
        {
            "name": "2.1",
            "sha256": "64272ca418972b70a196cb15d9c85a5a6041f09a2f32e0d30c0255f25d458bb1"
        },
        {
            "name": "2.0",
            "sha256": "cd5ff8f75d92c79237f067e2f0876824645d37f017cfffa5b7c9678cae1454aa"
        },
        {
            "name": "1.11",
            "sha256": "0d0e70e10dfb47601cbb3425a00e03e2a2e97477be6f80638fef91d54dd1e4b8"
        },
        {
            "name": "1.10",
            "sha256": "ced4095ab83b7451cec1172183eff419ed32e21397ea4e1971d92a5808ed6fb8"
        }
    ],
    "versions_deprecated": []
}