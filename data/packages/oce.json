{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": null,
            "name": "^intel-oneapi-tbb@2021.1:",
            "spec": "+tbb"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Widely used C++ template library for task parallelism. Intel Threading\nBuilding Blocks (Intel TBB) lets you easily write parallel C++ programs\nthat take full advantage of multicore performance, that are portable and\ncomposable, and that have future-proof scalability.",
            "name": "intel-tbb"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "Widely used C++ template library for task parallelism. Intel Threading\nBuilding Blocks (Intel TBB) lets you easily write parallel C++ programs\nthat take full advantage of multicore performance, that are portable and\ncomposable, and that have future-proof scalability.",
            "name": "tbb"
        }
    ],
    "dependent_to": [
        {
            "description": "The Common Geometry Module, Argonne (CGMA) is a code library which\nprovides geometry functionality used for mesh generation and other\napplications.",
            "name": "cgm"
        },
        {
            "description": "C++ software library providing well-documented tools to build finite\nelement codes for a broad variety of PDEs.",
            "name": "dealii"
        },
        {
            "description": "Gmsh is a free 3D finite element grid generator with a built-in CAD\nengine and post-processor. Its design goal is to provide a fast, light\nand user-friendly meshing tool with parametric input and advanced\nvisualization capabilities. Gmsh is built around four modules: geometry,\nmesh, solver and post-processing. The specification of any input to\nthese modules is done either interactively using the graphical user\ninterface or in ASCII text files using Gmsh's own scripting language.",
            "name": "gmsh"
        },
        {
            "description": "KiCad is an open source software suite for Electronic Design Automation\n(EDA). The programs handle Schematic Capture, and PCB Layout with Gerber\noutput.",
            "name": "kicad"
        },
        {
            "description": "NETGEN is an automatic 3d tetrahedral mesh generator. It accepts input\nfrom constructive solid geometry (CSG) or boundary representation (BRep)\nfrom STL file format. The connection to a geometry kernel allows the\nhandling of IGES and STEP files. NETGEN contains modules for mesh\noptimization and hierarchical mesh refinement.",
            "name": "netgen"
        }
    ],
    "description": "Open CASCADE Community Edition UNMAINTAINED: see\nhttps://github.com/tpaviot/oce/issues/745#issuecomment-992285943\n",
    "homepage": "https://github.com/tpaviot/oce",
    "latest_version": "0.18.3",
    "maintainers": [],
    "name": "oce",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.oce",
            "relative_path": "null.patch",
            "reverse": false,
            "sha256": "288ab56060f09e1859496d899618831383347a869b24f5c894d858901d79a730",
            "version": "@0.16:0.17.1",
            "working_dir": "."
        },
        {
            "level": 0,
            "owner": "builtin.oce",
            "relative_path": "xlocale.patch",
            "reverse": false,
            "sha256": "198b53ff8658cadec2fad7e4a9bcaebd758550d28634bce93f200b65ea6c1a22",
            "version": "@0.18.1:0.18.2",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": false,
            "description": "Build with X11 enabled",
            "name": "X11"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Build with Intel Threading Building Blocks",
            "name": "tbb"
        }
    ],
    "versions": [],
    "versions_deprecated": [
        {
            "name": "0.18.3",
            "sha256": "c553d6a7bf52f790abc3b6bb7a1e91a65947e92a426bb1a88a11960c31f0966c"
        },
        {
            "name": "0.18.2",
            "sha256": "dc21ddea678a500ad87c773e9a502ed7a71768cf83d9af0bd4c43294186a7fef"
        },
        {
            "name": "0.18.1",
            "sha256": "1acf5da4bffa3592ca9f3535af9b927b79fcfeadcb81e9963e89aec192929a6c"
        },
        {
            "name": "0.18",
            "sha256": "226e45e77c16a4a6e127c71fefcd171410703960ae75c7ecc7eb68895446a993"
        },
        {
            "name": "0.17.2",
            "sha256": "8d9995360cd531cbd4a7aa4ca5ed969f08ec7c7a37755e2f3d4ef832c1b2f56e"
        },
        {
            "name": "0.17.1",
            "sha256": "b1ff0cb8cf31339bbb30ac7ed2415d376b9b75810279d2f497e115f08c090928"
        },
        {
            "name": "0.17",
            "sha256": "9ab0dc2a2d125b46cef458b56c6d171dfe2218d825860d616c5ab17994b8f74d"
        },
        {
            "name": "0.16.1",
            "sha256": "d31030c8da4a1b33f767d0d59895a995c8eabc8fc65cbe0558734f6021ea2f57"
        },
        {
            "name": "0.16",
            "sha256": "841fe4337a5a4e733e36a2efc4fe60a4e6e8974917028df05d47a02f59787515"
        }
    ]
}