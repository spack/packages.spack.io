{
    "aliases": [],
    "build_system": "RPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information.",
            "name": "r"
        },
        {
            "description": "Classes and Methods for Fast Memory-Efficient Boolean Selections.\nProvided are classes for boolean and skewed boolean vectors, fast\nboolean methods, fast unique and non-unique integer sorting, fast set\noperations on sorted and unsorted sets of integers, and foundations for\nff (range index, compression, chunked processing).",
            "name": "r-bit"
        }
    ],
    "dependent_to": [
        {
            "description": "Disciplined Convex Optimization. An object-oriented modeling language\nfor disciplined convex programming (DCP) as described in Fu, Narasimhan,\nand Boyd (2020, <doi:10.18637/jss.v094.i14>). It allows the user to\nformulate convex optimization problems in a natural way following\nmathematical convention and DCP rules. The system analyzes the problem,\nverifies its convexity, converts it into a canonical form, and hands it\noff to an appropriate solver to obtain the solution. Interfaces to\nsolvers on CRAN and elsewhere are provided, both commercial and open\nsource.",
            "name": "r-cvxr"
        },
        {
            "description": "Interface to the 'HDF5' Binary Data Format. 'HDF5' is a data model,\nlibrary and file format for storing and managing large amounts of data.\nThis package provides a nearly feature complete, object oriented wrapper\nfor the 'HDF5' API\n<https://support.hdfgroup.org/HDF5/doc/RM/RM_H5Front.html> using R6\nclasses. Additionally, functionality is added so that 'HDF5' objects\nbehave very similar to their corresponding R counterparts.",
            "name": "r-hdf5r"
        },
        {
            "description": "Nanosecond-Resolution Time Support for R. Full 64-bit resolution date\nand time functionality with; nanosecond granularity is provided, with\neasy transition to and from; the standard 'POSIXct' type. Three\nadditional classes offer interval,; period and duration functionality\nfor nanosecond-resolution timestamps.",
            "name": "r-nanotime"
        },
        {
            "description": "Database Interface and 'MariaDB' Driver. Implements a 'DBI'-compliant\ninterface to 'MariaDB' (<https://mariadb.org/>) and 'MySQL'\n(<https://www.mysql.com/>) databases.",
            "name": "r-rmariadb"
        },
        {
            "description": "'Rcpp' Interface to 'PostgreSQL'. Fully 'DBI'-compliant 'Rcpp'-backed\ninterface to 'PostgreSQL' <https://www.postgresql.org/>, an open-source\nrelational database.",
            "name": "r-rpostgres"
        },
        {
            "description": "'SQLite' Interface for R. This package embeds the SQLite database engine\nin R and provides an interface compliant with the DBI package. The\nsource for the SQLite engine (version 3.8.6) is included.",
            "name": "r-rsqlite"
        },
        {
            "description": "Read and Write Rectangular Text Data Quickly. The goal of 'vroom' is to\nread and write data (like 'csv', 'tsv' and 'fwf') quickly. When reading\nit uses a quick initial indexing step, then reads the values lazily , so\nonly the data you actually use needs to be read. The writer formats the\ndata in parallel and writes to disk asynchronously from formatting.",
            "name": "r-vroom"
        }
    ],
    "description": "A S3 Class for Vectors of 64bit Integers. Package 'bit64' provides\nserializable S3 atomic 64bit (signed) integers. These are useful for\nhandling database keys and exact counting in +-2^63. WARNING: do not use\nthem as replacement for 32bit integers, integer64 are not supported for\nsubscripting by R-core and they have different semantics when combined\nwith double, e.g. integer64 + double => integer64. Class integer64 can\nbe used in vectors, matrices, arrays and data.frames. Methods are\navailable for coercion from and to logicals, integers, doubles,\ncharacters and factors as well as many elementwise and summary\nfunctions. Many fast algorithmic operations such as 'match' and 'order'\nsupport inter- active data exploration and manipulation and optionally\nleverage caching.\n",
    "homepage": "https://cloud.r-project.org/package=bit64",
    "latest_version": "4.0.5",
    "maintainers": [],
    "name": "r-bit64",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "4.0.5",
            "sha256": "25df6826ea5e93241c4874cad4fa8dadc87a40f4ff74c9107aa12a9e033e1578"
        },
        {
            "name": "0.9-7",
            "sha256": "7b9aaa7f971198728c3629f9ba1a1b24d53db5c7e459498b0fdf86bbd3dff61f"
        }
    ],
    "versions_deprecated": []
}