{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The Adaptable Input Output System version 2, developed in the Exascale\nComputing Program",
            "name": "adios2"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "GMP is a free library for arbitrary precision arithmetic, operating on\nsigned integers, rational numbers, and floating-point numbers.",
            "name": "gmp"
        },
        {
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data.",
            "name": "hdf5"
        },
        {
            "description": "METIS is a set of serial programs for partitioning graphs, partitioning\nfinite element meshes, and producing fill reducing orderings for sparse\nmatrices. The algorithms implemented in METIS are based on the\nmultilevel recursive-bisection, multilevel k-way, and multi-constraint\npartitioning schemes.",
            "name": "metis"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution.",
            "name": "netcdf-c"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "The Visualization Toolkit (VTK) is an open-source, freely available\nsoftware system for 3D computer graphics, image processing and\nvisualization.",
            "name": "vtk"
        }
    ],
    "dependent_to": [
        {
            "description": "A generic abstraction for the compression of dense tensors",
            "name": "libpressio"
        }
    ],
    "description": "FTK is a library that simplifies, scales, and delivers feature tracking\nalgorithms for scientific data.\n",
    "homepage": "https://github.com/hguo/ftk",
    "latest_version": "0.0.7.1",
    "maintainers": [
        "hguo"
    ],
    "name": "ftk",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": false,
            "description": "Use ADIOS2",
            "name": "adios2"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Use CUDA",
            "name": "cuda"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "Use GMP",
            "name": "gmp"
        },
        {
            "default": false,
            "description": "Use HDF5",
            "name": "hdf5"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Use METIS",
            "name": "metis"
        },
        {
            "default": false,
            "description": "Use MPI",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Use NetCDF",
            "name": "netcdf"
        },
        {
            "default": false,
            "description": "Use VTK",
            "name": "vtk"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "0.0.7.1",
            "sha256": "6090fd436f971316062dbb4fcbf2c44603ed5c29341df8f2b80b85770a3bcda2"
        },
        {
            "name": "0.0.6",
            "sha256": "876839c62c78dddf48ee1f15681401db266e9537b76075e23fea31874e65935c"
        },
        {
            "name": "0.0.5.1",
            "sha256": "5f7d1931d902a3f48d5c15a3b3e6dc6038b880ac869930b44ca9e196148804e8"
        },
        {
            "name": "0.0.5",
            "sha256": "9d5c84a73b7761b9fc7dac62d4296df9f3052b722ec1b06518b2b8f51a8d3440"
        },
        {
            "name": "0.0.4",
            "sha256": "1674904da8d88dbd4c7d2b6a2629883f0444e70aefc99b48d285735d394897fa"
        },
        {
            "branch": "dev",
            "name": "dev"
        }
    ],
    "versions_deprecated": []
}