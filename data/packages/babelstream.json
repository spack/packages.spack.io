{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": "babelstream: STD requires newer version of GCC",
            "name": "+std",
            "spec": "%gcc@:10.1.0"
        },
        {
            "description": null,
            "name": "%clang@7:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,6.1:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,8.1:",
            "spec": "+cuda ^cuda@10.1.105:10.1.243~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,7.1:",
            "spec": "+cuda ^cuda@10.1.105~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.2,9:",
            "spec": "+cuda ^cuda@10.2.89~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "arch=darwin-None-None",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@:4",
            "spec": "+cuda ^cuda@11.0:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@:5",
            "spec": "+cuda ^cuda@11.4:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:6",
            "spec": "+cuda ^cuda@12.2:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "arch=None-None-ppc64le",
            "spec": "+cuda ^cuda@12.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:12.0",
            "spec": "+cuda ^cuda@5.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:13.0",
            "spec": "+cuda ^cuda@6.0:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:13.2",
            "spec": "+cuda ^cuda@6.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:14.9",
            "spec": "+cuda ^cuda@7:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:3.7,4:",
            "spec": "+cuda ^cuda@8.0:9.0~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,4.1:",
            "spec": "+cuda ^cuda@9.1~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,5.1:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%xl@:12,14:15,17:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@19.0:",
            "spec": "+cuda ^cuda@:10.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@7.1:",
            "spec": "+cuda ^cuda@:10.1.105~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.1.243~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%intel@19.1:",
            "spec": "+cuda ^cuda@:10.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@8.1:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.2~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.3~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%gcc@10:",
            "spec": "+cuda ^cuda@:11.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@19.2:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%xl@:12,17:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@12:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@10",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@11:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@2021:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@13:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@11.2:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@14:",
            "spec": "+cuda ^cuda@:11.7~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@12:",
            "spec": "+cuda ^cuda@:11.8~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@15:",
            "spec": "+cuda ^cuda@:12.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@16:",
            "spec": "+cuda ^cuda@:12.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@17:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@13:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@13.2.0",
            "spec": "+cuda ^cuda@:12.4~allow-unsupported-compilers arch=None-None-aarch64:"
        },
        {
            "description": null,
            "name": "%clang@18:",
            "spec": "+cuda ^cuda@:12.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@19:",
            "spec": "+cuda ^cuda@:12.6~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@14:",
            "spec": "+cuda ^cuda@:12.6~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@20:",
            "spec": "+cuda ^cuda@:12.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@15:",
            "spec": "+cuda ^cuda@:12.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:11.0",
            "spec": "+cuda ^cuda@:3.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:3.4",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%gcc@5:",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@16.0:",
            "spec": "+cuda ^cuda@:8.0.43~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@17.0:",
            "spec": "+cuda ^cuda@:8.0.60~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:8~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@4:",
            "spec": "+cuda ^cuda@:9.0.176~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@5:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@7:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%xl@:12,14:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@6:",
            "spec": "+cuda ^cuda@:9.2~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%intel@18.0:",
            "spec": "+cuda ^cuda@:9.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:9~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": "babelstream: CUDA requires architecture to be specfied by cuda_arch=",
            "name": "cuda_arch=none",
            "spec": "+cuda"
        },
        {
            "description": "babelstream: OpenCL implementation requires backend to be specfied by ocl_backend=",
            "name": "ocl_backend=none",
            "spec": "+ocl"
        },
        {
            "description": "babelstream: OpenMP requires offload flags to be specfied by omp_flags=",
            "name": "omp_flags=none",
            "spec": "+omp_offload"
        },
        {
            "description": null,
            "name": "amdgpu_target=none",
            "spec": "+rocm"
        },
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=makefile"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "HIP is a C++ Runtime API and Kernel Language that allows developers to\ncreate portable applications for AMD and NVIDIA GPUs from single source\ncode.",
            "name": "hip"
        },
        {
            "description": "This repository includes the user mode API nterfaces and libraries\nnecessary for host applications to launch computer kernels to available\nHSA ROCm kernel agents.AMD Heterogeneous System Architecture HSA - Linux\nHSA Runtime for Boltzmann (ROCm) platforms.",
            "name": "hsa-rocr-dev"
        },
        {
            "description": "Intel oneAPI Compilers. Includes: icx, icpx, ifx, and ifort. Releases\nbefore 2024.0 include icc/icpc LICENSE INFORMATION: By downloading and\nusing this software, you agree to the terms and conditions of the\nsoftware license agreements at https://intel.ly/393CijO.",
            "name": "intel-oneapi-compilers"
        },
        {
            "description": "The Intel oneAPI DPC++ Library (oneDPL) is a companion to the Intel\noneAPI DPC++/C++ Compiler and provides an alternative for C++ developers\nwho create heterogeneous applications and solutions. Its APIs are based\non familiar standards-C++ STL, Parallel STL (PSTL), Boost.Compute, and\nSYCL*-to maximize productivity and performance across CPUs, GPUs, and\nFPGAs. LICENSE INFORMATION: By downloading and using this software, you\nagree to the terms and conditions of the software license agreements at\nhttps://intel.ly/393CijO.",
            "name": "intel-oneapi-dpl"
        },
        {
            "description": "Widely used C++ template library for task parallelism. Intel Threading\nBuilding Blocks (Intel TBB) lets you easily write parallel C++ programs\nthat take full advantage of multicore performance, that are portable and\ncomposable, and that have future-proof scalability.",
            "name": "intel-tbb"
        },
        {
            "description": "Kokkos implements a programming model in C++ for writing performance\nportable applications targeting all major HPC platforms.",
            "name": "kokkos"
        },
        {
            "description": "Toolkit for the construction of highly optimized compilers, optimizers,\nand run-time environments.",
            "name": "llvm-amdgpu"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "OpenCL (Open Computing Language) C header files",
            "name": "opencl-c-headers"
        },
        {
            "description": "Portable Computing Language (pocl) is an open source implementation of\nthe OpenCL standard which can be easily adapted for new targets and\ndevices, both for homogeneous CPU and heterogeneous GPUs/accelerators.",
            "name": "pocl"
        },
        {
            "description": "RAJA Parallel Framework.",
            "name": "raja"
        },
        {
            "description": "Thrust is a parallel algorithm library. This library has been ported to\nHIP/ROCm platform, which uses the rocPRIM library. The HIP ported\nlibrary works on HIP/ROCm platforms",
            "name": "rocthrust"
        },
        {
            "description": "Thrust is a parallel algorithms library which resembles the C++ Standard\nTemplate Library (STL).",
            "name": "thrust"
        }
    ],
    "dependent_to": [],
    "description": "Measure memory transfer rates to/from global device memory on GPUs. This\nbenchmark is similar in spirit, and based on, the STREAM benchmark for\nCPUs.\n",
    "homepage": "https://github.com/UoB-HPC/BabelStream",
    "latest_version": "5.0",
    "maintainers": [
        "kaanolgu",
        "tom91136",
        "tomdeakin"
    ],
    "name": "babelstream",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": false,
            "description": "Enable OpenACC support",
            "name": "acc"
        },
        {
            "default": "none",
            "description": "AMD GPU architecture",
            "name": "amdgpu_target"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Build with CUDA",
            "name": "cuda"
        },
        {
            "default": "none",
            "description": "CUDA architecture",
            "name": "cuda_arch"
        },
        {
            "default": "none",
            "description": "Additional CUDA Compiler flags to be provided",
            "name": "cuda_extra_flags"
        },
        {
            "default": "default",
            "description": "Enable MEM Target for CUDA",
            "name": "cuda_memory_mode"
        },
        {
            "default": "none",
            "description": "Enable Directory support",
            "name": "dir"
        },
        {
            "default": "Sequential",
            "description": "Implementation",
            "name": "foption"
        },
        {
            "default": "none",
            "description": "Additional Fortran flags to be provided",
            "name": "fortran_flags"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "Enable HIP support",
            "name": "hip"
        },
        {
            "default": "default",
            "description": "Enable MEM Target for HIP",
            "name": "hip_mem_mode"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Enable KOKKOS support",
            "name": "kokkos"
        },
        {
            "default": "none",
            "description": "Enable Backend Target for kokkos",
            "name": "kokkos_backend"
        },
        {
            "default": "cxx",
            "description": "Languages Babelstream Spack Package Support",
            "name": "languages"
        },
        {
            "default": false,
            "description": "Enable OpenCL support",
            "name": "ocl"
        },
        {
            "default": "none",
            "description": "Enable Backend Target for OpenCL",
            "name": "ocl_backend"
        },
        {
            "default": false,
            "description": "Enable OpenMP support",
            "name": "omp"
        },
        {
            "default": "none",
            "description": "If OFFLOAD is enabled, this *overrides* the default offload flags",
            "name": "omp_flags"
        },
        {
            "default": false,
            "description": "Enable OpenMP Target",
            "name": "omp_offload"
        },
        {
            "default": false,
            "description": "Enable RAJA support",
            "name": "raja"
        },
        {
            "default": "cpu",
            "description": "Enable RAJA Target [CPU or NVIDIA] / Offload with custom settings for OpenMP",
            "name": "raja_offload"
        },
        {
            "default": false,
            "description": "Enable ROCm support",
            "name": "rocm"
        },
        {
            "default": false,
            "description": "Enable STD support",
            "name": "std"
        },
        {
            "default": "none",
            "description": "Enable offloading support (via the non-standard `-stdpar`) for the new NVHPC SDK",
            "name": "std_offload"
        },
        {
            "default": "none",
            "description": "Implements policies using OpenMP,TBB or dpc++",
            "name": "std_onedpl_backend"
        },
        {
            "default": "data",
            "description": "STD -> choose between data, indices and ranges models",
            "name": "std_submodel"
        },
        {
            "default": false,
            "description": "Link oneDPL which implements C++17 executor policies (via execution_policy_tag) for different backends",
            "name": "std_use_onedpl"
        },
        {
            "default": false,
            "description": "No-op if ONE_TBB_DIR is set. Link against an in-tree oneTBB via FetchContent_Declare, see top level CMakeLists.txt for details",
            "name": "std_use_tbb"
        },
        {
            "default": false,
            "description": "Enable SYCL support",
            "name": "sycl"
        },
        {
            "default": false,
            "description": "Enable SYCL support",
            "name": "sycl2020"
        },
        {
            "default": "intel",
            "description": "Offloading to NVIDIA GPU or not",
            "name": "sycl2020_offload"
        },
        {
            "default": "usm",
            "description": "SYCL2020 -> choose between usm and acc methods",
            "name": "sycl2020_submodel"
        },
        {
            "default": false,
            "description": "Enable TBB support",
            "name": "tbb"
        },
        {
            "default": "auto",
            "description": "Specifies how a loop template should partition its work among threads",
            "name": "tbb_partitioner"
        },
        {
            "default": false,
            "description": "Whether to use std::vector<T> for storage or use aligned_alloc. C++ vectors are *zero* initialised where as aligned_alloc is uninitialised before first use.",
            "name": "tbb_use_vector"
        },
        {
            "default": false,
            "description": "Enable THRUST support",
            "name": "thrust"
        },
        {
            "default": "cuda",
            "description": "Which THRUST implementation to use",
            "name": "thrust_backend"
        },
        {
            "default": "cuda",
            "description": "Which THRUST implementation to use",
            "name": "thrust_submodel"
        }
    ],
    "versions": [
        {
            "branch": "main",
            "name": "main"
        },
        {
            "name": "5.0",
            "sha256": "1a418203fbfd95595bdc66047e2e39d8f1bba95a49725c9ecb907caf1af2521f"
        },
        {
            "name": "4.0",
            "sha256": "a9cd39277fb15d977d468435eb9b894f79f468233f0131509aa540ffda4f5953"
        },
        {
            "name": "3.4",
            "sha256": "e34ee9d5ccdead019e3ea478333bcb7886117d600e5da8579a626f6ee34209cf"
        },
        {
            "name": "3.3",
            "sha256": "4c89c805b277d52776feeb7a8eef7985a0d9295ce3e0bb2333bf715f724723cf"
        },
        {
            "name": "3.2",
            "sha256": "20309b27ddd09ea37406bcc6f46fd32e9372bf3d145757e55938d19d69cdc49d"
        },
        {
            "name": "3.1",
            "sha256": "be69e6085e8966e12aa2df897eea6254b172e5adfa03de0adbb89bc3065f4fbe"
        },
        {
            "name": "3.0",
            "sha256": "776219c72e0fdc36f134e6975b68c7ab25f38206f8f8af84a6f9630648c24800"
        },
        {
            "name": "1.0",
            "sha256": "3cfb9e45601f1f249878355c72baa6e6a61f6c811f8716d60b83c7fb544e1d5c"
        }
    ],
    "versions_deprecated": []
}