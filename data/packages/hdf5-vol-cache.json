{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data.",
            "name": "hdf5"
        },
        {
            "description": "This package enables asynchronous IO in HDF5. Usage: Set the\nHDF5_VOL_CONNECTOR environment variable to enable this adaptor, i.e.\n$export HDF5_VOL_CONNECTOR=\"async under_vol=0;under_info={}\" ref.\nhttps://hdf5-vol-async.readthedocs.io/en/latest/gettingstarted.html#set-\nenvironmental-variables",
            "name": "hdf5-vol-async"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [
        {
            "description": "Data & Vis SDK ** This package is a post-ECP port from the ECP Data &\nVis SDK **",
            "name": "dav-sdk"
        },
        {
            "description": "ECP Data & Vis SDK",
            "name": "ecp-data-vis-sdk"
        }
    ],
    "description": "Package for HDF5 cache VOL.\n",
    "homepage": "https://vol-cache.readthedocs.io",
    "latest_version": "v1.1",
    "maintainers": [
        "hyoklee",
        "lrknox"
    ],
    "name": "hdf5-vol-cache",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        }
    ],
    "versions": [
        {
            "commit": "d886a17a381990b5949d95f5299461c39d7ac2bc",
            "name": "v1.1",
            "tag": "v1.1"
        },
        {
            "commit": "a9b9704e74fa24af50b2a3bd0d63a40a69bde8fe",
            "name": "v1.0",
            "tag": "v1.0"
        },
        {
            "branch": "develop",
            "name": "default"
        }
    ],
    "versions_deprecated": []
}