{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The blessed package to manage your versions by scm tags.",
            "name": "py-setuptools-scm"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "A generalist algorithm for cell and nucleus segmentation that can be\noptimized for your own data",
            "name": "cellpose"
        },
        {
            "description": "khmer is a software library and toolkit for k-mer based analysis and\ntransformation of nucleotide sequence data",
            "name": "khmer"
        },
        {
            "description": "This library experimentally provides the missing asyncio support for the\ncontextvars backport library.",
            "name": "py-aiocontextvars"
        },
        {
            "description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for\nPython.",
            "name": "py-audioread"
        },
        {
            "description": "Manipulate arrays of complex data structures as easily as Numpy. Awkward\nArray is a pure Python+Numpy library for manipulating complex data\nstructures as you would Numpy arrays.",
            "name": "py-awkward0"
        },
        {
            "description": "Converts and organises raw MRI data-sets according to the Brain Imaging\nData Structure (BIDS).",
            "name": "py-bidscoin"
        },
        {
            "description": "Units of measure as required by the Climate and Forecast (CF) metadata\nconventions.",
            "name": "py-cf-units"
        },
        {
            "description": "Python interface to map GRIB files to the NetCDF Common Data Model\nfollowing the CF Convention using ecCodes.",
            "name": "py-cfgrib"
        },
        {
            "description": "Universal encoding detector for Python 3",
            "name": "py-chardet"
        },
        {
            "description": "Python utilities to interact with Darshan log records of HPC\napplications.",
            "name": "py-darshan"
        },
        {
            "description": "Super-fast, efficiently stored Trie for Python (2.x and 3.x). Uses\nlibdatrie.",
            "name": "py-datrie"
        },
        {
            "description": "DeepEcho is a Synthetic Data Generation Python library for mixed-type,\nmultivariate time series.",
            "name": "py-deepecho"
        },
        {
            "description": "Devito is a Python package to implement optimized stencil computation.\n(e.g., finite differences, image processing, machine learning) from\nhigh-level symbolic problem definitions. Devito builds on SymPy and\nemploys automated code generation and just-in-time compilation to\nexecute optimized computational kernels on several computer platforms,\nincluding CPUs, GPUs, and clusters thereof.",
            "name": "py-devito"
        },
        {
            "description": "Dictdiffer is a helper module that helps you to diff and patch\ndictionares.",
            "name": "py-dictdiffer"
        },
        {
            "description": "Parser tools for Mozilla's Glean telemetry.",
            "name": "py-glean-parser"
        },
        {
            "description": "An utility to monitor NVIDIA GPU status and usage.",
            "name": "py-gpustat"
        },
        {
            "description": "Grandalf is a Python package made for experimentations with graph\ndrawing algorithms.",
            "name": "py-grandalf"
        },
        {
            "description": "Library for getting your data into HEPData",
            "name": "py-hepdata-lib"
        },
        {
            "description": "Normalize intensities of images from various MRI modalities",
            "name": "py-intensity-normalization"
        },
        {
            "description": "A pure python module for reading and writing kaldi ark files",
            "name": "py-kaldiio"
        },
        {
            "description": "Open Source Differentiable Computer Vision Library for PyTorch.",
            "name": "py-kornia"
        },
        {
            "description": "The Python Toolbox for Neurophysiological Signal Processing. This\npackage is the continuation of NeuroKit 1. It's a user-friendly package\nproviding easy access to advanced biosignal processing routines.\nResearchers and clinicians without extensive knowledge of programming or\nbiomedical signal processing can analyze physiological data with only\ntwo lines of code.",
            "name": "py-neurokit2"
        },
        {
            "description": "A hierarchical configuration system, with support for merging\nconfigurations from multiple sources (YAML config files,\ndataclasses/objects and CLI arguments) providing a consistent API\nregardless of how the configuration was created.",
            "name": "py-omegaconf"
        },
        {
            "description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers\nAI developers to choose the right tools as their project evolves. ONNX\nprovides an open source format for AI models, both deep learning and\ntraditional ML. It defines an extensible computation graph model, as\nwell as definitions of built-in operators and standard data types.\nCurrently we focus on the capabilities needed for inferencing (scoring).",
            "name": "py-onnx"
        },
        {
            "description": "A Python Wrapper to access the Overpass API.",
            "name": "py-overpy"
        },
        {
            "description": "Call stack profiler for Python. Shows you why your code is slow!",
            "name": "py-pyinstrument"
        },
        {
            "description": "Ahead of Time compiler for numeric kernels.",
            "name": "py-pythran"
        },
        {
            "description": "Qsymm is a symmetry finder and symmetric Hamiltonian generator. It\nautomatically generates model Hamiltonians from symmetry constraints and\nfinds the full symmetry group of your Hamiltonian.",
            "name": "py-qsymm"
        },
        {
            "description": "Pure python rfc3986 validator.",
            "name": "py-rfc3986-validator"
        },
        {
            "description": "Variants of the synthetic minority oversampling technique (SMOTE) for\nimbalanced learning",
            "name": "py-smote-variants"
        },
        {
            "description": "The py-spdlog package provides a Python wrapper to the C++ spdlog\nlibrary.",
            "name": "py-spdlog"
        },
        {
            "description": "PyTorch Extension Library of Optimized Autograd Sparse Matrix\nOperations.",
            "name": "py-torch-sparse"
        },
        {
            "description": "ROOT I/O in pure Python and Numpy. uproot is a reader and a writer of\nthe ROOT file format using only Python and Numpy. Unlike the standard\nC++ ROOT implementation, uproot is only an I/O library, primarily\nintended to stream data into machine learning libraries in Python.\nUnlike PyROOT and root_numpy, uproot does not depend on C++ ROOT.\nInstead, it uses Numpy to cast blocks of data from the ROOT file as\nNumpy arrays.",
            "name": "py-uproot3"
        },
        {
            "description": "Wrappers for Python builtins with higher-level APIs.",
            "name": "py-ww"
        },
        {
            "description": "Local filesystem registry for containers (intended for HPC) using Lmod\nor Environment Modules. Works for users and admins.",
            "name": "singularity-hpc"
        }
    ],
    "description": "Invoke py.test as distutils command with dependency resolution.\n",
    "homepage": "https://github.com/pytest-dev/pytest-runner",
    "latest_version": "6.0.0",
    "maintainers": [],
    "name": "py-pytest-runner",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "6.0.0",
            "sha256": "b4d85362ed29b4c348678de797df438f0f0509497ddb8c647096c02a6d87b685"
        },
        {
            "name": "5.3.1",
            "sha256": "0fce5b8dc68760f353979d99fdd6b3ad46330b6b1837e2077a89ebcf204aac91"
        },
        {
            "name": "5.1",
            "sha256": "25a013c8d84f0ca60bb01bd11913a3bcab420f601f0f236de4423074af656e7a"
        },
        {
            "name": "2.11.1",
            "sha256": "983a31eab45e375240e250161a556163bc8d250edaba97960909338c273a89b3"
        }
    ],
    "versions_deprecated": []
}