{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": null,
            "name": "%clang@7:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,6.1:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,8.1:",
            "spec": "+cuda ^cuda@10.1.105:10.1.243~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,7.1:",
            "spec": "+cuda ^cuda@10.1.105~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.2,9:",
            "spec": "+cuda ^cuda@10.2.89~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "arch=darwin-None-None",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@:4",
            "spec": "+cuda ^cuda@11.0:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@:5",
            "spec": "+cuda ^cuda@11.4:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:6",
            "spec": "+cuda ^cuda@12.2:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "arch=None-None-ppc64le",
            "spec": "+cuda ^cuda@12.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:12.0",
            "spec": "+cuda ^cuda@5.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:13.0",
            "spec": "+cuda ^cuda@6.0:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:13.2",
            "spec": "+cuda ^cuda@6.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:14.9",
            "spec": "+cuda ^cuda@7:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:3.7,4:",
            "spec": "+cuda ^cuda@8.0:9.0~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,4.1:",
            "spec": "+cuda ^cuda@9.1~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,5.1:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%xl@:12,14:15,17:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@19.0:",
            "spec": "+cuda ^cuda@:10.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@7.1:",
            "spec": "+cuda ^cuda@:10.1.105~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.1.243~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%intel@19.1:",
            "spec": "+cuda ^cuda@:10.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@8.1:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.2~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.3~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%gcc@10:",
            "spec": "+cuda ^cuda@:11.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@19.2:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%xl@:12,17:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@12:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@10",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@11:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@2021:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@13:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@11.2:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@14:",
            "spec": "+cuda ^cuda@:11.7~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@12:",
            "spec": "+cuda ^cuda@:11.8~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@15:",
            "spec": "+cuda ^cuda@:12.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@16:",
            "spec": "+cuda ^cuda@:12.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@17:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@13:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@13.2.0",
            "spec": "+cuda ^cuda@:12.4~allow-unsupported-compilers arch=None-None-aarch64:"
        },
        {
            "description": null,
            "name": "%clang@18:",
            "spec": "+cuda ^cuda@:12.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@19:",
            "spec": "+cuda ^cuda@:12.6~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@14:",
            "spec": "+cuda ^cuda@:12.6~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@20:",
            "spec": "+cuda ^cuda@:12.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@15:",
            "spec": "+cuda ^cuda@:12.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:11.0",
            "spec": "+cuda ^cuda@:3.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:3.4",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%gcc@5:",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@16.0:",
            "spec": "+cuda ^cuda@:8.0.43~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@17.0:",
            "spec": "+cuda ^cuda@:8.0.60~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:8~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@4:",
            "spec": "+cuda ^cuda@:9.0.176~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@5:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@7:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%xl@:12,14:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@6:",
            "spec": "+cuda ^cuda@:9.2~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%intel@18.0:",
            "spec": "+cuda ^cuda@:9.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:9~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": "llvm-doe: A value for cuda_arch must be specified.",
            "name": "cuda_arch=none",
            "spec": "+cuda"
        },
        {
            "description": "llvm-doe: Flang requires MLIR",
            "name": "~mlir",
            "spec": "+flang"
        },
        {
            "description": null,
            "name": "%apple-clang@:11",
            "spec": "@13:+libcxx"
        },
        {
            "description": null,
            "name": "%clang@:10",
            "spec": "@13:+libcxx"
        },
        {
            "description": null,
            "name": "%gcc@:10",
            "spec": "@13:+libcxx"
        },
        {
            "description": null,
            "name": "%gcc@:5.0",
            "spec": "@8:"
        },
        {
            "description": null,
            "name": "^cmake@3.19.0",
            "spec": "@:11.0.0"
        },
        {
            "description": "llvm-doe: omp_as_runtime works since LLVM 12.",
            "name": "+omp_as_runtime",
            "spec": "@:11.1"
        },
        {
            "description": null,
            "name": "%clang@8:",
            "spec": "@:4"
        },
        {
            "description": null,
            "name": "%apple-clang@6:",
            "spec": "@:4+compiler-rt"
        },
        {
            "description": null,
            "name": "%clang@6:",
            "spec": "@:4+compiler-rt"
        },
        {
            "description": null,
            "name": "%gcc@7:",
            "spec": "@:4+compiler-rt"
        },
        {
            "description": null,
            "name": "%apple-clang@6:",
            "spec": "@:4+libcxx"
        },
        {
            "description": null,
            "name": "%clang@6:",
            "spec": "@:4+libcxx"
        },
        {
            "description": null,
            "name": "%gcc@7:",
            "spec": "@:4+libcxx"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "@:5"
        },
        {
            "description": null,
            "name": "+omp_tsan",
            "spec": "@:5"
        },
        {
            "description": null,
            "name": "+mlir",
            "spec": "@:9"
        },
        {
            "description": null,
            "name": "+code_signing",
            "spec": "arch=linux-None-None"
        },
        {
            "description": null,
            "name": "generator=make",
            "spec": ""
        },
        {
            "description": null,
            "name": "+compiler-rt",
            "spec": "~clang"
        },
        {
            "description": null,
            "name": "+flang",
            "spec": "~clang"
        },
        {
            "description": null,
            "name": "+internal_unwind",
            "spec": "~clang"
        },
        {
            "description": null,
            "name": "+libcxx",
            "spec": "~clang"
        },
        {
            "description": null,
            "name": "+lldb",
            "spec": "~clang"
        },
        {
            "description": "llvm-doe: omp_as_runtime requires clang being built.",
            "name": "+omp_as_runtime",
            "spec": "~clang"
        },
        {
            "description": "llvm-doe: code signing is only necessary for building the in-tree debug server on macOS. Turning this variant off enables a build of llvm with lldb that uses the system debug server",
            "name": "+code_signing",
            "spec": "~lldb arch=darwin-None-None"
        },
        {
            "description": null,
            "name": "+link_llvm_dylib",
            "spec": "~llvm_dylib"
        }
    ],
    "dependencies": [
        {
            "description": "GNU binutils, which contain the linker, assembler, objdump and others",
            "name": "binutils"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The Hardware Locality (hwloc) software project. The Portable Hardware\nLocality (hwloc) software package provides a portable abstraction\n(across OS, versions, architectures, ...) of the hierarchical topology\nof modern architectures, including NUMA memory nodes, sockets, shared\ncaches, cores and simultaneous multithreading. It also gathers various\nsystem attributes such as cache and memory information as well as the\nlocality of I/O devices such as network interfaces, InfiniBand HCAs or\nGPUs. It primarily aims at helping applications with gathering\ninformation about modern computing hardware so as to exploit it\naccordingly and efficiently.",
            "name": "hwloc"
        },
        {
            "description": "An autotools compatible port of the NetBSD editline library",
            "name": "libedit"
        },
        {
            "description": "libelf lets you read, modify or create ELF object files in an\narchitecture-independent way. The library takes care of size and endian\nissues, e.g. you can process a file for SPARC processors on an Intel-\nbased system. Note: libelf is no longer maintained and packages that\ndepend on libelf should migrate to elfutils.",
            "name": "libelf"
        },
        {
            "description": "The libffi library provides a portable, high level programming interface\nto various calling conventions. This allows a programmer to call any\nfunction specified by a call interface description at run time.",
            "name": "libffi"
        },
        {
            "description": "The ncurses (new curses) library is a free software emulation of curses\nin System V Release 4.0, and more. It uses terminfo format, supports\npads and color and multiple highlights and forms characters and\nfunction-key mapping, and has all the other SYSV-curses enhancements\nover BSD curses.",
            "name": "ncurses"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "Stringified perl data structures, suitable for both printing and eval",
            "name": "perl-data-dumper"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        },
        {
            "description": "Python 2 and 3 compatibility utilities.",
            "name": "py-six"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        },
        {
            "description": "SWIG is an interface compiler that connects programs written in C and\nC++ with scripting languages such as Perl, Python, Ruby, and Tcl. It\nworks by taking the declarations found in C/C++ header files and using\nthem to generate the wrapper code that scripting languages need to\naccess the underlying C/C++ code. In addition, SWIG provides a variety\nof customization features that let you tailor the wrapping process to\nsuit your application.",
            "name": "swig"
        },
        {
            "description": "Z3 is a theorem prover from Microsoft Research. It is licensed under the\nMIT license.",
            "name": "z3"
        }
    ],
    "dependent_to": [],
    "description": "This package provides a collection of the experimental LLVM projects\ndone by the US DOE research and development teams.\n",
    "homepage": "https://github.com/llvm-doe-org",
    "latest_version": "13.0.0",
    "maintainers": [
        "vlkale"
    ],
    "name": "llvm-doe",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.llvm-doe",
            "relative_path": "constexpr_longdouble_9.0.patch",
            "reverse": false,
            "sha256": "332fe65f78b2b4a242045ec2394eee8db631fbcbe27b0016d5e5c859e34f47af",
            "version": "@9:10.0.0+libcxx",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.llvm-doe",
            "relative_path": "lldb_external_ncurses-10.patch",
            "reverse": false,
            "sha256": "47284669559b98dd068b193b72a48add09112fcb90a9bfe5c609b79628a20d2b",
            "version": "@10.0.0:10+lldb",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.llvm-doe",
            "relative_path": "llvm_python_path.patch",
            "reverse": false,
            "sha256": "7b286b164174a2eeb72931c7d9d246baef170f476d1abcedcec48a9c0692366c",
            "version": "@11.0.0",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": false,
            "description": "Build all supported targets, default targets <current arch>,NVPTX,AMDGPU,CppBackend",
            "name": "all_targets"
        },
        {
            "default": false,
            "description": "Build BOLT/OpenMP with Argobots. Effective when @bolt",
            "name": "argobots"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": true,
            "description": "Build the LLVM C/C++/Objective-C compiler frontend",
            "name": "clang"
        },
        {
            "default": false,
            "description": "Enable code-signing on macOS",
            "name": "code_signing"
        },
        {
            "default": true,
            "description": "Build LLVM compiler runtime, including sanitizers",
            "name": "compiler-rt"
        },
        {
            "default": false,
            "description": "Build with CUDA",
            "name": "cuda"
        },
        {
            "default": "none",
            "description": "CUDA architecture",
            "name": "cuda_arch"
        },
        {
            "default": false,
            "description": "Build the LLVM Fortran compiler frontend",
            "name": "flang"
        },
        {
            "default": "ninja",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": true,
            "description": "Add support for LTO with the gold linker plugin",
            "name": "gold"
        },
        {
            "default": true,
            "description": "Build the libcxxabi libunwind",
            "name": "internal_unwind"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Build the LLVM C++ standard library",
            "name": "libcxx"
        },
        {
            "default": false,
            "description": "Link LLVM tools against the LLVM shared library",
            "name": "link_llvm_dylib"
        },
        {
            "default": true,
            "description": "Build the LLVM linker",
            "name": "lld"
        },
        {
            "default": false,
            "description": "Build the LLVM debugger",
            "name": "lldb"
        },
        {
            "default": false,
            "description": "Build LLVM shared library, containing all components in a single shared library",
            "name": "llvm_dylib"
        },
        {
            "default": false,
            "description": "Build with MLIR support",
            "name": "mlir"
        },
        {
            "default": true,
            "description": "Build OpenMP runtime via ENABLE_RUNTIME by just-built Clang",
            "name": "omp_as_runtime"
        },
        {
            "default": false,
            "description": "Include debugging code in OpenMP runtime libraries",
            "name": "omp_debug"
        },
        {
            "default": false,
            "description": "Build with OpenMP capable thread sanitizer",
            "name": "omp_tsan"
        },
        {
            "default": true,
            "description": "Build the LLVM polyhedral optimization plugin, only builds for 3.7.0+",
            "name": "polly"
        },
        {
            "default": false,
            "description": "Install python bindings",
            "name": "python"
        },
        {
            "default": false,
            "description": "Build with split dwarf information",
            "name": "split_dwarf"
        },
        {
            "default": "none",
            "description": "Add a symbol suffix",
            "name": "version_suffix"
        },
        {
            "default": false,
            "description": "Use Z3 for the clang static analyzer",
            "name": "z3"
        }
    ],
    "versions": [
        {
            "branch": "clacc/main",
            "name": "develop.clacc"
        },
        {
            "branch": "llvm.org/llvmorg-13.0.0",
            "name": "13.0.0"
        },
        {
            "branch": "llvm.org/main",
            "name": "upstream"
        },
        {
            "branch": "sollve/pragma-omp-tile",
            "name": "pragma-omp-tile"
        },
        {
            "branch": "sollve/pragma-clang-loop",
            "name": "pragma-clang-loop"
        },
        {
            "branch": "doe",
            "name": "doe"
        },
        {
            "branch": "bolt/main",
            "name": "bolt"
        }
    ],
    "versions_deprecated": []
}