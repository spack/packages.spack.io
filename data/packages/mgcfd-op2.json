{
    "aliases": [],
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=makefile"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "KaHIP - Karlsruhe High Quality Partitioning - is a family of graph\npartitioning programs. It includes KaFFPa (Karlsruhe Fast Flow\nPartitioner), which is a multilevel graph partitioning algorithm, in its\nvariants Strong, Eco and Fast, KaFFPaE (KaFFPaEvolutionary) which is a\nparallel evolutionary algorithm that uses KaFFPa to provide combine and\nmutation operations, as well as KaBaPE which extends the evolutionary\nalgorithm. Moreover, specialized techniques are included to partition\nroad networks (Buffoon), to output a vertex separator from a given\npartition or techniques geared towards efficient partitioning of social\nnetworks.",
            "name": "kahip"
        },
        {
            "description": "OP2 is a high-level embedded domain specific language for writing\nunstructured mesh algorithms with automatic parallelisation on multi-\ncore and many-core architectures.",
            "name": "op2-dsl"
        }
    ],
    "dependent_to": [],
    "description": "Package for the OP2 port of MGCFD: A 3D unstructured multigrid, finite-\nvolume computational fluid dynamics (CFD) mini-app for inviscid-flow.\n",
    "homepage": "https://github.com/warwick-hpsc/MG-CFD-app-OP2",
    "latest_version": "v1.0.0-rc1",
    "maintainers": [
        "bozbez",
        "gihanmudalige",
        "tomdeakin"
    ],
    "name": "mgcfd-op2",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "makefile",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable MPI support",
            "name": "mpi"
        }
    ],
    "versions": [
        {
            "name": "v1.0.0-rc1"
        }
    ],
    "versions_deprecated": []
}