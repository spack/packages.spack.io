{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "Flexible and powerful tensor operations for readable and reliable code.\nSupports numpy, pytorch, tensorflow, and others.",
            "name": "py-einops"
        },
        {
            "description": "Core utilities for Python packages.",
            "name": "py-packaging"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "psutil is a cross-platform library for retrieving information on running\nprocesses and system utilization (CPU, memory, disks, network) in\nPython.",
            "name": "py-psutil"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration.",
            "name": "py-torch"
        },
        {
            "description": "A language and compiler for custom Deep Learning operations.",
            "name": "py-triton"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Minimalistic large language model 3D-parallelism training.",
            "name": "py-nanotron"
        },
        {
            "description": "A library for accelerating Transformer models on NVIDIA GPUs, including\nfp8 precision on Hopper GPUs.",
            "name": "py-transformer-engine"
        }
    ],
    "description": " This package provides the official implementation of FlashAttention.\n",
    "homepage": "https://github.com/Dao-AILab/flash-attention.git",
    "latest_version": "2.6.3",
    "maintainers": [
        "aurianer",
        "thomas-bouvier"
    ],
    "name": "py-flash-attn",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "branch": "main",
            "name": "main"
        },
        {
            "name": "2.6.3",
            "sha256": "5bfae9500ad8e7d2937ebccb4906f3bc464d1bf66eedd0e4adabd520811c7b52"
        },
        {
            "name": "2.5.9.post1",
            "sha256": "a92db1683a5b141a0f4371d251ae9f73e9aef629b3a58a50d0ef430266c68782"
        },
        {
            "name": "2.5.8",
            "sha256": "2e5b2bcff6d5cff40d494af91ecd1eb3c5b4520a6ce7a0a8b1f9c1ed129fb402"
        },
        {
            "name": "2.5.7",
            "sha256": "7c079aef4e77c4e9a71a3cd88662362e0fe82f658db0b2dbff6f279de2a387a8"
        },
        {
            "name": "2.5.6",
            "sha256": "d25801aa060877cad997939bd7130faf620fdbeda947c3ffde5865906d430c36"
        },
        {
            "name": "2.5.5",
            "sha256": "751cee17711d006fe7341cdd78584af86a6239afcfe43b9ed11c84db93126267"
        },
        {
            "name": "2.5.4",
            "sha256": "d83bb427b517b07e9db655f6e5166eb2607dccf4d6ca3229e3a3528c206b0175"
        },
        {
            "name": "2.4.2",
            "sha256": "eb822a8c4219b610e9d734cbc8cd9ee4547f27433815a2b90dc1462766feefc1"
        }
    ],
    "versions_deprecated": []
}