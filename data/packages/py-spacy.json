{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "Cython BLIS: Fast BLAS-like operations from Python and Cython, without\nthe tears",
            "name": "py-blis"
        },
        {
            "description": "catalogue: Super lightweight function registries for your library.",
            "name": "py-catalogue"
        },
        {
            "description": "Manage calls to calloc/free through Cython.",
            "name": "py-cymem"
        },
        {
            "description": "The Cython compiler for writing C extensions for the Python language.",
            "name": "py-cython"
        },
        {
            "description": "Cython bindings for MurmurHash.",
            "name": "py-murmurhash"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "The smartest command line arguments parser in the world.",
            "name": "py-plac"
        },
        {
            "description": "preshed: Cython Hash Table for Pre-Hashed Keys.",
            "name": "py-preshed"
        },
        {
            "description": "Python HTTP for Humans.",
            "name": "py-requests"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "srsly: Modern high-performance serialization utilities for Python.",
            "name": "py-srsly"
        },
        {
            "description": "Thinc: Practical Machine Learning for NLP in Python.",
            "name": "py-thinc"
        },
        {
            "description": "A Fast, Extensible Progress Meter",
            "name": "py-tqdm"
        },
        {
            "description": "wasabi: A lightweight console printing and formatting toolkit.",
            "name": "py-wasabi"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "This toolkit contains tools to extract conversational features and\nanalyze social phenomena in conversations, using a single unified\ninterface inspired by (and compatible with) scikit-learn.",
            "name": "py-convokit"
        },
        {
            "description": "You can use fastai without any installation by using Google Colab. In\nfact, every page of this documentation is also available as an\ninteractive notebook - click \"Open in colab\" at the top of any page to\nopen it (be sure to change the Colab runtime to \"GPU\" to have it run\nfast!) See the fast.ai documentation on Using Colab for more\ninformation.",
            "name": "py-fastai"
        },
        {
            "description": "English multi-task CNN trained on OntoNotes. Assigns context-specific\ntoken vectors, POS tags, dependency parse and named entities.",
            "name": "py-spacy-models-en-core-web-sm"
        },
        {
            "description": "1.2m 300d vectors trained on Common Crawl with GloVe",
            "name": "py-spacy-models-en-vectors-web-lg"
        }
    ],
    "description": "spaCy is a library for advanced Natural Language Processing in Python\nand Cython.\n",
    "homepage": "https://spacy.io/",
    "latest_version": "2.3.7",
    "maintainers": [],
    "name": "py-spacy",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "2.3.7",
            "sha256": "c0f2315fea23497662e28212f89af3a03667f97c867c597b599c37ab84092e22"
        },
        {
            "name": "2.3.2",
            "sha256": "818de26e0e383f64ccbe3db185574920de05923d8deac8bbb12113b9e33cee1f"
        },
        {
            "name": "2.2.4",
            "sha256": "f0f3a67c5841e6e35d62c98f40ebb3d132587d3aba4f4dccac5056c4e90ff5b9"
        }
    ],
    "versions_deprecated": []
}