{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "Sphinx Documentation Generator.",
            "name": "py-sphinx"
        },
        {
            "description": "SWIG is an interface compiler that connects programs written in C and\nC++ with scripting languages such as Perl, Python, Ruby, and Tcl. It\nworks by taking the declarations found in C/C++ header files and using\nthem to generate the wrapper code that scripting languages need to\naccess the underlying C/C++ code. In addition, SWIG provides a variety\nof customization features that let you tailor the wrapping process to\nsuit your application.",
            "name": "swig"
        }
    ],
    "dependent_to": [],
    "description": "Fortran bindings to the C++ Standard Library.\n",
    "homepage": "https://flibcpp.readthedocs.io/en/latest",
    "latest_version": "1.0.2",
    "maintainers": [],
    "name": "flibcpp",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Build and install documentation",
            "name": "doc"
        },
        {
            "default": "03",
            "description": "Build with this Fortran standard",
            "name": "fstd"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Build shared libraries",
            "name": "shared"
        },
        {
            "default": false,
            "description": "Regenerate source files using SWIG",
            "name": "swig"
        }
    ],
    "versions": [
        {
            "name": "1.0.2",
            "sha256": "e2c11c1f58ca830eb7ac7f25d66fc3502c4a8d994192ee30c63a1c3b51aac241"
        },
        {
            "name": "1.0.1",
            "sha256": "8569c71eab0257097a6aa666a6d86bdcb6cd6e31244d32cc5b2478d0e936ca7a"
        },
        {
            "name": "0.5.2",
            "sha256": "b9b4eb6431d5b56a54c37f658df7455eafd3d204a5534903b127e0c8a1c9b827"
        },
        {
            "name": "0.5.1",
            "sha256": "76db24ce7893f19ab97ea7260c39490ae1bd1e08a4cc5111ad7e70525a916993"
        },
        {
            "name": "0.5.0",
            "sha256": "94204198304ba4187815431859e5958479fa651a6f06f460b099badbf50f16b2"
        },
        {
            "name": "0.4.1",
            "sha256": "5c9a11af391fcfc95dd11b95338cff19ed8104df66d42b00ae54f6cde4da5bdf"
        },
        {
            "name": "0.4.0",
            "sha256": "ccb0acf58a4480977fdb3c62a0bd267297c1dfa687a142ea8822474c38aa322b"
        },
        {
            "name": "0.3.1",
            "sha256": "871570124122c18018478275d5040b4b787d1966e50ee95b634b0b5e0cd27e91"
        }
    ],
    "versions_deprecated": []
}