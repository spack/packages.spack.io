{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GROMACS is a molecular dynamics package primarily designed for\nsimulations of proteins, lipids and nucleic acids. It was originally\ndeveloped in the Biophysical Chemistry department of University of\nGroningen, and is now maintained by contributors in universities and\nresearch centers across the world. GROMACS is one of the fastest and\nmost popular software packages available and can run on CPUs as well as\nGPUs. It is free, open source released under the GNU Lesser General\nPublic License. Before the version 4.6, GROMACS was released under the\nGNU General Public License.",
            "name": "gromacs"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Read metadata from Python packages.",
            "name": "py-importlib-metadata"
        },
        {
            "description": "This package provides Python bindings for the Message Passing Interface\n(MPI) standard. It is implemented on top of the MPI-1/MPI-2\nspecification and exposes an API which grounds on the standard MPI-2 C++\nbindings.",
            "name": "py-mpi4py"
        },
        {
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks.",
            "name": "py-networkx"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "Core utilities for Python packages.",
            "name": "py-packaging"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "pytest: simple powerful testing with Python.",
            "name": "py-pytest"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [],
    "description": "Python bindings and ensemble workflow management for GROMACS. The\nGROMACS C++ API is affected by its package variants. You can specify a\nparticular GROMACS API by making the dependency variant explicit. E.g.\n``spack install gmxapi ^gromacs+mpi~double``\n",
    "homepage": "https://manual.gromacs.org/current/gmxapi/index.html",
    "latest_version": "0.4.2",
    "maintainers": [
        "eirrgang",
        "peterkasson"
    ],
    "name": "py-gmxapi",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.4.2",
            "sha256": "c746c6498c73a75913d7fcb01c13cc001d4bcb82999e9bf91d63578565ed1a1f"
        },
        {
            "name": "0.4.1",
            "sha256": "cc7a2e509ab8a59c187d388dcfd21ea78b785c3b355149b1818085f34dbda62a"
        },
        {
            "name": "0.4.0",
            "sha256": "7fd58e6a4b1391043379e8ba55555ebeba255c5b394f5df9d676e6a5571d7eba"
        }
    ],
    "versions_deprecated": []
}