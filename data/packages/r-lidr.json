{
    "aliases": [],
    "build_system": "RPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information.",
            "name": "r"
        },
        {
            "description": "Boost C++ Header Files. Boost provides free peer-reviewed portable C++\nsource libraries. A large part of Boost is provided as C++ template code\nwhich is resolved entirely at compile-time without linking. This package\naims to provide the most useful subset of Boost libraries for template\nuse among CRAN package. By placing these libraries in this package, we\noffer a more efficient distribution system for CRAN as replication of\nthis code in the sources of other packages is avoided. As of release\n1.60.0-2, the following Boost libraries are included: 'algorithm' 'any'\n'bimap' 'bind' 'circular_buffer' 'concept' 'config' 'container'\n'date'_'time' 'detail' 'dynamic_bitset' 'exception' 'filesystem'\n'flyweight' 'foreach' 'functional' 'fusion' 'geometry' 'graph' 'heap'\n'icl' 'integer' 'interprocess' 'intrusive' 'io' 'iostreams' 'iterator'\n'math' 'move' 'mpl' 'multiprcecision' 'numeric' 'pending' 'phoenix'\n'preprocessor' 'random' 'range' 'smart_ptr' 'spirit' 'tuple'\n'type_trains' 'typeof' 'unordered' 'utility' 'uuid'.",
            "name": "r-bh"
        },
        {
            "description": "Choose Univariate Class Intervals. Selected commonly used methods for\nchoosing univariate class intervals for mapping or other graphics\npurposes.",
            "name": "r-classint"
        },
        {
            "description": "Unified Parallel and Distributed Processing in R for Everyone. The\npurpose of this package is to provide a lightweight and unified Future\nAPI for sequential and parallel processing of R expression via futures.\nThe simplest way to evaluate an expression in parallel is to use 'x %<-%\n{ expression }' with 'plan(multiprocess)'. This package implements\nsequential, multicore, multisession, and cluster futures. With these, R\nexpressions can be evaluated on the local machine, in parallel a set of\nlocal machines, or distributed on a mix of local and remote machines.\nExtensions to this package implement additional backends for processing\nfutures via compute cluster schedulers etc. Because of its unified API,\nthere is no need to modify any code in order switch from sequential on\nthe local machine to, say, distributed processing on a remote compute\ncluster. Another strength of this package is that global variables and\nfunctions are automatically identified and exported as needed, making it\nstraightforward to tweak existing code to make use of futures.",
            "name": "r-future"
        },
        {
            "description": "Mesh Generation and Surface Tessellation. Makes the 'Qhull' library\n<http://www.qhull.org> available in R, in a similar manner as in Octave\nand MATLAB. Qhull computes convex hulls, Delaunay triangulations,\nhalfspace intersections about a point, Voronoi diagrams, furthest-site\nDelaunay triangulations, and furthest-site Voronoi diagrams. It runs in\n2D, 3D, 4D, and higher dimensions. It implements the Quickhull algorithm\nfor computing the convex hull. Qhull does not support constrained\nDelaunay triangulations, or mesh generation of non-convex objects, but\nthe package does include some R functions that allow for this.",
            "name": "r-geometry"
        },
        {
            "description": "Interpreted String Literals. An implementation of interpreted string\nliterals, inspired by Python's Literal String Interpolation\n<https://www.python.org/dev/peps/pep-0498/> and Docstrings\n<https://www.python.org/dev/peps/pep-0257/> and Julia's Triple-Quoted\nString Literals <https://docs.julialang.org/en/stable/\nmanual/strings/#triple-quoted-string-literals>.",
            "name": "r-glue"
        },
        {
            "description": "Spatial and Spatio-Temporal Geostatistical Modelling, Predictionand\nSimulation. Variogram modelling; simple, ordinary and universal point or\nblock (co)kriging; spatio-temporal kriging; sequential Gaussian or\nindicator (co)simulation; variogram and variogram map plotting utility\nfunctions; supports sf and stars.",
            "name": "r-gstat"
        },
        {
            "description": "A General-Purpose Package for Dynamic Report Generation in R. Provides a\ngeneral-purpose tool for dynamic report generation in R using Literate\nProgramming techniques.",
            "name": "r-knitr"
        },
        {
            "description": "Lazy (Non-Standard) Evaluation. An alternative approach to non-standard\nevaluation using formulas. Provides a full implementation of LISP style\n'quasiquotation', making it easier to generate code with other code.",
            "name": "r-lazyeval"
        },
        {
            "description": "Interactive Viewing of Spatial Data in R. Quickly and conveniently\ncreate interactive visualisations of spatial data with or without\nbackground maps. Attributes of displayed features are fully queryable\nvia pop-up windows. Additional functionality includes methods to\nvisualise true- and false-color raster images and bounding boxes.",
            "name": "r-mapview"
        },
        {
            "description": "Terminal Progress Bars. Configurable Progress bars, they may include\npercentage, elapsed time, and/or the estimated completion time. They\nwork in terminals, in 'Emacs' 'ESS', 'RStudio', 'Windows' 'Rgui' and the\n'macOS' 'R.app'. The package also provides a 'C++' 'API', that works\nwith or without 'Rcpp'.",
            "name": "r-progress"
        },
        {
            "description": "Geographic Data Analysis and Modeling. Reading, writing, manipulating,\nanalyzing and modeling of spatial data. The package implements basic and\nhigh-level functions for raster data and for vector data operations such\nas intersections. See the manual and tutorials on\n<https://rspatial.org/> to get started.",
            "name": "r-raster"
        },
        {
            "description": "Seamless R and C++ Integration. The 'Rcpp' package provides R functions\nas well as C++ classes which; offer a seamless integration of R and C++.\nMany R data types and objects can be; mapped back and forth to C++\nequivalents which facilitates both writing of new; code as well as\neasier integration of third-party libraries. Documentation; about 'Rcpp'\nis provided by several vignettes included in this package, via the;\n'Rcpp Gallery' site at <https://gallery.rcpp.org>, the paper by\nEddelbuettel and; Francois (2011, <doi:10.18637/jss.v040.i08>), the book\nby Eddelbuettel (2013,; <doi:10.1007/978-1-4614-6868-4>) and the paper\nby Eddelbuettel and Balamuta (2018,;\n<doi:10.1080/00031305.2017.1375990>); see 'citation(\"Rcpp\")' for\ndetails.",
            "name": "r-rcpp"
        },
        {
            "description": "'Rcpp' Integration for the 'Armadillo' Templated Linear Algebra Library.\n'Armadillo' is a templated C++ linear algebra library (by Conrad;\nSanderson) that aims towards a good balance between speed and ease of;\nuse. Integer, floating point and complex numbers are supported, as; well\nas a subset of trigonometric and statistics functions. Various; matrix\ndecompositions are provided through optional integration with; LAPACK\nand ATLAS libraries. The 'RcppArmadillo' package includes the; header\nfiles from the templated 'Armadillo' library. Thus users do; not need to\ninstall 'Armadillo' itself in order to use; 'RcppArmadillo'. From\nrelease 7.800.0 on, 'Armadillo' is licensed; under Apache License 2;\nprevious releases were under licensed as MPL; 2.0 from version 3.800.0\nonwards and LGPL-3 prior to that",
            "name": "r-rcpparmadillo"
        },
        {
            "description": "3D Visualization Using OpenGL. Provides medium to high level functions\nfor 3D interactive graphics, including functions modelled on base\ngraphics (plot3d(), etc.) as well as functions for constructing\nrepresentations of geometric objects (cube3d(), etc.). Output may be on\nscreen using OpenGL, or to various standard 3D file formats including\nWebGL, PLY, OBJ, STL as well as 2D image formats, including PNG,\nPostscript, SVG, PGF.",
            "name": "r-rgl"
        },
        {
            "description": "JSON for R. Converts R object into JSON objects and vice-versa.",
            "name": "r-rjson"
        },
        {
            "description": "R package to read and write las and laz files used to store LiDAR data",
            "name": "r-rlas"
        },
        {
            "description": "Dynamic Documents for R. Convert R Markdown documents into a variety of\nformats.",
            "name": "r-rmarkdown"
        },
        {
            "description": "Simple Features for R. Support for simple features, a standardized way\nto encode spatial vector data. Binds to 'GDAL' for reading and writing\ndata, to 'GEOS' for geometrical operations, and to 'PROJ' for projection\nconversions and datum transformations. Optionally uses the 's2' package\nfor spherical geometry operations on geographic coordinates.",
            "name": "r-sf"
        },
        {
            "description": "Classes and Methods for Spatial Data. Classes and methods for spatial\ndata; the classes document where the spatial location information\nresides, for 2D or 3D data. Utility functions are provided, e.g. for\nplotting data as maps, spatial selection, as well as methods for\nretrieving coordinates, for subsetting, print, summary, etc.",
            "name": "r-sp"
        },
        {
            "description": "Spatiotemporal Arrays, Raster and Vector Data Cubes. Reading,\nmanipulating, writing and plotting spatiotemporal arrays (raster and\nvector data cubes) in 'R', using 'GDAL' bindings provided by 'sf', and\n'NetCDF' bindings by 'ncmeta' and 'RNetCDF'.",
            "name": "r-stars"
        },
        {
            "description": "Spatial Data Analysis. Methods for spatial data analysis with raster and\nvector data. Raster methods allow for low-level data manipulation as\nwell as high-level global, local, zonal, and focal computation. The\npredict and interpolate methods facilitate the use of regression type\n(interpolation, machine learning) models for spatial prediction,\nincluding with satellite remote sensing data. Processing of very large\nfiles is supported. See the manual and tutorials on\n<https://rspatial.org/terra/> to get started. 'terra' is very similar to\nthe 'raster' package; but 'terra' can do more, is easier to use, and it\nis faster.",
            "name": "r-terra"
        },
        {
            "description": "Unit Testing for R. Software testing is important, but, in part because\nit is frustrating and boring, many of us avoid it. 'testthat' is a\ntesting framework for R that is easy to learn and use, and integrates\nwith your existing 'workflow'.",
            "name": "r-testthat"
        }
    ],
    "dependent_to": [],
    "description": "Airborne LiDAR data manipulation and visualisation for forestry\napplication\n",
    "homepage": "https://github.com/r-lidar/lidR",
    "latest_version": "4.1.2",
    "maintainers": [
        "sidpbury"
    ],
    "name": "r-lidr",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "adding suggests helps masking issues",
            "name": "suggests"
        }
    ],
    "versions": [
        {
            "name": "4.1.2",
            "sha256": "e452c35c189fb8bcfedb53b2cb1184a6feee11c2f3ccf1db4b161a9ce700a9eb"
        }
    ],
    "versions_deprecated": []
}