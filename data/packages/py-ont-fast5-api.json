{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The h5py package provides both a high- and low-level interface to the\nHDF5 library from Python.",
            "name": "py-h5py"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "Core utilities for Python packages.",
            "name": "py-packaging"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Text progress bar library for Python",
            "name": "py-progressbar33"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "medaka is a tool to create consensus sequences and variant calls from\nnanopore sequencing data. This task is performed using neural networks\napplied a pileup of individual sequencing reads against a draft\nassembly. It provides state-of-the-art results outperforming sequence-\ngraph based methods and signal-based methods, whilst also being faster.",
            "name": "py-medaka"
        }
    ],
    "description": "This project provides classes and utility functions for working with\nread fast5 files. It provides an abstraction layer between the\nunderlying h5py library and the various concepts central to read fast5\nfiles, such as \"reads\", \"analyses\", \"analysis summaries\", and \"analysis\ndatasets\". Ideally all interaction with a read fast5 file should be\npossible via this API, without having to directly invoke the h5py\nlibrary.\n",
    "homepage": "https://github.com/nanoporetech/ont_fast5_api",
    "latest_version": "4.1.0",
    "maintainers": [],
    "name": "py-ont-fast5-api",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "4.1.0",
            "sha256": "afa58fb0a73ac33161fe0d13d32698b3325756c370f2f440a8a43b4b68c75f32"
        },
        {
            "name": "0.3.2",
            "sha256": "ae44b1bcd812e8acf8beff3db92456647c343cf19340f97cff4847de5cc905d8"
        }
    ],
    "versions_deprecated": []
}