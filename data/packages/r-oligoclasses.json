{
    "aliases": [],
    "build_system": "RPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information.",
            "name": "r"
        },
        {
            "description": "Tools for parsing Affymetrix data files. Routines for parsing Affymetrix\ndata files based upon file format information. Primary focus is on\naccessing the CEL and CDF file formats.",
            "name": "r-affyio"
        },
        {
            "description": "Biobase: Base functions for Bioconductor. Functions that are needed by\nmany other packages or which replace R functions.",
            "name": "r-biobase"
        },
        {
            "description": "S4 generic functions used in Bioconductor. The package defines S4\ngeneric functions used in Bioconductor.",
            "name": "r-biocgenerics"
        },
        {
            "description": "Install/Update Bioconductor, CRAN, and github Packages. This package is\nused to install and update Bioconductor, CRAN, and (some) github\npackages.",
            "name": "r-biocinstaller"
        },
        {
            "description": "Access the Bioconductor Project Package Repository. A convenient tool to\ninstall and update Bioconductor packages.",
            "name": "r-biocmanager"
        },
        {
            "description": "Efficient manipulation of biological strings. Memory efficient string\ncontainers, string matching algorithms, and other utilities, for fast\nmanipulation of large biological sequences or sets of sequences.",
            "name": "r-biostrings"
        },
        {
            "description": "R Database Interface. A database interface definition for communication\nbetween R and relational database management systems. All classes in\nthis package are virtual and need to be extended by the various R/DBMS\nimplementations.",
            "name": "r-dbi"
        },
        {
            "description": "Memory-Efficient Storage of Large Data on Disk and Fast Access\nFunctions. The ff package provides data structures that are stored on\ndisk but behave (almost) as if they were in RAM by transparently mapping\nonly a section (pagesize) in main memory - the effective virtual memory\nconsumption per ff object. ff supports R's standard atomic data types\n'double', 'logical', 'raw' and 'integer' and non-standard atomic types\nboolean (1 bit), quad (2 bit unsigned), nibble (4 bit unsigned), byte (1\nbyte signed with NAs), ubyte (1 byte unsigned), short (2 byte signed\nwith NAs), ushort (2 byte unsigned), single (4 byte float with NAs). For\nexample 'quad' allows efficient storage of genomic data as an\n'A','T','G','C' factor. The unsigned types support 'circular'\narithmetic. There is also support for close-to-atomic types 'factor',\n'ordered', 'POSIXct', 'Date' and custom close-to-atomic types. ff not\nonly has native C-support for vectors, matrices and arrays with flexible\ndimorder (major column-order, major row-order and generalizations for\narrays). There is also a ffdf class not unlike data.frames and\nimport/export filters for csv files. ff objects store raw data in binary\nflat files in native encoding, and complement this with metadata stored\nin R as physical and virtual attributes. ff objects have well-defined\nhybrid copying semantics, which gives rise to certain performance\nimprovements through virtualization. ff objects can be stored and\nreopened across R sessions. ff files can be shared by multiple ff R\nobjects (using different data en/de-coding schemes) in the same process\nor from multiple R processes to exploit parallelism. A wide choice of\nfinalizer options allows to work with 'permanent' files as well as\ncreating/removing 'temporary' ff files completely transparent to the\nuser. On certain OS/Filesystem combinations, creating the ff files works\nwithout notable delay thanks to using sparse file allocation. Several\naccess optimization techniques such as Hybrid Index Preprocessing and\nVirtualization are implemented to achieve good performance even with\nlarge datasets, for example virtual matrix transpose without touching a\nsingle byte on disk. Further, to reduce disk I/O, 'logicals' and non-\nstandard data types get stored native and compact on binary flat files\ni.e. logicals take up exactly 2 bits to represent TRUE, FALSE and NA.\nBeyond basic access functions, the ff package also provides\ncompatibility functions that facilitate writing code for ff and ram\nobjects and support for batch processing on ff objects (e.g. as.ram,\nas.ff, ffapply). ff interfaces closely with functionality from package\n'bit': chunked looping, fast bit operations and coercions between\ndifferent objects that can store subscript information ('bit',\n'bitwhich', ff 'boolean', ri range index, hi hybrid index). This allows\nto work interactively with selections of large datasets and quickly\nmodify selection criteria. Further high-performance enhancements can be\nmade available upon request.x",
            "name": "r-ff"
        },
        {
            "description": "Provides Foreach Looping Construct. Support for the foreach looping\nconstruct. Foreach is an idiom that allows for iterating over elements\nin a collection, without the use of an explicit loop counter. This\npackage in particular is intended to be used for its return value,\nrather than for its side effects. In that sense, it is similar to the\nstandard lapply function, but doesn't require the evaluation of a\nfunction. Using foreach without side effects also facilitates executing\nthe loop in parallel.",
            "name": "r-foreach"
        },
        {
            "description": "Representation and manipulation of genomic intervals. The ability to\nefficiently represent and manipulate genomic annotations and alignments\nis playing a central role when it comes to analyzing high-throughput\nsequencing data (a.k.a. NGS data). The GenomicRanges package defines\ngeneral purpose containers for storing and manipulating genomic\nintervals and variables defined along a genome. More specialized\ncontainers for representing and manipulating short alignments against a\nreference genome, or a matrix-like summarization of an experiment, are\ndefined in the GenomicAlignments and SummarizedExperiment packages,\nrespectively. Both packages build on top of the GenomicRanges\ninfrastructure.",
            "name": "r-genomicranges"
        },
        {
            "description": "Foundation of integer range manipulation in Bioconductor. Provides\nefficient low-level and highly reusable S4 classes for storing,\nmanipulating and aggregating over annotated ranges of integers.\nImplements an algebra of range operations, including efficient\nalgorithms for finding overlaps and nearest neighbors. Defines efficient\nlist-like classes for storing, transforming and aggregating large\ngrouped data, i.e., collections of atomic vectors and DataFrames.",
            "name": "r-iranges"
        },
        {
            "description": "'SQLite' Interface for R. This package embeds the SQLite database engine\nin R and provides an interface compliant with the DBI package. The\nsource for the SQLite engine (version 3.8.6) is included.",
            "name": "r-rsqlite"
        },
        {
            "description": "Foundation of vector-like and list-like containers in Bioconductor. The\nS4Vectors package defines the Vector and List virtual classes and a set\nof generic functions that extend the semantic of ordinary vectors and\nlists in R. Package developers can easily implement vector-like or list-\nlike objects as concrete subclasses of Vector or List. In addition, a\nfew low-level concrete subclasses of general interest (e.g. DataFrame,\nRle, and Hits) are implemented in the S4Vectors package itself (many\nmore are implemented in the IRanges package and in other Bioconductor\ninfrastructure packages).",
            "name": "r-s4vectors"
        },
        {
            "description": "SummarizedExperiment container. The SummarizedExperiment container\ncontains one or more assays, each represented by a matrix-like object of\nnumeric or other mode. The rows typically represent genomic ranges of\ninterest and the columns represent samples.",
            "name": "r-summarizedexperiment"
        }
    ],
    "dependent_to": [
        {
            "description": "Functions useful for those doing repetitive analyses with Affymetrix\nGeneChips. Various wrapper functions that have been written to\nstreamline the more common analyses that a core Biostatistician might\nsee.",
            "name": "r-affycoretools"
        }
    ],
    "description": "Classes for high-throughput arrays supported by oligo and crlmm. This\npackage contains class definitions, validity checks, and initialization\nmethods for classes used by the oligo and crlmm packages.\n",
    "homepage": "https://bioconductor.org/packages/oligoClasses",
    "latest_version": "1.62.0",
    "maintainers": [],
    "name": "r-oligoclasses",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "commit": "2de6126d2a98f78d6dc80ffeef8bc76782a6dbdf",
            "name": "1.62.0"
        },
        {
            "commit": "cf9d76c2551ad061d8b882ff1dc0a5cadc64a8a7",
            "name": "1.60.0"
        },
        {
            "commit": "5544e937913bb0df54c66d738d279c38efeb30cd",
            "name": "1.58.0"
        },
        {
            "commit": "6e6c7b4ba54095d1d3c44c081839f57af9261cbf",
            "name": "1.56.0"
        },
        {
            "commit": "7995efbd2d26b8fa950830d62db92bdaf5cbeeea",
            "name": "1.52.0"
        },
        {
            "commit": "325684f66fc92f778098f24bcfbef0ce3da9717c",
            "name": "1.46.0"
        },
        {
            "commit": "d3e1134cdbea5f95b83215dc66e5f7b6a1cd0638",
            "name": "1.44.0"
        },
        {
            "commit": "ef125700d487b470281a9c1e985390633c4dd2bd",
            "name": "1.42.0"
        },
        {
            "commit": "32f40617e62d05c457baaebc7e27585b852848ed",
            "name": "1.40.0"
        },
        {
            "commit": "fe2bb7f02c7ed3cbd338254c27ceba6ff829a962",
            "name": "1.38.0"
        }
    ],
    "versions_deprecated": []
}