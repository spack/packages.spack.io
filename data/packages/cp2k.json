{
    "aliases": [],
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "description": "cp2k: Please use AOCC 4.0+ that better support modern Fortran features CP2K requires",
            "name": "%aocc@:3.2",
            "spec": ""
        },
        {
            "description": null,
            "name": "%apple-clang",
            "spec": ""
        },
        {
            "description": null,
            "name": "%clang",
            "spec": ""
        },
        {
            "description": null,
            "name": "%nag",
            "spec": ""
        },
        {
            "description": null,
            "name": "%clang@7:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,6.1:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,8.1:",
            "spec": "+cuda ^cuda@10.1.105:10.1.243~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,7.1:",
            "spec": "+cuda ^cuda@10.1.105~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.2,9:",
            "spec": "+cuda ^cuda@10.2.89~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "arch=darwin-None-None",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@:4",
            "spec": "+cuda ^cuda@11.0:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@:5",
            "spec": "+cuda ^cuda@11.4:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:6",
            "spec": "+cuda ^cuda@12.2:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "arch=None-None-ppc64le",
            "spec": "+cuda ^cuda@12.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:12.0",
            "spec": "+cuda ^cuda@5.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:13.0",
            "spec": "+cuda ^cuda@6.0:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:13.2",
            "spec": "+cuda ^cuda@6.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:14.9",
            "spec": "+cuda ^cuda@7:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:3.7,4:",
            "spec": "+cuda ^cuda@8.0:9.0~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,4.1:",
            "spec": "+cuda ^cuda@9.1~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,5.1:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%xl@:12,14:15,17:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@19.0:",
            "spec": "+cuda ^cuda@:10.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@7.1:",
            "spec": "+cuda ^cuda@:10.1.105~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.1.243~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%intel@19.1:",
            "spec": "+cuda ^cuda@:10.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@8.1:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.2~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.3~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%gcc@10:",
            "spec": "+cuda ^cuda@:11.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@19.2:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%xl@:12,17:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@12:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@10",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@11:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@2021:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@13:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@11.2:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@14:",
            "spec": "+cuda ^cuda@:11.7~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@12:",
            "spec": "+cuda ^cuda@:11.8~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@15:",
            "spec": "+cuda ^cuda@:12.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@16:",
            "spec": "+cuda ^cuda@:12.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@17:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@13:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@13.2.0",
            "spec": "+cuda ^cuda@:12.4~allow-unsupported-compilers arch=None-None-aarch64:"
        },
        {
            "description": null,
            "name": "%clang@18:",
            "spec": "+cuda ^cuda@:12.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@19:",
            "spec": "+cuda ^cuda@:12.6~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@14:",
            "spec": "+cuda ^cuda@:12.6~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@20:",
            "spec": "+cuda ^cuda@:12.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@15:",
            "spec": "+cuda ^cuda@:12.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:11.0",
            "spec": "+cuda ^cuda@:3.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:3.4",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%gcc@5:",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@16.0:",
            "spec": "+cuda ^cuda@:8.0.43~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@17.0:",
            "spec": "+cuda ^cuda@:8.0.60~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:8~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@4:",
            "spec": "+cuda ^cuda@:9.0.176~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@5:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@7:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%xl@:12,14:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@6:",
            "spec": "+cuda ^cuda@:9.2~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%intel@18.0:",
            "spec": "+cuda ^cuda@:9.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:9~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=10"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=100"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=100a"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=100f"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=101"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=101a"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=101f"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=103"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=103a"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=103f"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=11"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=12"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=120"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=120a"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=120f"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=121"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=121a"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=121f"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=13"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=20"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=21"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=30"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=32"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=50"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=52"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=53"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=61"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=62"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=72"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=75"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=86"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=87"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=89"
        },
        {
            "description": "cp2k: cp2k only supports cuda_arch ('35', '37', '60', '70', '80', '90')",
            "name": "+cuda",
            "spec": "+cuda cuda_arch=90a"
        },
        {
            "description": "cp2k: DeepMD-kit is not yet available in Spack",
            "name": "+deepmd",
            "spec": ""
        },
        {
            "description": null,
            "name": "~mpi_f08",
            "spec": "+mpi ^mpich@4.1:"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target='gfx900:xnack-'"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target='gfx906:xnack-'"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target='gfx908:xnack-'"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1010"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1011"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1012"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1013"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1030"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1031"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1032"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1033"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1034"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1035"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1036"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1100"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1101"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1102"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx1103"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx701"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx801"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx802"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx803"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx900"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx902"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx904"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx909"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx90c"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx940"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx941"
        },
        {
            "description": "cp2k: cp2k only supports amdgpu_target ('gfx906', 'gfx908', 'gfx90a', 'gfx90a:xnack-', 'gfx90a:xnack+')",
            "name": "+rocm",
            "spec": "+rocm amdgpu_target=gfx942"
        },
        {
            "description": null,
            "name": "amdgpu_target=none",
            "spec": "+rocm"
        },
        {
            "description": "cp2k: Building without OpenMP is not supported in CP2K 8+",
            "name": "~openmp",
            "spec": "@8:"
        },
        {
            "description": "cp2k: PLUMED support is broken in cp2k@:2024.1 with CMake",
            "name": "+plumed",
            "spec": "@:2024.1 build_system=cmake"
        },
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=makefile"
        },
        {
            "description": null,
            "name": "+cuda",
            "spec": "cuda_arch=none"
        },
        {
            "description": null,
            "name": "generator=make",
            "spec": ""
        }
    ],
    "dependencies": [
        {
            "description": "FFTW (AMD Optimized version) is a comprehensive collection of fast C\nroutines for computing the Discrete Fourier Transform (DFT) and various\nspecial cases thereof. It is an open-source implementation of the Fast\nFourier transform algorithm. It can compute transforms of real and\ncomplex-values arrays of arbitrary size and dimension. AMD Optimized\nFFTW is the optimized FFTW implementation targeted for AMD CPUs. For\nsingle precision build, please use precision value as float. Example :\nspack install amdfftw precision=float LICENSING INFORMATION: By\ndownloading, installing and using this software, you agree to the terms\nand conditions of the AMD AOCL-FFTW license agreement. You may obtain a\ncopy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/fftw/eula/fftw-\nlibraries-4-2-eula.html\nhttps://www.amd.com/en/developer/aocl/fftw/eula/fftw-libraries-eula.html",
            "name": "amdfftw"
        },
        {
            "description": "Arm Performance Libraries provides optimized standard core math\nlibraries for high-performance computing applications on Arm processors.",
            "name": "armpl-gcc"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "Distributed Communication-Optimal Matrix-Matrix Multiplication Library",
            "name": "cosma"
        },
        {
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). This package is a wrapper\nfor Cray's version of FFTW. To install this package, list it as an\nexternal package in packages.yaml, and make sure to load the correct\ncray-fftw module. In some cases you need to load cray-mpich before cray-\nfftw.",
            "name": "cray-fftw"
        },
        {
            "description": "The Cray Scientific Libraries package, LibSci, is a collection of\nnumerical routines optimized for best performance on Cray systems.",
            "name": "cray-libsci"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "Distributed Block Compressed Sparse Row matrix library.",
            "name": "dbcsr"
        },
        {
            "description": "Generally Applicable Atomic-Charge Dependent London Dispersion\nCorrection",
            "name": "dftd4"
        },
        {
            "description": "DLA-Future library: Distributed Linear Algebra with Future",
            "name": "dla-future"
        },
        {
            "description": "Fortran interface to the DLA-Future library.",
            "name": "dla-future-fortran"
        },
        {
            "description": "Eigenvalue solvers for Petaflop-Applications (ELPA)",
            "name": "elpa"
        },
        {
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications.",
            "name": "fftw"
        },
        {
            "description": "NVPL FFT (NVIDIA Performance Libraries FFT) is part of NVIDIA\nPerformance Libraries and provides Fast Fourier Transform (FFT)\ncalculations on ARM CPUs.",
            "name": "fftw-api"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "GreenX: An open-source library that supports exascale implementations of\nGreen's-function-based methodologies.",
            "name": "greenx"
        },
        {
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data.",
            "name": "hdf5"
        },
        {
            "description": "HIP is a C++ Runtime API and Kernel Language that allows developers to\ncreate portable applications for AMD and NVIDIA GPUs from single source\ncode.",
            "name": "hip"
        },
        {
            "description": "hipBLAS is a BLAS marshalling library, with multiple supported backends",
            "name": "hipblas"
        },
        {
            "description": "HIPCC: HIP compiler driver",
            "name": "hipcc"
        },
        {
            "description": "hipFFT is an FFT marshalling library. Currently, hipFFT supports either\nrocFFT or cuFFT as backends.hipFFT exports an interface that does not\nrequire the client to change, regardless of the chosen backend. It sits\nbetween the application and the backend FFT library, marshalling inputs\ninto the backend and results back to the application.",
            "name": "hipfft"
        },
        {
            "description": "This repository includes the user mode API nterfaces and libraries\nnecessary for host applications to launch computer kernels to available\nHSA ROCm kernel agents.AMD Heterogeneous System Architecture HSA - Linux\nHSA Runtime for Boltzmann (ROCm) platforms.",
            "name": "hsa-rocr-dev"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "Libint is a high-performance library for computing Gaussian integrals in\nquantum mechanics.",
            "name": "libint"
        },
        {
            "description": "Non-equilibrium Green's function (NEGS) code.",
            "name": "libsmeagol"
        },
        {
            "description": "Portable C library of density functionals with van der Waals\ninteractions for density functional theory",
            "name": "libvdwxc"
        },
        {
            "description": "Support for Voronoi Integration and lossless BQB compression",
            "name": "libvori"
        },
        {
            "description": "Libxc is a library of exchange-correlation functionals for density-\nfunctional theory.",
            "name": "libxc"
        },
        {
            "description": "Library for specialized dense and sparse matrix operations, and deep\nlearning primitives.",
            "name": "libxsmm"
        },
        {
            "description": "Toolkit for the construction of highly optimized compilers, optimizers,\nand run-time environments.",
            "name": "llvm-amdgpu"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "MPICH is a high performance and widely portable implementation of the\nMessage Passing Interface (MPI) standard.",
            "name": "mpich"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "OpenBLAS: An optimized BLAS library",
            "name": "openblas"
        },
        {
            "description": "The PEXSI library is written in C++, and uses message passing interface\n(MPI) to parallelize the computation on distributed memory computing\nsystems and achieve scalability on more than 10,000 processors. The Pole\nEXpansion and Selected Inversion (PEXSI) method is a fast method for\nelectronic structure calculation based on Kohn-Sham density functional\ntheory. It efficiently evaluates certain selected elements of matrix\nfunctions, e.g., the Fermi-Dirac function of the KS Hamiltonian, which\nyields a density matrix. It can be used as an alternative to\ndiagonalization methods for obtaining the density, energy and forces in\nelectronic structure calculations.",
            "name": "pexsi"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        },
        {
            "description": "PLUMED is an open source library for free energy calculations in\nmolecular systems which works together with some of the most popular\nmolecular dynamics engines. Free energy calculations can be performed as\na function of many order parameters with a particular focus on\nbiological problems, using state of the art methods such as\nmetadynamics, umbrella sampling and Jarzynski-equation based steered MD.\nThe software, written in C++, can be easily interfaced with both fortran\nand C/C++ codes.",
            "name": "plumed"
        },
        {
            "description": "Python powered Fortran preprocessor.",
            "name": "py-fypp"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "NVPL ScaLAPACK (NVIDIA Performance Libraries ScaLAPACK).",
            "name": "scalapack"
        },
        {
            "description": "Domain specific library for electronic structure calculations",
            "name": "sirius"
        },
        {
            "description": "C library for finding and handling crystal symmetries.",
            "name": "spglib"
        },
        {
            "description": "Specialized Parallel Linear Algebra, providing distributed GEMM\nfunctionality for specific matrix distributions with optional GPU\nacceleration.",
            "name": "spla"
        },
        {
            "description": "TREXIO: TREX I/O library.",
            "name": "trexio"
        }
    ],
    "dependent_to": [
        {
            "description": "GROMACS is a molecular dynamics package primarily designed for\nsimulations of proteins, lipids and nucleic acids. It was originally\ndeveloped in the Biophysical Chemistry department of University of\nGroningen, and is now maintained by contributors in universities and\nresearch centers across the world. GROMACS is one of the fastest and\nmost popular software packages available and can run on CPUs as well as\nGPUs. It is free, open source released under the GNU Lesser General\nPublic License. Before the version 4.6, GROMACS was released under the\nGNU General Public License.",
            "name": "gromacs"
        },
        {
            "description": "A modification of GROMACS that implements the \"chain coordinate\", a\nreaction coordinate for pore formation in membranes and stalk formation\nbetween membranes.",
            "name": "gromacs-chain-coordinate"
        },
        {
            "description": "Modified Gromacs for small-angle scattering calculations\n(SAXS/WAXS/SANS)",
            "name": "gromacs-swaxs"
        }
    ],
    "description": "CP2K is a quantum chemistry and solid state physics software package\nthat can perform atomistic simulations of solid state, liquid,\nmolecular, periodic, material, crystal, and biological systems\n",
    "homepage": "https://www.cp2k.org",
    "latest_version": "2025.1",
    "maintainers": [
        "RMeli",
        "abussy",
        "dev-zero",
        "mtaillefumier"
    ],
    "name": "cp2k",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "reverse": false,
            "sha256": "3617abb877812c4b933f601438c70f95e21c6161bea177277b1d4125fd1c0bf9",
            "url": "https://github.com/cp2k/cp2k/commit/5eaf864ed2bd21fb1b05a9173bb77a815ad4deda.patch?full_index=1",
            "version": "@8.2",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "relative_path": "posix_c_source.patch",
            "reverse": false,
            "sha256": "d05ff084d3cdc87d868294ab49d13bfacaee9bc2285a1fede76a65c53d66c0aa",
            "version": "@7.1 %aocc@4.0:",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "relative_path": "posix_c_source.patch",
            "reverse": false,
            "sha256": "d05ff084d3cdc87d868294ab49d13bfacaee9bc2285a1fede76a65c53d66c0aa",
            "version": "@7.1 %gcc@13:",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "reverse": false,
            "sha256": "1bb5a8e80603684a743e7821d24d41b31b60ccbb7d4257df1d2da53a3630e5bf",
            "url": "https://github.com/cp2k/cp2k/commit/be86bd7f6cd6af7d68f8957dcdb67e7c3d586741.patch?full_index=1",
            "version": "@2022.1:2022.2",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "relative_path": "backport_avoid_null_2022.x.patch",
            "reverse": false,
            "sha256": "c24e24cd0f4b8feabb20cb03d9f1daf6bb8581f791f2ba431a8b14902f8b123b",
            "version": "@2022.1:2022.2 %aocc@:4.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "relative_path": "backport_avoid_null_9.1.patch",
            "reverse": false,
            "sha256": "ad835a71918f782fb1d2026ecc6468e7519d1f53b03988507f6f0575a241f5e0",
            "version": "@9.1 %aocc@:4.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "relative_path": "cmake-fixes-2023.2.patch",
            "reverse": false,
            "sha256": "1d3051ba50b1dc09a946557fc12cd86c31f8949a7de9b3e4eb7a9067c24bbbb0",
            "version": "@2023.2 build_system=cmake",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "relative_path": "cmake-relwithdebinfo-2024.1.patch",
            "reverse": false,
            "sha256": "10f79dfe3fec2a915f6c58e7e769412c8e75bf24fe04ed1b40c912aa1b6ec08f",
            "version": "@2024.1 build_system=cmake",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "relative_path": "d4-dispersion-bugfix-2024.3.patch",
            "reverse": false,
            "sha256": "cf8e9cfc078a048e64fb0001a8a241533e0cfd77d6a287a052d81d6d3e4a63c9",
            "version": "@2024.3",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "reverse": false,
            "sha256": "37f4f1a76634ff4a5617fe0c670e6acfe2afa2b2cfc5b2875e438a54baa4525e",
            "url": "https://github.com/cp2k/cp2k/commit/7a99649828ecf7d5dc53d952a1bf7be6970deabe.patch?full_index=1",
            "version": "@2024.2:2024.3",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cp2k",
            "relative_path": "sirius-api-7.7.0.patch",
            "reverse": false,
            "sha256": "a3acb222435897441c1a09ca7e74676a36c7fd2b430285efc5625c33b19c8231",
            "version": "@2024.2:2025.1 ^sirius@7.7.0",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "none",
            "description": "AMD GPU architecture",
            "name": "amdgpu_target"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Use COSMA for p?gemm",
            "name": "cosma"
        },
        {
            "default": false,
            "description": "Build with CUDA",
            "name": "cuda"
        },
        {
            "default": "none",
            "description": "CUDA architecture",
            "name": "cuda_arch"
        },
        {
            "default": false,
            "description": "CP2K (resp. DBCSR) has specific parameter sets for different GPU models. Enable this when building with cuda_arch=35 for a K20x instead of a K40",
            "name": "cuda_arch_35_k20x"
        },
        {
            "default": false,
            "description": "Use CUBLAS for general matrix operations in DBCSR",
            "name": "cuda_blas"
        },
        {
            "default": false,
            "description": "Use CUDA also for FFTs in the PW part of CP2K",
            "name": "cuda_fft"
        },
        {
            "default": true,
            "description": "Enable DBM GPU backend",
            "name": "dbm_gpu"
        },
        {
            "default": false,
            "description": "Enable DeepMD-kit support",
            "name": "deepmd"
        },
        {
            "default": false,
            "description": "Enable DFT-D4 support",
            "name": "dftd4"
        },
        {
            "default": false,
            "description": "Enable DLA-Future eigensolver and Cholesky decomposition",
            "name": "dlaf"
        },
        {
            "default": false,
            "description": "Enable optimised diagonalisation routines from ELPA",
            "name": "elpa"
        },
        {
            "default": false,
            "description": "Configure cp2k to run the regtests afterwards. It build cp2k normally but put the executables in exe/cmake-build-* instead of the conventional location. This option is only relevant when regtests need to be run.",
            "name": "enable_regtests"
        },
        {
            "default": "ninja",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "Enable green X support",
            "name": "greenx"
        },
        {
            "default": true,
            "description": "Enable grid GPU backend",
            "name": "grid_gpu"
        },
        {
            "default": false,
            "description": "Enable GRPP psuedo potentials",
            "name": "grpp"
        },
        {
            "default": false,
            "description": "Enable HDF5 support",
            "name": "hdf5"
        },
        {
            "default": false,
            "description": "Enable HIP backend on Nvidia GPU",
            "name": "hip_backend_cuda"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Use libint, required for HFX (and possibly others)",
            "name": "libint"
        },
        {
            "default": false,
            "description": "Enable support for Voronoi integration and BQB compression",
            "name": "libvori"
        },
        {
            "default": true,
            "description": "Support additional functionals via libxc",
            "name": "libxc"
        },
        {
            "default": "5",
            "description": "Maximum supported angular momentum (HFX and others)",
            "name": "lmax"
        },
        {
            "default": true,
            "description": "Enable MPI support",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Use MPI F08 module",
            "name": "mpi_f08"
        },
        {
            "default": true,
            "description": "Enable OpenMP support",
            "name": "openmp"
        },
        {
            "default": false,
            "description": "Enable the alternative PEXSI method for density matrix evaluation",
            "name": "pexsi"
        },
        {
            "default": false,
            "description": "Enable PLUMED support",
            "name": "plumed"
        },
        {
            "default": true,
            "description": "Enable FFT calculations on GPU",
            "name": "pw_gpu"
        },
        {
            "default": false,
            "description": "Enable libtorch support",
            "name": "pytorch"
        },
        {
            "default": false,
            "description": "Enable quip support",
            "name": "quip"
        },
        {
            "default": false,
            "description": "Enable ROCm support",
            "name": "rocm"
        },
        {
            "default": false,
            "description": "Enable planewave electronic structure calculations via SIRIUS",
            "name": "sirius"
        },
        {
            "default": false,
            "description": "Enable libsmeagol support",
            "name": "smeagol"
        },
        {
            "default": "libxsmm",
            "description": "Library for small matrix multiplications",
            "name": "smm"
        },
        {
            "default": false,
            "description": "Enable support for spglib",
            "name": "spglib"
        },
        {
            "default": false,
            "description": "Use SPLA off-loading functionality. Only relevant when CUDA or ROCM are enabled",
            "name": "spla"
        },
        {
            "default": false,
            "description": "Enable TrexIO support",
            "name": "trexio"
        },
        {
            "default": false,
            "description": "Enable VDW support in SIRIUS.",
            "name": "vdwxc"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master",
            "submodules": "True"
        },
        {
            "name": "2025.1",
            "sha256": "65c8ad5488897b0f995919b9fa77f2aba4b61677ba1e3c19bb093d5c08a8ce1d"
        },
        {
            "name": "2024.3",
            "sha256": "a6eeee773b6b1fb417def576e4049a89a08a0ed5feffcd7f0b33c7d7b48f19ba"
        },
        {
            "name": "2024.2",
            "sha256": "cc3e56c971dee9e89b705a1103765aba57bf41ad39a11c89d3de04c8b8cdf473"
        },
        {
            "name": "2024.1",
            "sha256": "a7abf149a278dfd5283dc592a2c4ae803b37d040df25d62a5e35af5c4557668f"
        },
        {
            "name": "2023.2",
            "sha256": "adbcc903c1a78cba98f49fe6905a62b49f12e3dfd7cedea00616d1a5f50550db"
        },
        {
            "name": "2023.1",
            "sha256": "dff343b4a80c3a79363b805429bdb3320d3e1db48e0ff7d20a3dfd1c946a51ce"
        },
        {
            "name": "2022.2",
            "sha256": "1a473dea512fe264bb45419f83de432d441f90404f829d89cbc3a03f723b8354"
        },
        {
            "name": "2022.1",
            "sha256": "2c34f1a7972973c62d471cd35856f444f11ab22f2ff930f6ead20f3454fd228b"
        },
        {
            "name": "9.1",
            "sha256": "fedb4c684a98ad857cd49b69a3ae51a73f85a9c36e9cb63e3b02320c74454ce6"
        },
        {
            "name": "8.2",
            "sha256": "2e24768720efed1a5a4a58e83e2aca502cd8b95544c21695eb0de71ed652f20a"
        },
        {
            "name": "8.1",
            "sha256": "7f37aead120730234a60b2989d0547ae5e5498d93b1e9b5eb548c041ee8e7772"
        },
        {
            "name": "7.1",
            "sha256": "ccd711a09a426145440e666310dd01cc5772ab103493c4ae6a3470898cd0addb"
        }
    ],
    "versions_deprecated": []
}