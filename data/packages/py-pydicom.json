{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Distribution-building parts of Flit.",
            "name": "py-flit-core"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Python tools for GATE, see https://github.com/OpenGATE/Gate",
            "name": "gatetools"
        },
        {
            "description": "Converts and organises raw MRI data-sets according to the Brain Imaging\nData Structure (BIDS).",
            "name": "py-bidscoin"
        },
        {
            "description": "Tools for DICOM to BIDS conversion.",
            "name": "py-bidskit"
        },
        {
            "description": "DataLad extension package for neuro/medical imaging",
            "name": "py-datalad-neuroimaging"
        },
        {
            "description": "An open-source toolkit for computational pathology and machine learning.",
            "name": "py-pathml"
        }
    ],
    "description": "Pure python package for DICOM medical file reading and writing pydicom\nis a pure Python package for working with DICOM files. It lets you read,\nmodify and write DICOM data in an easy \"pythonic\" way.\n",
    "homepage": "https://github.com/pydicom/pydicom",
    "latest_version": "2.4.3",
    "maintainers": [],
    "name": "py-pydicom",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Use NumPy for Pixel data",
            "name": "numpy"
        }
    ],
    "versions": [
        {
            "name": "2.4.3",
            "sha256": "51906e0b9fb6e184a0f56298cb43ed716b7cf7edc00f6b71d5c769bc1f982402"
        },
        {
            "name": "2.4.1",
            "sha256": "6cb210dbe5586841036e8eeb2d4feb4df22a48f39161ba7ee0bf3c89faaba946"
        },
        {
            "name": "2.3.0",
            "sha256": "dbfa081c9ad9ac8ff8a8efbd71784104db9eecf02fd775f7d7773f2183f89386"
        },
        {
            "name": "2.1.2",
            "sha256": "65f36820c5fec24b4e7ca45b7dae93e054ed269d55f92681863d39d30459e2fd"
        }
    ],
    "versions_deprecated": []
}