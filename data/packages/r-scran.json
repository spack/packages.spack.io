{
    "aliases": [],
    "build_system": "RPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information.",
            "name": "r"
        },
        {
            "description": "Compiling Bioconductor to Handle Each Matrix Type. Provides a consistent\nC++ class interface for reading from and writing data to a variety of\ncommonly used matrix types. Ordinary matrices and several sparse/dense\nMatrix classes are directly supported, third-party S4 classes may be\nsupported by external linkage, while all other matrices are handled by\nDelayedArray block processing.",
            "name": "r-beachmat"
        },
        {
            "description": "Boost C++ Header Files. Boost provides free peer-reviewed portable C++\nsource libraries. A large part of Boost is provided as C++ template code\nwhich is resolved entirely at compile-time without linking. This package\naims to provide the most useful subset of Boost libraries for template\nuse among CRAN package. By placing these libraries in this package, we\noffer a more efficient distribution system for CRAN as replication of\nthis code in the sources of other packages is avoided. As of release\n1.60.0-2, the following Boost libraries are included: 'algorithm' 'any'\n'bimap' 'bind' 'circular_buffer' 'concept' 'config' 'container'\n'date'_'time' 'detail' 'dynamic_bitset' 'exception' 'filesystem'\n'flyweight' 'foreach' 'functional' 'fusion' 'geometry' 'graph' 'heap'\n'icl' 'integer' 'interprocess' 'intrusive' 'io' 'iostreams' 'iterator'\n'math' 'move' 'mpl' 'multiprcecision' 'numeric' 'pending' 'phoenix'\n'preprocessor' 'random' 'range' 'smart_ptr' 'spirit' 'tuple'\n'type_trains' 'typeof' 'unordered' 'utility' 'uuid'.",
            "name": "r-bh"
        },
        {
            "description": "S4 generic functions used in Bioconductor. The package defines S4\ngeneric functions used in Bioconductor.",
            "name": "r-biocgenerics"
        },
        {
            "description": "Bioconductor facilities for parallel evaluation. This package provides\nmodified versions and novel implementation of functions for parallel\nevaluation, tailored to use with Bioconductor objects.",
            "name": "r-biocparallel"
        },
        {
            "description": "Singular Value Decomposition for Bioconductor Packages. Implements exact\nand approximate methods for singular value decomposition and principal\ncomponents analysis, in a framework that allows them to be easily\nswitched within Bioconductor packages or workflows. Where possible,\nparallelization is achieved using the BiocParallel framework.",
            "name": "r-biocsingular"
        },
        {
            "description": "Clustering Algorithms for Bioconductor. Wraps common clustering\nalgorithms in an easily extended S4 framework. Backends are implemented\nfor hierarchical, k-means and graph-based clustering. Several utilities\nare also provided to compare and evaluate clustering results.",
            "name": "r-bluster"
        },
        {
            "description": "A unified framework for working transparently with on-disk and in-memory\narray-like datasets. Wrapping an array-like object (typically an on-disk\nobject) in a DelayedArray object allows one to perform common array\noperations on it without loading the object in memory. In order to\nreduce memory usage and optimize performance, operations on the object\nare either delayed or executed using a block processing mechanism. Note\nthat this also works on in-memory array-like objects like DataFrame\nobjects (typically with Rle columns), Matrix objects, and ordinary\narrays and data frames.",
            "name": "r-delayedarray"
        },
        {
            "description": "Functions that Apply to Rows and Columns of 'DelayedMatrix' Objects. A\nport of the 'matrixStats' API for use with DelayedMatrix objects from\nthe 'DelayedArray' package. High-performing functions operating on rows\nand columns of DelayedMatrix objects, e.g. col / rowMedians(), col /\nrowRanks(), and col / rowSds(). Functions optimized per data type and\nfor subsetted calculations such that both memory usage and processing\ntime is minimized.",
            "name": "r-delayedmatrixstats"
        },
        {
            "description": "Fast Pseudo Random Number Generators. Several fast random number\ngenerators are provided as C++ header only libraries: The PCG family by\nO'Neill (2014 <https://www.cs.hmc.edu/tr/hmc-cs-2014-0905.pdf>) as well\nas Xoroshiro128+ and Xoshiro256+ by Blackman and Vigna (2018\n<arXiv:1805.01407>). In addition fast functions for generating random\nnumbers according to a uniform, normal and exponential distribution are\nincluded. The latter two use the Ziggurat algorithm originally proposed\nby Marsaglia and Tsang (2000, <doi:10.18637/jss.v005.i08>). These\nfunctions are exported to R and as a C++ interface and are enabled for\nuse with the default 64 bit generator from the PCG family, Xoroshiro128+\nand Xoshiro256+ as well as the 64 bit version of the 20 rounds Threefry\nengine (Salmon et al., 2011 <doi:10.1145/2063384.2063405>) as provided\nby the package 'sitmo'.",
            "name": "r-dqrng"
        },
        {
            "description": "Empirical Analysis of Digital Gene Expression Data in R. Differential\nexpression analysis of RNA-seq expression profiles with biological\nreplication. Implements a range of statistical methodology based on the\nnegative binomial distributions, including empirical Bayes estimation,\nexact tests, generalized linear models and quasi-likelihood tests. As\nwell as RNA-seq, it be applied to differential signal analysis of other\ntypes of genomic data that produce counts, including ChIP-seq,\nBisulfite-seq, SAGE and CAGE.",
            "name": "r-edger"
        },
        {
            "description": "Network Analysis and Visualization. Routines for simple graphs and\nnetwork analysis. It can handle large graphs very well and provides\nfunctions for generating random and regular graphs, graph visualization,\ncentrality methods and much more.",
            "name": "r-igraph"
        },
        {
            "description": "Linear Models for Microarray Data. Data analysis, linear models and\ndifferential expression for microarray data.",
            "name": "r-limma"
        },
        {
            "description": "Sparse and Dense Matrix Classes and Methods. A rich hierarchy of matrix\nclasses, including triangular, symmetric, and diagonal matrices, both\ndense and sparse and with pattern, logical and numeric entries. Numerous\nmethods for and operations on these matrices, using 'LAPACK' and\n'SuiteSparse' libraries.",
            "name": "r-matrix"
        },
        {
            "description": "Meta-Analyses on P-Values of Differential Analyses. Implements a variety\nof methods for combining p-values in differential analyses of genome-\nscale datasets. Functions can combine p-values across different tests in\nthe same analysis (e.g., genomic windows in ChIP-seq, exons in RNA-seq)\nor for corresponding tests across separate analyses (e.g., replicated\ncomparisons, effect of different treatment conditions). Support is\nprovided for handling log-transformed input p-values, missing values and\nweighting where appropriate.",
            "name": "r-metapod"
        },
        {
            "description": "Seamless R and C++ Integration. The 'Rcpp' package provides R functions\nas well as C++ classes which; offer a seamless integration of R and C++.\nMany R data types and objects can be; mapped back and forth to C++\nequivalents which facilitates both writing of new; code as well as\neasier integration of third-party libraries. Documentation; about 'Rcpp'\nis provided by several vignettes included in this package, via the;\n'Rcpp Gallery' site at <https://gallery.rcpp.org>, the paper by\nEddelbuettel and; Francois (2011, <doi:10.18637/jss.v040.i08>), the book\nby Eddelbuettel (2013,; <doi:10.1007/978-1-4614-6868-4>) and the paper\nby Eddelbuettel and Balamuta (2018,;\n<doi:10.1080/00031305.2017.1375990>); see 'citation(\"Rcpp\")' for\ndetails.",
            "name": "r-rcpp"
        },
        {
            "description": "Foundation of vector-like and list-like containers in Bioconductor. The\nS4Vectors package defines the Vector and List virtual classes and a set\nof generic functions that extend the semantic of ordinary vectors and\nlists in R. Package developers can easily implement vector-like or list-\nlike objects as concrete subclasses of Vector or List. In addition, a\nfew low-level concrete subclasses of general interest (e.g. DataFrame,\nRle, and Hits) are implemented in the S4Vectors package itself (many\nmore are implemented in the IRanges package and in other Bioconductor\ninfrastructure packages).",
            "name": "r-s4vectors"
        },
        {
            "description": "Single-Cell RNA-Seq Analysis Utilities. Provides basic utility functions\nfor performing single-cell analyses, focusing on simple normalization,\nquality control and data transformations. Also provides some helper\nfunctions to assist development of other packages.",
            "name": "r-scuttle"
        },
        {
            "description": "S4 Classes for Single Cell Data. Defines a S4 class for storing data\nfrom single-cell experiments. This includes specialized methods to store\nand retrieve spike-in information, dimensionality reduction coordinates\nand size factors for each cell, along with the usual metadata for genes\nand libraries.",
            "name": "r-singlecellexperiment"
        },
        {
            "description": "Statistical Modeling. A collection of algorithms and functions to aid\nstatistical modeling. Includes limiting dilution analysis (aka ELDA),\ngrowth curve comparisons, mixed linear models, heteroscedastic\nregression, inverse-Gaussian probability calculations, Gauss quadrature\nand a secure convergence algorithm for nonlinear models. Also includes\nadvanced generalized linear model functions including Tweedie and\nDigamma distributional families and a secure convergence algorithm.",
            "name": "r-statmod"
        },
        {
            "description": "SummarizedExperiment container. The SummarizedExperiment container\ncontains one or more assays, each represented by a matrix-like object of\nnumeric or other mode. The rows typically represent genomic ranges of\ninterest and the columns represent samples.",
            "name": "r-summarizedexperiment"
        }
    ],
    "dependent_to": [
        {
            "description": "The scDblFinder package gathers various methods for the detection and\nhandling of doublets/multiplets in single-cell sequencing data (i.e.\nmultiple cells captured within the same droplet or reaction volume). It\nincludes methods formerly found in the scran package, the new fast and\ncomprehensive scDblFinder method, and a reimplementation of the Amulet\ndetection method for single-cell ATAC-seq.",
            "name": "r-scdblfinder"
        }
    ],
    "description": "Methods for Single-Cell RNA-Seq Data Analysis. Implements miscellaneous\nfunctions for interpretation of single-cell RNA-seq data. Methods are\nprovided for assignment of cell cycle phase, detection of highly\nvariable and significantly correlated genes, identification of marker\ngenes, and other common tasks in routine single-cell analysis workflows.\n",
    "homepage": "https://bioconductor.org/packages/scran",
    "latest_version": "1.28.0",
    "maintainers": [],
    "name": "r-scran",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "commit": "2e542b929b231fb5bb8c40af0f6ccea97f79234d",
            "name": "1.28.0"
        },
        {
            "commit": "df66576d6958a088c38bd45e1cad9c16cbb52991",
            "name": "1.26.0"
        },
        {
            "commit": "1a83eb7c948b1dc49253080c23b26cefb3a0f3b9",
            "name": "1.24.1"
        },
        {
            "commit": "c3f9e169c4538ce827d4f14a4141571c2366cd31",
            "name": "1.24.0"
        }
    ],
    "versions_deprecated": []
}