{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": null,
            "name": "amdgpu_target=none",
            "spec": "+rocm"
        },
        {
            "description": "legion: the 'conduit' variant must be set to a value other than 'none'",
            "name": "conduit=none",
            "spec": "network=gasnet"
        },
        {
            "description": null,
            "name": "+cuda_hijack",
            "spec": "~cuda"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data.",
            "name": "hdf5"
        },
        {
            "description": "HIP is a C++ Runtime API and Kernel Language that allows developers to\ncreate portable applications for AMD and NVIDIA GPUs from single source\ncode.",
            "name": "hip"
        },
        {
            "description": "This repository includes the user mode API nterfaces and libraries\nnecessary for host applications to launch computer kernels to available\nHSA ROCm kernel agents.AMD Heterogeneous System Architecture HSA - Linux\nHSA Runtime for Boltzmann (ROCm) platforms.",
            "name": "hsa-rocr-dev"
        },
        {
            "description": "The Hardware Locality (hwloc) software project. The Portable Hardware\nLocality (hwloc) software package provides a portable abstraction\n(across OS, versions, architectures, ...) of the hierarchical topology\nof modern architectures, including NUMA memory nodes, sockets, shared\ncaches, cores and simultaneous multithreading. It also gathers various\nsystem attributes such as cache and memory information as well as the\nlocality of I/O devices such as network interfaces, InfiniBand HCAs or\nGPUs. It primarily aims at helping applications with gathering\ninformation about modern computing hardware so as to exploit it\naccordingly and efficiently.",
            "name": "hwloc"
        },
        {
            "description": "Kokkos implements a programming model in C++ for writing performance\nportable applications targeting all major HPC platforms.",
            "name": "kokkos"
        },
        {
            "description": "The Open Fabrics Interfaces (OFI) is a framework focused on exporting\nfabric communication services to applications.",
            "name": "libfabric"
        },
        {
            "description": "Toolkit for the construction of highly optimized compilers, optimizers,\nand run-time environments.",
            "name": "llvm-amdgpu"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "PAPI provides the tool designer and application engineer with a\nconsistent interface and methodology for use of the performance counter\nhardware found in most major microprocessors. PAPI enables software\nengineers to see, in near real time, the relation between software\nperformance and processor events. In addition Component PAPI provides\naccess to a collection of components that expose performance measurement\nopportunities across the hardware and software stack.",
            "name": "papi"
        },
        {
            "description": "Foreign Function Interface for Python calling C code",
            "name": "py-cffi"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "The Rust programming language toolchain.",
            "name": "rust"
        },
        {
            "description": "UCC is a collective communication operations API and library that is\nflexible, complete, and feature-rich for current and emerging\nprogramming models and runtimes.",
            "name": "ucc"
        },
        {
            "description": "a communication library implementing high-performance messaging for\nMPI/PGAS frameworks",
            "name": "ucx"
        },
        {
            "description": "zlib replacement with optimizations for next generation systems.",
            "name": "zlib-api"
        }
    ],
    "dependent_to": [
        {
            "description": "FleCSI is a compile-time configurable framework designed to support\nmulti-physics application development. As such, FleCSI attempts to\nprovide a very general set of infrastructure design patterns that can be\nspecialized and extended to suit the needs of a broad variety of solver\nand data requirements. Current support includes multi-dimensional mesh\ntopology, mesh geometry, and mesh adjacency information.",
            "name": "flecsi"
        }
    ],
    "description": "Legion is a data-centric parallel programming system for writing\nportable high performance programs targeted at distributed heterogeneous\narchitectures. Legion presents abstractions which allow programmers to\ndescribe properties of program data (e.g. independence, locality). By\nmaking the Legion programming system aware of the structure of program\ndata, it can automate many of the tedious tasks programmers currently\nface, including correctly extracting task- and data-level parallelism\nand moving data around complex memory hierarchies. A novel mapping\ninterface provides explicit programmer controlled placement of data in\nthe memory hierarchy and assignment of tasks to processors in a way that\nis orthogonal to correctness, thereby enabling easy porting and tuning\nof Legion applications to new architectures.\n",
    "homepage": "https://legion.stanford.edu/",
    "latest_version": "25.03.0",
    "maintainers": [
        "elliottslaughter",
        "pmccormick",
        "streichler"
    ],
    "name": "legion",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.legion",
            "relative_path": "hip-offload-arch.patch",
            "reverse": false,
            "sha256": "232c0933aa6cdfd67b13aaff2658a7a4970d9faa2e0676d20251811908284334",
            "version": "@23.03.0+rocm",
            "working_dir": "."
        }
    ],
    "resources": [
        {
            "destination": "stanfordgasnet",
            "name": "stanfordgasnet",
            "placement": null,
            "version": "network=gasnet"
        }
    ],
    "variants": [
        {
            "default": "none",
            "description": "AMD GPU architecture",
            "name": "amdgpu_target"
        },
        {
            "default": false,
            "description": "Build runtime language bindings (excl. Fortran).",
            "name": "bindings"
        },
        {
            "default": false,
            "description": "Enable bounds checking in Legion accessors.",
            "name": "bounds_checks"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "none",
            "description": "The GASNet conduit(s) to enable.",
            "name": "conduit"
        },
        {
            "default": false,
            "description": "Enable CUDA support.",
            "name": "cuda"
        },
        {
            "default": "70",
            "description": "GPU/CUDA architecture to build for.",
            "name": "cuda_arch"
        },
        {
            "default": false,
            "description": "Hijack application calls into the CUDA runtime (+cuda).",
            "name": "cuda_hijack"
        },
        {
            "default": false,
            "description": "Disable nvcc version check (--allow-unsupported-compiler).",
            "name": "cuda_unsupported_compiler"
        },
        {
            "default": "17",
            "description": "C++ standard",
            "name": "cxxstd"
        },
        {
            "default": false,
            "description": "Enable Fortran bindings.",
            "name": "fortran"
        },
        {
            "default": false,
            "description": "Build gasnet with debugging enabled.",
            "name": "gasnet_debug"
        },
        {
            "default": "none",
            "description": "Path to a pre-installed version of GASNet (prefix directory).",
            "name": "gasnet_root"
        },
        {
            "default": false,
            "description": "Enable garbage collector logging",
            "name": "gc"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "Enable support for HDF5.",
            "name": "hdf5"
        },
        {
            "default": false,
            "description": "Hijack application calls into the HIP runtime",
            "name": "hip_hijack"
        },
        {
            "default": "ROCM",
            "description": "API used by HIP",
            "name": "hip_target"
        },
        {
            "default": false,
            "description": "Use hwloc for topology awareness.",
            "name": "hwloc"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Enable support for interoperability with Kokkos.",
            "name": "kokkos"
        },
        {
            "default": true,
            "description": "Enable support for dynamic object/library loading.",
            "name": "libdl"
        },
        {
            "default": "3",
            "description": "Set max number of dimensions for logical regions.",
            "name": "max_dims"
        },
        {
            "default": "512",
            "description": "Maximum number of fields allowed in a logical region.",
            "name": "max_fields"
        },
        {
            "default": "1024",
            "description": "Maximum number of nodes supported by Legion.",
            "name": "max_num_nodes"
        },
        {
            "default": "none",
            "description": "The network communications/transport layer to use.",
            "name": "network"
        },
        {
            "default": false,
            "description": "Enable support for OpenMP within Legion tasks.",
            "name": "openmp"
        },
        {
            "default": "warning",
            "description": "Set the compile-time logging level.",
            "name": "output_level"
        },
        {
            "default": false,
            "description": "Enable PAPI performance measurements.",
            "name": "papi"
        },
        {
            "default": false,
            "description": "Enable runtime privildge checks in Legion accessors.",
            "name": "privilege_checks"
        },
        {
            "default": false,
            "description": "Install Rust Legion prof",
            "name": "prof"
        },
        {
            "default": false,
            "description": "Enable Python support.",
            "name": "python"
        },
        {
            "default": false,
            "description": "Use reduction operators for complex types.",
            "name": "redop_complex"
        },
        {
            "default": false,
            "description": "Use reduction operators for half precision types.",
            "name": "redop_half"
        },
        {
            "default": false,
            "description": "Enable ROCm support",
            "name": "rocm"
        },
        {
            "default": false,
            "description": "Build shared libraries.",
            "name": "shared"
        },
        {
            "default": false,
            "description": "Enable detailed logging for Legion Spy debugging.",
            "name": "spy"
        },
        {
            "default": false,
            "description": "Use system OpenMP implementation instead of Realm's",
            "name": "sysomp"
        },
        {
            "default": true,
            "description": "Enable zlib support.",
            "name": "zlib"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "branch": "stable",
            "name": "stable"
        },
        {
            "commit": "04716e3b3686d4af71e6a4398dfbe8cd869c057b",
            "name": "25.03.0",
            "tag": "legion-25.03.0"
        },
        {
            "commit": "2f087ebe433a19f9a3abd05382f951027933bad9",
            "name": "24.12.0",
            "tag": "legion-24.12.0"
        },
        {
            "commit": "4a03402467547b99530042cfe234ceec2cd31b2e",
            "name": "24.09.0",
            "tag": "legion-24.09.0"
        },
        {
            "commit": "3f27977943626ef23038ef0049b7ad1b389caad1",
            "name": "24.06.0",
            "tag": "legion-24.06.0"
        },
        {
            "commit": "c61071541218747e35767317f6f89b83f374f264",
            "name": "24.03.0",
            "tag": "legion-24.03.0"
        },
        {
            "commit": "8fea67ee694a5d9fb27232a7976af189d6c98456",
            "name": "23.12.0",
            "tag": "legion-23.12.0"
        },
        {
            "commit": "7304dfcf9b69005dd3e65e9ef7d5bd49122f9b49",
            "name": "23.09.0",
            "tag": "legion-23.09.0"
        },
        {
            "commit": "7b5ff2fb9974511c28aec8d97b942f26105b5f6d",
            "name": "23.06.0",
            "tag": "legion-23.06.0"
        }
    ],
    "versions_deprecated": [
        {
            "commit": "12f6051c9d75229d00ac0b31d6be1ff2014f7e6a",
            "name": "23.03.0",
            "tag": "legion-23.03.0"
        },
        {
            "commit": "9ed6f4d6b579c4f17e0298462e89548a4f0ed6e5",
            "name": "22.12.0",
            "tag": "legion-22.12.0"
        },
        {
            "commit": "5b6e013ad74fa6b4c5a24cbb329c676b924550a9",
            "name": "22.09.0",
            "tag": "legion-22.09.0"
        },
        {
            "commit": "f721be968fb969339334b07a3175a0400700eced",
            "name": "22.06.0",
            "tag": "legion-22.06.0"
        },
        {
            "commit": "bf6ce4560c99397da4a5cf61a306b521ec7069d0",
            "name": "22.03.0",
            "tag": "legion-22.03.0"
        },
        {
            "commit": "e1443112edaa574804b3b9d2a24803e937b127fd",
            "name": "21.12.0",
            "tag": "legion-21.12.0"
        },
        {
            "commit": "5a991b714cf55c3eaa513c7a18abb436d86a0a90",
            "name": "21.09.0",
            "tag": "legion-21.09.0"
        },
        {
            "commit": "30e00fa6016527c4cf60025a461fb7865f8def6b",
            "name": "21.06.0",
            "tag": "legion-21.06.0"
        },
        {
            "commit": "0cf9ddd60c227c219c8973ed0580ddc5887c9fb2",
            "name": "21.03.0",
            "tag": "legion-21.03.0"
        },
        {
            "commit": "435183796d7c8b6ac1035a6f7af480ded750f67d",
            "name": "cr-20230307"
        },
        {
            "commit": "181e63ad4187fbd9a96761ab3a52d93e157ede20",
            "name": "cr-20210122"
        },
        {
            "commit": "572576b312509e666f2d72fafdbe9d968b1a6ac3",
            "name": "cr-20191217"
        }
    ]
}