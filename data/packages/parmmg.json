{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "METIS is a set of serial programs for partitioning graphs, partitioning\nfinite element meshes, and producing fill reducing orderings for sparse\nmatrices. The algorithms implemented in METIS are based on the\nmultilevel recursive-bisection, multilevel k-way, and multi-constraint\npartitioning schemes.",
            "name": "metis"
        },
        {
            "description": "Mmg is an open source software for simplicial remeshing. It provides 3\napplications and 4 libraries: - the mmg2d application and the libmmg2d\nlibrary: adaptation and optimization of a two-dimensional triangulation\nand generation of a triangulation from a set of points or from given\nboundary edges - the mmgs application and the libmmgs library:\nadaptation and optimization of a surface triangulation and isovalue\ndiscretization - the mmg3d application and the libmmg3d library:\nadaptation and optimization of a tetrahedral mesh and implicit domain\nmeshing - the libmmg library gathering the libmmg2d, libmmgs and\nlibmmg3d libraries.",
            "name": "mmg"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "The Visualization Toolkit (VTK) is an open-source, freely available\nsoftware system for 3D computer graphics, image processing and\nvisualization.",
            "name": "vtk"
        }
    ],
    "dependent_to": [
        {
            "description": "PETSc is a suite of data structures and routines for the scalable\n(parallel) solution of scientific applications modeled by partial\ndifferential equations.",
            "name": "petsc"
        }
    ],
    "description": "ParMMG is a parallel remesher based on MMG\n",
    "homepage": "https://www.mmgtools.org",
    "latest_version": "1.5.0",
    "maintainers": [
        "corentin-dev"
    ],
    "name": "parmmg",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.parmmg",
            "relative_path": "parmmg_cmake_patch.diff",
            "reverse": false,
            "sha256": "b6002dc32372b7d78ed5b16e0932ab12049d1dbec5f6389403603af450fd818d",
            "version": "@:1.5.0",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": true,
            "description": "Build with position independent code",
            "name": "pic"
        },
        {
            "default": true,
            "description": "Build shared libraries",
            "name": "shared"
        },
        {
            "default": false,
            "description": "Build with VTK support",
            "name": "vtk"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "name": "1.5.0",
            "sha256": "0baec7914e49a26bdbb849ab64dcd92147eff79ac02ef3b2599cb05104901a7a"
        },
        {
            "name": "1.4.0",
            "sha256": "d8053bce9e1cd66077ad8cb86a5a874f47d0d0d2216e4eee4b98990355a0ea7f"
        },
        {
            "name": "1.3.0",
            "sha256": "d43b73a73b62545b5a31bbe25562f69c9e63ad8a6d416bd459781203e37427cf"
        },
        {
            "name": "1.2.0",
            "sha256": "99729cc292dcb59c87e3f25d4cabf5a64841e83b624d383e1fd3fb7f960df672"
        },
        {
            "name": "1.1.0",
            "sha256": "a5904f1f56b7809ab9ec2f6118b03a082ec2b5564355a73c74fc55426cc69600"
        },
        {
            "name": "1.0.0",
            "sha256": "614feb815ff6cdfc9bced30e8105994f0bf3a812243619d3349203ec1851cf6d"
        }
    ],
    "versions_deprecated": []
}