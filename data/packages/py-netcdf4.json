{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data.",
            "name": "hdf5"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution.",
            "name": "netcdf-c"
        },
        {
            "description": "Certifi: A carefully curated collection of Root Certificates for\nvalidating the trustworthiness of SSL certificates while verifying the\nidentity of TLS hosts.",
            "name": "py-certifi"
        },
        {
            "description": "Python library for decoding time units and variable values in a netCDF\nfile conforming to the Climate and Forecasting (CF) netCDF conventions",
            "name": "py-cftime"
        },
        {
            "description": "The Cython compiler for writing C extensions for the Python language.",
            "name": "py-cython"
        },
        {
            "description": "This package provides Python bindings for the Message Passing Interface\n(MPI) standard. It is implemented on top of the MPI-1/MPI-2\nspecification and exposes an API which grounds on the standard MPI-2 C++\nbindings.",
            "name": "py-mpi4py"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The blessed package to manage your versions by scm tags.",
            "name": "py-setuptools-scm"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "AMR-Wind is a massively parallel, block-structured adaptive-mesh,\nincompressible flow sover for wind turbine and wind farm simulations.",
            "name": "amr-wind"
        },
        {
            "description": "Statistical tool that matches up grids with either gridded analyses or\npoint observations and applies configurable methods to compute\nstatistics and diagnostics",
            "name": "met"
        },
        {
            "description": "Wavelet and simulated Annealing SliP inversion (WASP). This code uses a\nnonlinear simulated annealing inversion method to model slip amplitude,\nrake, rupture time, and rise time on a discretized fault plane, finding\nthe solution that best fits the observations in the wavelet domain.",
            "name": "neic-finitefault"
        },
        {
            "description": "Python package to automate ABINIT calculations and analyze the results.",
            "name": "py-abipy"
        },
        {
            "description": "ANUGA (pronounced \"AHnooGAH\") is open-source software for the simulation\nof the shallow water equation, in particular it can be used to model\ntsunamis and floods.",
            "name": "py-anuga"
        },
        {
            "description": "Python ARM Radar Toolkit. A growing collection of weather radar\nalgorithms and utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, processes, and analyse data from\nmany types of weather radars.",
            "name": "py-arm-pyart"
        },
        {
            "description": "ArviZ (pronounced \"AR-vees\") is a Python package for exploratory\nanalysis of Bayesian models. Includes functions for posterior analysis,\nmodel checking, comparison and diagnostics.",
            "name": "py-arviz"
        },
        {
            "description": "The cdo package provides an interface to the Climate Data Operators from\nPython.",
            "name": "py-cdo"
        },
        {
            "description": "An analysis environment for satellite and other earth observation data.",
            "name": "py-datacube"
        },
        {
            "description": "DXchange provides an interface with tomoPy and raw tomographic data\ncollected at different synchrotron facilities.",
            "name": "py-dxchange"
        },
        {
            "description": "Earth-2 Model Intercomparison Project (MIP). A python framework that\nenables climate researchers and scientists to explore and experiment\nwith AI models for weather and climate.",
            "name": "py-earth2mip"
        },
        {
            "description": "Heat is a flexible and seamless open-source software for high\nperformance data analytics and machine learning. It provides highly\noptimized algorithms and data structures for tensor computations using\nCPUs, GPUs and distributed cluster systems on top of MPI.",
            "name": "py-heat"
        },
        {
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)",
            "name": "py-mdanalysis"
        },
        {
            "description": "MELD is a tool for inferring the structure of biomolecules from sparse,\nambiguous, or noisy data.",
            "name": "py-meldmd"
        },
        {
            "description": "A Python interface for the Generic Mapping Tools.",
            "name": "py-pygmt"
        },
        {
            "description": "Work with triangular unstructured grids and the data on them.",
            "name": "py-pyugrid"
        },
        {
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data.",
            "name": "py-torchgeo"
        },
        {
            "description": "Xarray extension for unstructured climate and global weather data\nanalysis and visualization",
            "name": "py-uxarray"
        },
        {
            "description": "wradlib is designed to assist you in the most important steps of\nprocessing weather radar data. These may include: reading common data\nformats, georeferencing, converting reflectivity to rainfall intensity,\nidentifying and correcting typical error sources (such as clutter or\nattenuation) and visualising the data.",
            "name": "py-wradlib"
        },
        {
            "description": "N-D labeled arrays and datasets in Python",
            "name": "py-xarray"
        },
        {
            "description": "Volumetric Data Analysis yt is a python package for analyzing and\nvisualizing volumetric, multi-resolution data from astrophysical\nsimulations, radio telescopes, and a burgeoning interdisciplinary\ncommunity.",
            "name": "py-yt"
        }
    ],
    "description": "Python interface to the netCDF Library.\n",
    "homepage": "https://github.com/Unidata/netcdf4-python",
    "latest_version": "1.7.2",
    "maintainers": [
        "skosukhin"
    ],
    "name": "py-netcdf4",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.py-netcdf4",
            "relative_path": "disable_pkgconf.patch",
            "reverse": false,
            "sha256": "255b5ae328c6b2b293a59d7eb8934f861f265eba770c6a37411222d161e84171",
            "version": "",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.py-netcdf4",
            "relative_path": "disable_parallel_support.patch",
            "reverse": false,
            "sha256": "2593961aedd6e086279ba14e9188df761001cab7d19f210b96f734827ac2f9d6",
            "version": "@1.7:~mpi ^netcdf-c+mpi",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.py-netcdf4",
            "relative_path": "disable_parallel_support.patch",
            "reverse": false,
            "sha256": "2593961aedd6e086279ba14e9188df761001cab7d19f210b96f734827ac2f9d6",
            "version": "@1.7:~mpi ^hdf5+mpi",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.py-netcdf4",
            "reverse": false,
            "sha256": "71eefe1d3065ad050fb72eb61d916ae1374a3fafd96ddaee6499cda952d992c4",
            "url": "https://github.com/Unidata/netcdf4-python/commit/49dcd0b5bd25824c254770c0d41445133fc13a46.patch?full_index=1",
            "version": "@1.6:1.6.5 %gcc@14:",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": true,
            "description": "Parallel IO support",
            "name": "mpi"
        }
    ],
    "versions": [
        {
            "name": "1.7.2",
            "sha256": "a4c6375540b19989896136943abb6d44850ff6f1fa7d3f063253b1ad3f8b7fce"
        },
        {
            "name": "1.7.1.post2",
            "sha256": "37d557e36654889d7020192bfb56f9d5f93894cb32997eb837ae586c538fd7b6"
        },
        {
            "name": "1.6.5",
            "sha256": "824881d0aacfde5bd982d6adedd8574259c85553781e7b83e0ce82b890bfa0ef"
        },
        {
            "name": "1.6.2",
            "sha256": "0382b02ff6a288419f6ffec85dec40f451f41b8755547154c575ddd9f0f4ae53"
        },
        {
            "name": "1.5.8",
            "sha256": "ca3d468f4812c0999df86e3f428851fb0c17ac34ce0827115c246b0b690e4e84"
        },
        {
            "name": "1.5.3",
            "sha256": "2a3ca855848f4bbf07fac366da77a681fcead18c0a8813d91d46302f562dc3be"
        },
        {
            "name": "1.4.2",
            "sha256": "b934af350459cf9041bcdf5472e2aa56ed7321c018d918e9f325ec9a1f9d1a30"
        }
    ],
    "versions_deprecated": []
}