{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        }
    ],
    "dependent_to": [
        {
            "description": "GPI-Space is a task-based workflow management system for parallel\napplications. It allows the developers to build domain-specific\nworkflows using their own parallelization patterns, data management\npolicies and I/O routines, while relying on the runtime system for the\nworkflow management. The GPI-Space ecosystem \"auto-manages\" the\napplication with dynamic scheduling, built-in distributed memory\ntransfers and distributed tasks execution.",
            "name": "gpi-space"
        },
        {
            "description": "ldd as a tree",
            "name": "libtree"
        },
        {
            "description": "RCCL (pronounced \"Rickle\") is a stand-alone library of standard\ncollective communication routines for GPUs, implementing all-reduce,\nall-gather, reduce, broadcast, and reduce-scatter.",
            "name": "rccl"
        },
        {
            "description": "Wayland is a project to define a protocol for a compositor to talk to\nits clients as well as a library implementation of the protocol. The\ncompositor can be a standalone display server running on Linux kernel\nmodesetting and evdev input devices, an X application, or a wayland\nclient itself. The clients can be traditional applications, X\nservers(rootless or fullscreen) or other display servers.",
            "name": "wayland"
        }
    ],
    "description": "chrpath: Modifies the dynamic library load path (rpath and runpath) of\ncompiled programs and libraries.\n",
    "homepage": "https://directory.fsf.org/wiki/Chrpath",
    "latest_version": "0.16",
    "maintainers": [],
    "name": "chrpath",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.16",
            "sha256": "bb0d4c54bac2990e1bdf8132f2c9477ae752859d523e141e72b3b11a12c26e7b"
        }
    ],
    "versions_deprecated": []
}