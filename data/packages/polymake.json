{
    "aliases": [],
    "build_system": "Package",
    "conflicts": [],
    "dependencies": [
        {
            "description": "bliss: A Tool for Computing Automorphism Groups and Canonical Labelings\nof Graphs",
            "name": "bliss"
        },
        {
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use.",
            "name": "boost"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The C-library cddlib is a C implementation of the Double Description\nMethod of Motzkin et al. for generating all vertices (i.e. extreme\npoints) and extreme rays of a general convex polyhedron in R^d given by\na system of linear inequalities",
            "name": "cddlib"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "GMP is a free library for arbitrary precision arithmetic, operating on\nsigned integers, rational numbers, and floating-point numbers.",
            "name": "gmp"
        },
        {
            "description": "lrslib Ver 6.2 is a self-contained ANSI C implementation of the reverse\nsearch algorithm for vertex enumeration/convex hull problems and comes\nwith a choice of three arithmetic packages",
            "name": "lrslib"
        },
        {
            "description": "The MPFR library is a C library for multiple-precision floating-point\ncomputations with correct rounding.",
            "name": "mpfr"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development.",
            "name": "perl"
        },
        {
            "description": "JSON (JavaScript Object Notation) encoder/decoder",
            "name": "perl-json"
        },
        {
            "description": "Perl extension for the GNU Readline/History Library.",
            "name": "perl-term-readline-gnu"
        },
        {
            "description": "Term::ReadKey is a compiled perl module dedicated to providing simple\ncontrol over terminal driver modes (cbreak, raw, cooked, etc.,) support\nfor non-blocking reads, if the architecture allows, and some generalized\nhandy functions for working with terminals. One of the main goals is to\nhave the functions as portable as possible, so you can just plug in \"use\nTerm::ReadKey\" on any architecture and have a good likelihood of it\nworking.",
            "name": "perl-termreadkey"
        },
        {
            "description": "This module is an interface to libxml2, providing XML and HTML parsers\nwith DOM, SAX and XMLReader interfaces, a large subset of DOM Layer 3\ninterface and a XML::XPath-like interface to XPath API of libxml2. The\nmodule is split into several packages which are not described in this\nsection; unless stated otherwise, you only need to use XML::LibXML; in\nyour programs.",
            "name": "perl-xml-libxml"
        },
        {
            "description": "Interface to the GNOME libxslt library.",
            "name": "perl-xml-libxslt"
        },
        {
            "description": "XML::Writer is a helper module for Perl programs that write an XML\ndocument. The module handles all escaping for attribute values and\ncharacter data and constructs different types of markup, such as tags,\ncomments, and processing instructions. By default, the module performs\nseveral well-formedness checks to catch errors during output. This\nbehaviour can be extremely useful during development and debugging, but\nit can be turned off for production-grade code. The module can operate\neither in regular mode in or Namespace processing mode. In Namespace\nmode, the module will generate Namespace Declarations itself, and will\nperform additional checks on the output.",
            "name": "perl-xml-writer"
        },
        {
            "description": "The Parma Polyhedra Library (PPL) provides numerical abstractions\nespecially targeted at applications in the field of analysis and\nverification of complex systems. These abstractions include convex\npolyhedra, some special classes of polyhedra shapes that offer\ninteresting complexity/precision tradeoffs, and grids which represent\nregularly spaced points that satisfy a set of linear congruence\nrelations. The library also supports finite powersets and products of\npolyhedra and grids, a mixed integer linear programming problem solver\nusing an exact-arithmetic version of the simplex algorithm, a parametric\ninteger programming solver, and primitives for termination analysis via\nthe automatic synthesis of linear ranking functions.",
            "name": "ppl"
        },
        {
            "description": "The GNU Readline library provides a set of functions for use by\napplications that allow users to edit command lines as they are typed\nin. Both Emacs and vi editing modes are available. The Readline library\nincludes additional functions to maintain a list of previously-entered\ncommand lines, to recall and perhaps reedit those lines, and perform\ncsh-like history expansion on previous commands.",
            "name": "readline"
        }
    ],
    "dependent_to": [],
    "description": "polymake is open source software for research in polyhedral geometry\n",
    "homepage": "https://polymake.org/doku.php",
    "latest_version": "3.5",
    "maintainers": [],
    "name": "polymake",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "3.5",
            "sha256": "c649f8536ccef5a5e22b82c514a09278ebcd99d0815aa7170461fe12843109bd"
        },
        {
            "name": "3.0r2",
            "sha256": "e7c0f8e3a45ea288d2fb4ae781a1dcea913ef9c275fed401632cdb11a672d6dc"
        },
        {
            "name": "3.0r1",
            "sha256": "cdc223716b1cc3f4f3cc126089a438f9d12390caeed78291a87565717c7b504d"
        }
    ],
    "versions_deprecated": []
}