{
    "aliases": [],
    "build_system": "PerlPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development.",
            "name": "perl"
        },
        {
            "description": "The DBI is the standard database interface module for Perl. It defines a\nset of methods, variables and conventions that provide a consistent\ndatabase interface independent of the actual database being used.",
            "name": "perl-dbi"
        },
        {
            "description": "PostgreSQL is a powerful, open source object-relational database system.\nIt has more than 15 years of active development and a proven\narchitecture that has earned it a strong reputation for reliability,\ndata integrity, and correctness.",
            "name": "postgresql"
        }
    ],
    "dependent_to": [
        {
            "description": "MAKER is a portable and easily configurable genome annotation pipeline.\nIt's purpose is to allow smaller eukaryotic and prokaryotic\ngenomeprojects to independently annotate their genomes and to create\ngenome databases. MAKER identifies repeats, aligns ESTs and proteins to\na genome, produces ab-initio gene predictions and automatically\nsynthesizes these data into gene annotations having evidence-based\nquality values. MAKER is also easily trainable: outputs of preliminary\nruns can be used to automatically retrain its gene prediction algorithm,\nproducing higher quality gene-models on subsequent runs. MAKER's inputs\nare minimal and its ouputs can be directly loaded into a GMOD database.\nThey can also be viewed in the Apollo genome browser; this feature of\nMAKER provides an easy means to annotate, view and edit individual\ncontigs and BACs without the overhead of a database. MAKER should prove\nespecially useful for emerging model organism projects with minimal\nbioinformatics expertise and computer resources. Note: MAKER requires\nregistration. Fill out the form at\nhttp://yandell.topaz.genetics.utah.edu/cgi-bin/maker_license.cgi to get\na download link. Spack will search your current directory for the\ndownload file. Alternatively, add this file to a mirror so that Spack\ncan find it. For instructions on how to set up a mirror, see\nhttps://spack.readthedocs.io/en/latest/mirrors.html",
            "name": "maker"
        },
        {
            "description": "BioPerl is the product of a community effort to produce Perl code which\nis useful in biology. Examples include Sequence objects, Alignment\nobjects and database searching objects. These objects not only do what\nthey are advertised to do in the documentation, but they also interact -\nAlignment objects are made from the Sequence objects, Sequence objects\nhave access to Annotation and SeqFeature objects and databases, Blast\nobjects can be converted to Alignment objects, and so on. This means\nthat the objects provide a coordinated and extensible framework to do\ncomputational biology. BioPerl development focuses on Perl classes, or\ncode that is used to create objects representing biological entities.\nThere are scripts provided in the scripts/ and examples/ directories but\nscripts are not the main focus of the BioPerl developers. Of course, as\nthe objects do most of the hard work for you, all you have to do is\ncombine a number of objects together sensibly to make useful scripts.\nThe intent of the BioPerl development effort is to make reusable tools\nthat aid people in creating their own sites or job-specific\napplications. The BioPerl website at https://bioperl.org/ also attempts\nto maintain links and archives of standalone bio-related Perl tools that\nare not affiliated or related to the core BioPerl effort. Check the site\nfor useful code ideas and contribute your own if possible.",
            "name": "perl-bioperl"
        }
    ],
    "description": "DBD::Pg is a Perl module that works with the DBI module to provide\naccess to PostgreSQL databases.\n",
    "homepage": "https://metacpan.org/pod/DBD::Pg",
    "latest_version": "3.18.0",
    "maintainers": [],
    "name": "perl-dbd-pg",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "perl",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "3.18.0",
            "sha256": "92bbe8a363040f8ce6a3f1963f128132e245861a9b4dc5a84178b42d625a7807"
        },
        {
            "name": "3.16.1",
            "sha256": "8e917a746dacb1edce5832d8911e5938cc4863aeac4a52820382e7d174e9c3b9"
        },
        {
            "name": "3.10.0",
            "sha256": "e103268a63e2828e3d43659bdba5f743446cbbe047a766f843112eedae105f80"
        }
    ],
    "versions_deprecated": []
}