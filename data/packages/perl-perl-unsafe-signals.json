{
    "aliases": [],
    "build_system": "PerlPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development.",
            "name": "perl"
        }
    ],
    "dependent_to": [
        {
            "description": "MAKER is a portable and easily configurable genome annotation pipeline.\nIt's purpose is to allow smaller eukaryotic and prokaryotic\ngenomeprojects to independently annotate their genomes and to create\ngenome databases. MAKER identifies repeats, aligns ESTs and proteins to\na genome, produces ab-initio gene predictions and automatically\nsynthesizes these data into gene annotations having evidence-based\nquality values. MAKER is also easily trainable: outputs of preliminary\nruns can be used to automatically retrain its gene prediction algorithm,\nproducing higher quality gene-models on subsequent runs. MAKER's inputs\nare minimal and its ouputs can be directly loaded into a GMOD database.\nThey can also be viewed in the Apollo genome browser; this feature of\nMAKER provides an easy means to annotate, view and edit individual\ncontigs and BACs without the overhead of a database. MAKER should prove\nespecially useful for emerging model organism projects with minimal\nbioinformatics expertise and computer resources. Note: MAKER requires\nregistration. Fill out the form at\nhttp://yandell.topaz.genetics.utah.edu/cgi-bin/maker_license.cgi to get\na download link. Spack will search your current directory for the\ndownload file. Alternatively, add this file to a mirror so that Spack\ncan find it. For instructions on how to set up a mirror, see\nhttps://spack.readthedocs.io/en/latest/mirrors.html",
            "name": "maker"
        }
    ],
    "description": "Quoting perl581delta: In Perl 5.8.0 the so-called \"safe signals\" were\nintroduced. This means that Perl no longer handles signals immediately\nbut instead \"between opcodes\", when it is safe to do so. The earlier\nimmediate handling easily could corrupt the internal state of Perl,\nresulting in mysterious crashes. It's possible since perl 5.8.1 to\nglobally disable this feature by using the PERL_SIGNALS environment\nvariables (as specified in \"PERL_SIGNALS\" in perlrun); but there's no\nway to disable it locally, for a short period of time. That's however\nsomething you might want to do, if, for example, your Perl program calls\na C routine that will potentially run for a long time and for which you\nwant to set a timeout. This module therefore allows you to define\nUNSAFE_SIGNALS blocks in which signals will be handled \"unsafely\". Note\nthat, no matter how short you make the unsafe block, it will still be\nunsafe. Use with caution.\n",
    "homepage": "https://metacpan.org/pod/Perl::Unsafe::Signals",
    "latest_version": "0.03",
    "maintainers": [],
    "name": "perl-perl-unsafe-signals",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "perl",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.03",
            "sha256": "d311ae7d73e8d0c2346dfacb82aa952322e70cd928b09d502d739e60e35f829d"
        }
    ],
    "versions_deprecated": []
}