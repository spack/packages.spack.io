{
    "aliases": [],
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=makefile"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "MozJPEG is a patched version of libjpeg-turbo which improves JPEG\ncompression efficiency achieving higher visual quality and smaller file\nsizes at the same time",
            "name": "jpeg"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "The Visualization Toolkit (VTK) is an open-source, freely available\nsoftware system for 3D computer graphics, image processing and\nvisualization.",
            "name": "vtk"
        },
        {
            "description": "zlib replacement with optimizations for next generation systems.",
            "name": "zlib-api"
        }
    ],
    "dependent_to": [],
    "description": "Discrete element method particle simulation.\n",
    "homepage": "https://www.cfdem.com/media/DEM/docu/Manual.html",
    "latest_version": "3.8.0",
    "maintainers": [
        "SofiaXu"
    ],
    "name": "liggghts",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.liggghts",
            "relative_path": "makefile.patch",
            "reverse": false,
            "sha256": "0ee43f9c0a22d6b0392925eaccb22b86139ffd2ae0ab7c05d6c034d92991a3de",
            "version": "",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.liggghts",
            "relative_path": "cpp-17.patch",
            "reverse": false,
            "sha256": "91bd45ca3964ceea14afe4fa8b1d81c691e4b7584d6fc54fdb4fa443311f15d1",
            "version": "",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.liggghts",
            "relative_path": "makefile-llvm-based-compiler.patch",
            "reverse": false,
            "sha256": "55ab7ccc5634b73fecdf79a77c558f9c6868f719d75fa8c0839569e8c6841bdb",
            "version": "%clang",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.liggghts",
            "relative_path": "makefile-llvm-based-compiler.patch",
            "reverse": false,
            "sha256": "55ab7ccc5634b73fecdf79a77c558f9c6868f719d75fa8c0839569e8c6841bdb",
            "version": "%oneapi",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "makefile",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Builds a debug version of the executable",
            "name": "debug"
        },
        {
            "default": true,
            "description": "Enable GZIP for some input and output files",
            "name": "gzip"
        },
        {
            "default": true,
            "description": "Enable JPEG support",
            "name": "jpeg"
        },
        {
            "default": true,
            "description": "Enable MPI support",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Generate profiling code",
            "name": "profile"
        }
    ],
    "versions": [
        {
            "name": "3.8.0",
            "sha256": "9cb2e6596f584463ac2f80e3ff7b9588b7e3638c44324635b6329df87b90ab03"
        }
    ],
    "versions_deprecated": []
}