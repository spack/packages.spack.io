{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Assesses genome assembly and annotation completeness with Benchmarking\nUniversal Single-Copy Orthologs",
            "name": "busco"
        },
        {
            "description": "EMBLmyGFF3 converts an assembly in FASTA format along with associated\nannotation in GFF3 format into the EMBL flat file format which is the\nrequired format for submitting annotated assemblies to ENA.",
            "name": "emblmygff3"
        },
        {
            "description": "HybPiper was designed for targeted sequence capture, in which DNA\nsequencing libraries are enriched for gene regions of interest,\nespecially for phylogenetics. HybPiper is a suite of Python scripts that\nwrap and connect bioinformatics tools in order to extract target\nsequences from high-throughput DNA sequencing reads",
            "name": "hybpiper"
        },
        {
            "description": "A python pipeline to identify IS (Insertion Sequence) elements in genome\nand metagenome",
            "name": "isescan"
        },
        {
            "description": "IsoQuant: Transcript discovery and quantification with long RNA reads",
            "name": "isoquant"
        },
        {
            "description": "Liftoff is a tool that accurately maps annotations in GFF or GTF between\nassemblies of the same, or closely-related species.",
            "name": "liftoff"
        },
        {
            "description": "OrthoFiller: Identifying missing annotations for evolutionarily\nconserved genes.",
            "name": "orthofiller"
        },
        {
            "description": "pharokka is a rapid standardised annotation pipeline for bacteriophage\ngenomes",
            "name": "pharokka"
        },
        {
            "description": "phyluce (phy-loo-chee) is a software package that was initially\ndeveloped for analyzing data collected from ultraconserved elements in\norganismal genomes",
            "name": "phyluce"
        },
        {
            "description": "AlphaFold is an AI system developed by DeepMind that predicts a\nprotein's 3D structure from its amino acid sequence. It regularly\nachieves accuracy competitive with experiment.",
            "name": "py-alphafold"
        },
        {
            "description": "ANGEL: Robust Open Reading Frame prediction",
            "name": "py-angel"
        },
        {
            "description": "Bakta: rapid & standardized annotation of bacterial genomes, MAGs &\nplasmids",
            "name": "py-bakta"
        },
        {
            "description": "Read and write Generic Feature Format (GFF) with Biopython integration.",
            "name": "py-bcbio-gff"
        },
        {
            "description": "Biobb_common is the base package required to use the biobb packages",
            "name": "py-biobb-common"
        },
        {
            "description": "Biobb_structure_checking provides a series of functions to check the\nquality of a 3D structure intended to facilitate the setup of a\nmolecular dynamics simulation of protein or nucleic acids systems",
            "name": "py-biobb-structure-checking"
        },
        {
            "description": "nucleotide-resolution analysis of structural variants",
            "name": "py-breakseq2"
        },
        {
            "description": "CMSeq is a set of commands to provide an interface to .bam files for\ncoverage and sequence consensus.",
            "name": "py-cmseq"
        },
        {
            "description": "DeepSig - Predictor of signal peptides in proteins based on deep\nlearning",
            "name": "py-deepsig-biocomp"
        },
        {
            "description": "dRep is a python program for rapidly comparing large numbers of genomes.\ndRep can also \"de-replicate\" a genome set by identifying groups of\nhighly similar genomes and choosing the best representative genome for\neach genome set.",
            "name": "py-drep"
        },
        {
            "description": "Evolutionary Scale Modeling",
            "name": "py-fair-esm"
        },
        {
            "description": "Optimizing Protein Structure Prediction Model Training and Inference on\nGPU Clusters.",
            "name": "py-fastfold"
        },
        {
            "description": "HAplotype and PHylodynamics pipeline for viral assembly, population\ngenetics, and phylodynamics.",
            "name": "py-haphpipe"
        },
        {
            "description": "inStrain is python program for analysis of co-occurring genome\npopulations from metagenomes that allows highly accurate genome\ncomparisons, analysis of coverage, microdiversity, and linkage, and\nsensitive SNP detection with gene localization and synonymous non-\nsynonymous identification.",
            "name": "py-instrain"
        },
        {
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)",
            "name": "py-mdanalysis"
        },
        {
            "description": "MetaPhlAn is a computational tool for profiling the composition of\nmicrobial communities (Bacteria, Archaea and Eukaryotes) from\nmetagenomic shotgun sequencing data (i.e. not 16S) with species-level.",
            "name": "py-metaphlan"
        },
        {
            "description": "Mikado is a lightweight Python3 pipeline whose purpose is to facilitate\nthe identification of expressed loci from RNA-Seq data * and to select\nthe best models in each locus.",
            "name": "py-mikado"
        },
        {
            "description": "Functions to extract information from Oxford Nanopore sequencing data\nand alignments",
            "name": "py-nanoget"
        },
        {
            "description": "Plotting scripts for long read sequencing data",
            "name": "py-nanoplot"
        },
        {
            "description": "A Bacterial Pangenome Analysis Pipeline",
            "name": "py-panaroo"
        },
        {
            "description": "Ancestral character reconstruction and visualisation for rooted\nphylogenetic trees.",
            "name": "py-pastml"
        },
        {
            "description": "pauvre: plotting package designed for nanopore and PacBio long reads",
            "name": "py-pauvre"
        },
        {
            "description": "phydms enables phylogenetic analyses using deep mutational scanning data\nto inform the substitution models. It implements Experimentally informed\ncodon models (ExpCM) for phylogenetic inference and the detection of\nbiologically interesting selection.",
            "name": "py-phydms"
        },
        {
            "description": "PhyloPhlAn 3.0 is an integrated pipeline for large-scale phylogenetic\nprofiling of genomes and metagenomes.",
            "name": "py-phylophlan"
        },
        {
            "description": "pyani is a Python3 module that provides support for calculating average\nnucleotide identity (ANI) and related measures for whole genome\ncomparisons, and rendering relevant graphical summary output. Where\navailable, it takes advantage of multicore systems, and can integrate\nwith SGE/OGE-type job schedulers for the sequence comparisons.",
            "name": "py-pyani"
        },
        {
            "description": "Pyvolve is an open-source Python module for simulating sequences along a\nphylogenetic tree according to continuous-time Markov models of sequence\nevolution",
            "name": "py-pyvolve"
        },
        {
            "description": "ShortBRED is a system for profiling protein families of interest at very\nhigh specificity in shotgun meta'omic sequencing data.",
            "name": "py-shortbred"
        },
        {
            "description": "TEsorter is coded for LTR_retriever to classify long terminal repeat\nretrotransposons (LTR-RTs) at first. It can also be used to classify any\nother transposable elements (TEs), including Class I and Class II\nelements which are covered by the REXdb database.",
            "name": "py-tesorter"
        },
        {
            "description": "Python framework for doing ancestral sequence reconstruction.",
            "name": "py-topiary-asr"
        },
        {
            "description": "VCF-kit is a command-line based collection of utilities for performing\nanalysis on Variant Call Format (VCF) files.",
            "name": "py-vcf-kit"
        },
        {
            "description": "Bioinformatics tools and a software library developed by the Oxford\nNanopore Technologies Applications group.",
            "name": "py-wub"
        },
        {
            "description": "Rapid large-scale prokaryote pan genome analysis",
            "name": "roary"
        },
        {
            "description": "A tool for accurate prediction of a protein's secondary structure from\nonly its amino acid sequence with no evolutionary information",
            "name": "s4pred"
        },
        {
            "description": "ShortBRED is a system for profiling protein families of interest at very\nhigh specificity in shotgun meta'omic sequencing data.",
            "name": "shortbred"
        }
    ],
    "description": "A distributed collaborative effort to develop Python libraries and\napplications which address the needs of current and future work in\nbioinformatics.\n",
    "homepage": "https://biopython.org/wiki/Main_Page",
    "latest_version": "1.81",
    "maintainers": [
        "RMeli"
    ],
    "name": "py-biopython",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "1.81",
            "sha256": "2cf38112b6d8415ad39d6a611988cd11fb5f33eb09346666a87263beba9614e0"
        },
        {
            "name": "1.80",
            "sha256": "52805e9af88767e450e2df8113b5bc59e964e2e8a7bb803a83570bdbb51c0e43"
        },
        {
            "name": "1.79",
            "sha256": "edb07eac99d3b8abd7ba56ff4bedec9263f76dfc3c3f450e7d2e2bcdecf8559b"
        },
        {
            "name": "1.78",
            "sha256": "1ee0a0b6c2376680fea6642d5080baa419fd73df104a62d58a8baf7a8bbe4564"
        },
        {
            "name": "1.73",
            "sha256": "70c5cc27dc61c23d18bb33b6d38d70edc4b926033aea3b7434737c731c94a5e0"
        },
        {
            "name": "1.70",
            "sha256": "4a7c5298f03d1a45523f32bae1fffcff323ea9dce007fb1241af092f5ab2e45b"
        },
        {
            "name": "1.65",
            "sha256": "6d591523ba4d07a505978f6e1d7fac57e335d6d62fb5b0bcb8c40bdde5c8998e"
        }
    ],
    "versions_deprecated": []
}