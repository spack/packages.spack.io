{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Python composable command line interface toolkit.",
            "name": "py-click"
        },
        {
            "description": "A lightweight python client to communicate with the etelemetry server",
            "name": "py-etelemetry"
        },
        {
            "description": "A platform-independent file lock for Python. This package contains a\nsingle module, which implements a platform independent file lock in\nPython, which provides a simple way of inter-process communication",
            "name": "py-filelock"
        },
        {
            "description": "Version numbering for anarchists and software realists.",
            "name": "py-looseversion"
        },
        {
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks.",
            "name": "py-networkx"
        },
        {
            "description": "Access a multitude of neuroimaging data formats",
            "name": "py-nibabel"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "Core utilities for Python packages.",
            "name": "py-packaging"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python library for W3C Provenance Data Model (PROV). A library for W3C\nProvenance Data Model supporting PROV-JSON, PROV-XML and PROV-O (RDF)",
            "name": "py-prov"
        },
        {
            "description": "Python interface to Graphviz's Dot language",
            "name": "py-pydot"
        },
        {
            "description": "Python interface to Graphviz's Dot language",
            "name": "py-pydotplus"
        },
        {
            "description": "Extensions to the standard Python datetime module.",
            "name": "py-python-dateutil"
        },
        {
            "description": "RDFLib is a pure Python package for working with RDF. RDFLib contains\nmost things you need to work with RDF, including: parsers and\nserializers for RDF/XML, N3, NTriples, N-Quads, Turtle, TriX, Trig and\nJSON-LD (via a plugin). a Graph interface which can be backed by any one\nof a number of Store implementations store implementations for in-memory\nstorage and persistent storage on top of the Berkeley DB a SPARQL 1.1\nimplementation - supporting SPARQL 1.1 Queries and Update statements",
            "name": "py-rdflib"
        },
        {
            "description": "Fundamental algorithms for scientific computing in Python.",
            "name": "py-scipy"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Simplejson is a simple, fast, extensible JSON encoder/decoder for Python",
            "name": "py-simplejson"
        },
        {
            "description": "Observable typed attributes for Python classes.",
            "name": "py-traits"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "BetaSeries Correlations implemented in Nipype.",
            "name": "py-nibetaseries"
        },
        {
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)",
            "name": "py-niworkflows"
        },
        {
            "description": "A script to remove facial structure from MRI images.",
            "name": "py-pydeface"
        }
    ],
    "description": "Neuroimaging in Python: Pipelines and Interfaces.\n",
    "homepage": "https://github.com/nipy/nipype",
    "latest_version": "1.8.6",
    "maintainers": [],
    "name": "py-nipype",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "1.8.6",
            "sha256": "977b1315e8f70f94163ec07e31e5571be83f2add6023141c5a06ac700126f8d1"
        },
        {
            "name": "1.8.5",
            "sha256": "e3842743fb660464dd29de73dcfc9ef66d273be10bcc64059ff21cd5ef1e9655"
        },
        {
            "name": "1.7.0",
            "sha256": "e689fe2e5049598c9cd3708e8df1cac732fa1a88696f283e3bc0a70fecb8ab51"
        },
        {
            "name": "1.6.1",
            "sha256": "8428cfc633d8e3b8c5650e241e9eedcf637b7969bcd40f3423334d4c6b0992b5"
        },
        {
            "name": "1.6.0",
            "sha256": "bc56ce63f74c9a9a23c6edeaf77631377e8ad2bea928c898cc89527a47f101cf"
        },
        {
            "name": "1.4.2",
            "sha256": "069dcbb0217f13af6ee5a7f1e58424b9061290a3e10d7027d73bf44e26f820db"
        }
    ],
    "versions_deprecated": []
}