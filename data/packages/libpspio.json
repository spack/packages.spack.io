{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "Autoconf -- system configuration part of autotools",
            "name": "autoconf"
        },
        {
            "description": "Automake -- make file builder part of autotools",
            "name": "automake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "Check is a unit testing framework for C. It features a simple interface\nfor defining unit tests, putting little in the way of the developer.\nTests are run in a separate address space, so both assertion failures\nand code errors that cause segmentation faults or other signals can be\ncaught. Test results are reportable in the following: Subunit, TAP, XML,\nand a generic logging format.",
            "name": "check"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "The GNU Scientific Library (GSL) is a numerical library for C and C++\nprogrammers. It is free software under the GNU General Public License.\nThe library provides a wide range of mathematical routines such as\nrandom number generators, special functions and least-squares fitting.\nThere are over 1000 functions in total with an extensive test suite.",
            "name": "gsl"
        },
        {
            "description": "libtool -- library building part of autotools.",
            "name": "libtool"
        },
        {
            "description": "GNU M4 is an implementation of the traditional Unix macro processor.",
            "name": "m4"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        }
    ],
    "dependent_to": [],
    "description": "Library to perform I/O operations on pseudopotential data files.\n",
    "homepage": "https://gitlab.com/ElectronicStructureLibrary/libpspio",
    "latest_version": "0.4.1",
    "maintainers": [
        "hmenke"
    ],
    "name": "libpspio",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable Fortran bindings",
            "name": "fortran"
        }
    ],
    "versions": [
        {
            "name": "0.4.1",
            "sha256": "e4f87f6d8821042db3a88dad60ae07278e36ad2571e28f5d30f02d8b164b4daa"
        },
        {
            "name": "0.3.0",
            "sha256": "4dc092457e481e5cd703eeecd87e6f17749941fe274043550c8a2557a649afc5"
        }
    ],
    "versions_deprecated": []
}