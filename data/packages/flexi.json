{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": "flexi: Only available for Gauss-Lobatto nodes",
            "name": "nodetype=GAUSS",
            "spec": "+split"
        },
        {
            "description": "flexi: Only available in newer releases",
            "name": "+to3d",
            "spec": "@:21.3.0"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications.",
            "name": "fftw"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "HDF5 is a data model, library, and file format for storing and managing\ndata. It supports an unlimited variety of datatypes, and is designed for\nflexible and efficient I/O and for high volume and complex data.",
            "name": "hdf5"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "zlib replacement with optimizations for next generation systems.",
            "name": "zlib-api"
        }
    ],
    "dependent_to": [],
    "description": "Open Source High-Order Unstructured Discontinuous Galerkin Fluid\nDynamics Solver\n",
    "homepage": "https://www.flexi-project.org/",
    "latest_version": "21.03.0",
    "maintainers": [],
    "name": "flexi",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.flexi",
            "relative_path": "for_aarch64.patch",
            "reverse": false,
            "sha256": "b41d17b76dabf2e6ebc8c625281ad0a477347117d75d26b8ba667f889b746d90",
            "version": "arch=None-None-aarch64:",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": false,
            "description": "If set to True the code will run in two-dimensional mode",
            "name": "2d"
        },
        {
            "default": false,
            "description": "Enable posti_avg2d",
            "name": "avg2d"
        },
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Enable posti_channel_fft",
            "name": "channel_fft"
        },
        {
            "default": false,
            "description": "Enable eddy viscosity",
            "name": "eddy_viscosity"
        },
        {
            "default": "navierstokes",
            "description": "Defines the equation system",
            "name": "eqnsysname"
        },
        {
            "default": false,
            "description": "Enable posti_evaluaterecordpoints",
            "name": "evaluaterecordpoints"
        },
        {
            "default": false,
            "description": "Enables the usage of the finite volume subcell shock capturing mechanism",
            "name": "fv"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": "br1",
            "description": "Two different lifting methods for the parabolic part of the equation system available",
            "name": "lifting"
        },
        {
            "default": false,
            "description": "Enable posti_mergetimeaverages",
            "name": "mergetimeaverages"
        },
        {
            "default": true,
            "description": "Enable MPI",
            "name": "mpi"
        },
        {
            "default": "GAUSS",
            "description": "Space discretization basis function",
            "name": "nodetype"
        },
        {
            "default": true,
            "description": "Defines whether the parabolic part of the chosen system should be included or not",
            "name": "parabolic"
        },
        {
            "default": false,
            "description": "Enable posti_preparerecordpoints",
            "name": "preparerecordpoints"
        },
        {
            "default": false,
            "description": "Split form of the discontinuous Galerkin operator",
            "name": "split"
        },
        {
            "default": false,
            "description": "Enable posti_swapmesh",
            "name": "swapmesg"
        },
        {
            "default": "default",
            "description": "Defines the used test case",
            "name": "testcase"
        },
        {
            "default": false,
            "description": "Enable posti_to3d",
            "name": "to3d"
        },
        {
            "default": "constant",
            "description": "Defines modeling approach for viscosity",
            "name": "viscosity"
        },
        {
            "default": true,
            "description": "Enable posti_visu",
            "name": "visu"
        },
        {
            "default": false,
            "description": "Enable posti_visualizerecordpoints",
            "name": "visualizerecordpoints"
        }
    ],
    "versions": [
        {
            "name": "master"
        },
        {
            "commit": "d061978e5d96cfc96c06edc1bae9d92cbe540c18",
            "name": "21.03.0",
            "tag": "v21.03.0"
        }
    ],
    "versions_deprecated": []
}