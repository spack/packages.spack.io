{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Atomic file writes.",
            "name": "py-atomicwrites"
        },
        {
            "description": "Classes Without Boilerplate",
            "name": "py-attrs"
        },
        {
            "description": "Cross-platform colored terminal text.",
            "name": "py-colorama"
        },
        {
            "description": "A backport of the BaseExceptionGroup and ExceptionGroup classes from\nPython 3.11.",
            "name": "py-exceptiongroup"
        },
        {
            "description": "Read metadata from Python packages.",
            "name": "py-importlib-metadata"
        },
        {
            "description": "iniconfig: brain-dead simple parsing of ini files",
            "name": "py-iniconfig"
        },
        {
            "description": "Additions to the standard Python itertools package.",
            "name": "py-more-itertools"
        },
        {
            "description": "Core utilities for Python packages.",
            "name": "py-packaging"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Plugin and hook calling mechanisms for python.",
            "name": "py-pluggy"
        },
        {
            "description": "Library with cross-python path, ini-parsing, io, code, log facilities",
            "name": "py-py"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The blessed package to manage your versions by scm tags.",
            "name": "py-setuptools-scm"
        },
        {
            "description": "Python 2 and 3 compatibility utilities.",
            "name": "py-six"
        },
        {
            "description": "A Python library for parsing and creating TOML configuration files. For\nmore information on the TOML standard, see https://github.com/toml-\nlang/toml.git",
            "name": "py-toml"
        },
        {
            "description": "Tomli is a Python library for parsing TOML. Tomli is fully compatible\nwith TOML v1.0.0.",
            "name": "py-tomli"
        },
        {
            "description": "Measures number of Terminal column cells of wide-character codes",
            "name": "py-wcwidth"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "A Common Tracking Software (Acts) This project contains an experiment-\nindependent set of track reconstruction tools. The main philosophy is to\nprovide high-level track reconstruction modules that can be used for any\ntracking detector. The description of the tracking detector's geometry\nis optimized for efficient navigation and quick extrapolation of tracks.\nConverters for several common geometry description languages exist.\nHaving a highly performant, yet largely customizable implementation of\ntrack reconstruction algorithms was a primary objective for the design\nof this toolset. Additionally, the applicability to real-life HEP\nexperiments plays major role in the development process. Apart from\nalgorithmic code, this project also provides an event data model for the\ndescription of track parameters and measurements. Key features of this\nproject include: tracking geometry description which can be constructed\nfrom TGeo, DD4Hep, or GDML input, simple and efficient event data model,\nperformant and highly flexible algorithms for track propagation and\nfitting, basic seed finding algorithms.",
            "name": "acts"
        },
        {
            "description": "The AOCL Data Analytics Library (AOCL-DA) is a data analytics library\nproviding optimized building blocks for data analysis. It is written\nwith a C-compatible interface to make it as seamless as possible to\nintegrate with the library from whichever programming language you are\nusing. The intended workflow for using the library is as follows: \u2022 load\ndata from memory by reading CSV files or using the in-built da_datastore\nobject \u2022 preprocess the data by removing missing values, standardizing,\nand selecting certain subsets of the data, before extracting contiguous\narrays of data from the da_datastore objects \u2022 data processing (e.g.\nprincipal component analysis, linear model fitting, etc.) C++ example\nprograms can be found in the examples folder of your installation.",
            "name": "aocl-da"
        },
        {
            "description": "C-Vise is a super-parallel Python port of the C-Reduce. The port is\nfully compatible to the C-Reduce and uses the same efficient LLVM-based\nC/C++ reduction tool named clang_delta.",
            "name": "cvise"
        },
        {
            "description": "DD4hep is a software framework for providing a complete solution for\nfull detector description (geometry, materials, visualization, readout,\nalignment, calibration, etc.) for the full experiment life cycle\n(detector concept development, detector optimization, construction,\noperation). It offers a consistent description through a single source\nof detector information for simulation, reconstruction, analysis, etc.\nIt distributed under the LGPLv3 License.",
            "name": "dd4hep"
        },
        {
            "description": "ExaGO is a package for solving large-scale power grid optimization\nproblems on parallel and distributed architectures, particularly\ntargeted for exascale machines.",
            "name": "exago"
        },
        {
            "description": "An experiment-independent HEP event data processing framework",
            "name": "gaudi"
        },
        {
            "description": "gnina (pronounced NEE-na) is a molecular docking program with integrated\nsupport for scoring and optimizing ligands using convolutional neural\nnetworks.",
            "name": "gnina"
        },
        {
            "description": "libmolgrid is a library to generate tensors from molecular data, with\nproperties that make its output particularly suited to machine learning.",
            "name": "libmolgrid"
        },
        {
            "description": "N2p2 (The neural network potential package) provides ready-to-use\nsoftware for high-dimensional neural network potentials in computational\nphysics and chemistry.",
            "name": "n2p2"
        },
        {
            "description": "NEURON is a simulation environment for single and networks of neurons.\nNEURON is a simulation environment for modeling individual and networks\nof neurons. NEURON models individual neurons via the use of sections\nthat are automatically subdivided into individual compartments, instead\nof requiring the user to manually create compartments.",
            "name": "neuron"
        },
        {
            "description": "A python package with helper tools for the nf-core community.",
            "name": "nf-core-tools"
        },
        {
            "description": "Open3D: A Modern Library for 3D Data Processing.",
            "name": "open3d"
        },
        {
            "description": "The Pipelined, Hybrid-parallel Iterative Solver Toolkit provides\nimplementations of and interfaces to block iterative solvers for sparse\nlinear and eigenvalue problems. In contrast to other libraries we\nsupport multiple backends (e.g. Trilinos, PETSc and our own optimized\nkernels), and interfaces in multiple languages such as C, C++, Fortran\n2003 and Python. PHIST has a clear focus on portability and hardware\nperformance: in particular support row-major storage of block vectors\nand using GPUs (via the ghost library or Trilinos/Tpetra).",
            "name": "phist"
        },
        {
            "description": "An accelerated Image loader and preprocessor leveraging Intel IPP.\naccimage mimics the PIL API and can be used as a backend for\ntorchvision.",
            "name": "py-accimage"
        },
        {
            "description": "AMReX Python Bindings with pybind11",
            "name": "py-amrex"
        },
        {
            "description": "This is the python client for Arkouda.",
            "name": "py-arkouda"
        },
        {
            "description": "The Astropy Project is a community effort to develop a single core\npackage for Astronomy in Python and foster interoperability between\nPython astronomy packages.",
            "name": "py-astropy"
        },
        {
            "description": "Beautiful Soup is a Python library for pulling data out of HTML and XML\nfiles. It works with your favorite parser to provide idiomatic ways of\nnavigating, searching, and modifying the parse tree.",
            "name": "py-beautifulsoup4"
        },
        {
            "description": "Converts and organises raw MRI data-sets according to the Brain Imaging\nData Structure (BIDS).",
            "name": "py-bidscoin"
        },
        {
            "description": "A catch-all compile-tool wrapper.",
            "name": "py-blight"
        },
        {
            "description": "CellProfiler cell image analysis software. CellProfiler is a free open-\nsource software designed to enable biologists without training in\ncomputer vision or programming to quantitatively measure phenotypes from\nthousands of images automatically.",
            "name": "py-cellprofiler"
        },
        {
            "description": "A clean and simple data loading library for Continual Learning",
            "name": "py-continuum"
        },
        {
            "description": "Python utilities to interact with Darshan log records of HPC\napplications.",
            "name": "py-darshan"
        },
        {
            "description": "data distribution geared toward scientific datasets. DataLad makes data\nmanagement and data distribution more accessible. To do that, it stands\non the shoulders of Git and Git-annex to deliver a decentralized system\nfor data exchange. This includes automated ingestion of data from online\nportals and exposing it in readily usable form as Git(-annex)\nrepositories, so-called datasets. The actual data storage and permission\nmanagement, however, remains with the original data providers.",
            "name": "py-datalad"
        },
        {
            "description": "DataLad extension package for working with containerized environments",
            "name": "py-datalad-container"
        },
        {
            "description": "DataLad extension for semantic metadata handling",
            "name": "py-datalad-metalad"
        },
        {
            "description": "Scalable asynchronous hyperparameter optimization, neural architecture\nsearch, and parallel ensemble of predictive models.",
            "name": "py-deephyper"
        },
        {
            "description": "Devito is a Python package to implement optimized stencil computation.\n(e.g., finite differences, image processing, machine learning) from\nhigh-level symbolic problem definitions. Devito builds on SymPy and\nemploys automated code generation and just-in-time compilation to\nexecute optimized computational kernels on several computer platforms,\nincluding CPUs, GPUs, and clusters thereof.",
            "name": "py-devito"
        },
        {
            "description": "dRep is a python program for rapidly comparing large numbers of genomes.\ndRep can also \"de-replicate\" a genome set by identifying groups of\nhighly similar genomes and choosing the best representative genome for\neach genome set.",
            "name": "py-drep"
        },
        {
            "description": "Earth-2 Model Intercomparison Project (MIP). A python framework that\nenables climate researchers and scientists to explore and experiment\nwith AI models for weather and climate.",
            "name": "py-earth2mip"
        },
        {
            "description": "eprosima Fast DDS (formerly Fast RTPS) is a C++ implementation of the\nDDS (Data Distribution Service) standard of the OMG (Object Management\nGroup). eProsima Fast DDS implements the RTPS (Real Time Publish\nSubscribe) protocol, which provides publisher-subscriber communications\nover unreliable transports such as UDP, as defined and maintained by the\nObject Management Group (OMG) consortium. This is the python interface\nfor eprosima Fast DDS.",
            "name": "py-eprosima-fastdds"
        },
        {
            "description": "Fava is a web interface for the double-entry bookkeeping software\nBeancount with a focus on features and usability.",
            "name": "py-fava"
        },
        {
            "description": "Next generation FEniCS Form Compiler",
            "name": "py-fenics-ffcx"
        },
        {
            "description": "The Unified Form Language (UFL) is a domain specific language for\ndeclaration of finite element discretizations of variational forms. More\nprecisely, it defines a flexible interface for choosing finite element\nspaces and defining expressions for weak forms in a notation close to\nmathematical notation.",
            "name": "py-fenics-ufl"
        },
        {
            "description": "The Unified Form Language (UFL) is a domain specific language for\ndeclaration of finite element discretizations of variational forms. More\nprecisely, it defines a flexible interface for choosing finite element\nspaces and defining expressions for weak forms in a notation close to\nmathematical notation.",
            "name": "py-fenics-ufl-legacy"
        },
        {
            "description": "Framework for studying fluid dynamics.",
            "name": "py-fluiddyn"
        },
        {
            "description": "This project is based upon the Fortran parser originally developed by\nPearu Peterson for the F2PY project, www.f2py.com. It provides a parser\nfor Fortran source code (up to and including F2008) implemented purely\nin Python with minimal dependencies.",
            "name": "py-fparser"
        },
        {
            "description": "Free Unified Rendering in Python.",
            "name": "py-fury"
        },
        {
            "description": "Simple Client for Earth Engine Uploads with Selenium Support.",
            "name": "py-geeup"
        },
        {
            "description": "Python bindings and ensemble workflow management for GROMACS. The\nGROMACS C++ API is affected by its package variants. You can specify a\nparticular GROMACS API by making the dependency variant explicit. E.g.\n``spack install gmxapi ^gromacs+mpi~double``",
            "name": "py-gmxapi"
        },
        {
            "description": "Python scripts to find enrichment of GO terms",
            "name": "py-goatools"
        },
        {
            "description": "Graphene Tornado integration.",
            "name": "py-graphene-tornado"
        },
        {
            "description": "inStrain is python program for analysis of co-occurring genome\npopulations from metagenomes that allows highly accurate genome\ncomparisons, analysis of coverage, microdiversity, and linkage, and\nsensitive SNP detection with gene localization and synonymous non-\nsynonymous identification.",
            "name": "py-instrain"
        },
        {
            "description": "Bacis iterative statistics implementation.",
            "name": "py-iterative-stats"
        },
        {
            "description": "JEDI Configuration Builder",
            "name": "py-jcb"
        },
        {
            "description": "Lighning-UQ-Box: A toolbox for uncertainty quantification in deep\nlearning.",
            "name": "py-lightning-uq-box"
        },
        {
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.",
            "name": "py-matplotlib"
        },
        {
            "description": "Test suite for MDAnalysis",
            "name": "py-mdanalysistests"
        },
        {
            "description": "METIS partitioner for mesh and graphMETIS partitioner for mesh and graph",
            "name": "py-mgmetis"
        },
        {
            "description": "Basis Functions and Node Sets for Interpolation",
            "name": "py-modepy"
        },
        {
            "description": "The py-motmetrics library provides a Python implementation of metrics\nfor benchmarking multiple object trackers (MOT).",
            "name": "py-motmetrics"
        },
        {
            "description": "Multi-class imbalance is a common problem occurring in real-world\nsupervised classifications tasks. While there has already been some\nresearch on the specialized methods aiming to tackle that challenging\nproblem, most of them still lack coherent Python implementation that is\nsimple, intuitive and easy to use. multi-imbalance is a python package\ntackling the problem of multi-class imbalanced datasets in machine\nlearnin",
            "name": "py-multi-imbalance"
        },
        {
            "description": "Pytest plugin for testing notebooks.",
            "name": "py-nbmake"
        },
        {
            "description": "Py.test plugin for validating Jupyter notebooks. The plugin adds\nfunctionality to py.test to recognise and collect Jupyter notebooks. The\nintended purpose of the tests is to determine whether execution of the\nstored inputs match the stored outputs of the .ipynb file. Whilst also\nensuring that the notebooks are running without errors.",
            "name": "py-nbval"
        },
        {
            "description": "Access a multitude of neuroimaging data formats",
            "name": "py-nibabel"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "Reference implementation for the MLPerf HPC OpenCatalyst DimeNet++\nbenchmark",
            "name": "py-ocp-models"
        },
        {
            "description": "PennyLane is a Python quantum machine learning library by Xanadu Inc.",
            "name": "py-pennylane"
        },
        {
            "description": "The PennyLane-Lightning-Kokkos plugin provides a fast state-vector\nsimulator with Kokkos kernels.",
            "name": "py-pennylane-lightning-kokkos"
        },
        {
            "description": "A source-to-source Fortran compiler designed to programmatically\noptimise, parallelise and instrument HPC applications (written in\nFortran) via user- provided transformation scripts. Additionally,\nPSyclone supports the development of kernel-based, Fortran-embedded DSLs\nand is used in the UK Met Office's next-generation modelling system,\nLFRic.",
            "name": "py-psyclone"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "PyNucleus is a finite element code that specifically targets nonlocal\noperators.",
            "name": "py-pynucleus"
        },
        {
            "description": "Pyomo is a Python-based open-source software package that supports a\ndiverse set of optimization capabilities for formulating and analyzing\noptimization models.",
            "name": "py-pyomo"
        },
        {
            "description": "Pytest plugin for aiohttp support.",
            "name": "py-pytest-aiohttp"
        },
        {
            "description": "Pytest fixture extending Numpy's allclose function.",
            "name": "py-pytest-allclose"
        },
        {
            "description": "pytest plugin to help with comparing array output from tests",
            "name": "py-pytest-arraydiff"
        },
        {
            "description": "Meta-package containing dependencies for testing.",
            "name": "py-pytest-astropy"
        },
        {
            "description": "pytest plugin to add diagnostic information to the header of the test\noutput.",
            "name": "py-pytest-astropy-header"
        },
        {
            "description": "pytest-asyncio is an Apache2 licensed library, written in Python, for\ntesting asyncio code with pytest.",
            "name": "py-pytest-asyncio"
        },
        {
            "description": "A pytest fixture for benchmarking code.",
            "name": "py-pytest-benchmark"
        },
        {
            "description": "pytest plugin to provide cross-test run caching functionality to plugins\nand test runs.",
            "name": "py-pytest-cache"
        },
        {
            "description": "Pytest plugin for measuring coverage.",
            "name": "py-pytest-cov"
        },
        {
            "description": "Use pytest runner to discover and execute C++ tests.",
            "name": "py-pytest-cpp"
        },
        {
            "description": "Pytest plugin for manipulating test data directories and files.",
            "name": "py-pytest-datadir"
        },
        {
            "description": "Pytest plugin with advanced doctest features.",
            "name": "py-pytest-doctestplus"
        },
        {
            "description": "Fail tests that take too long to run.",
            "name": "py-pytest-fail-slow"
        },
        {
            "description": "Pytest plugin for filtering based on sub-packages.",
            "name": "py-pytest-filter-subpackage"
        },
        {
            "description": "pytest plugin to check FLAKE8 requirements.",
            "name": "py-pytest-flake8"
        },
        {
            "description": "py.test plugin for efficiently checking python source with pyflakes.",
            "name": "py-pytest-flakes"
        },
        {
            "description": "Run tests in isolated forked subprocesses.",
            "name": "py-pytest-forked"
        },
        {
            "description": "pytest-html is a plugin for pytest that generates a HTML report for test\nresults",
            "name": "py-pytest-html"
        },
        {
            "description": "py.test plugin to check import ordering using isort",
            "name": "py-pytest-isort"
        },
        {
            "description": "It helps to use fixtures in pytest.mark.parametrize.",
            "name": "py-pytest-lazy-fixture"
        },
        {
            "description": "pytest plugin for test session metadata",
            "name": "py-pytest-metadata"
        },
        {
            "description": "Thin-wrapper around the mock package for easier use with py.test",
            "name": "py-pytest-mock"
        },
        {
            "description": "Pytest plugin to collect information from tests.",
            "name": "py-pytest-mpi"
        },
        {
            "description": "Mypy static type checker plugin for Pytest.",
            "name": "py-pytest-mypy"
        },
        {
            "description": "A plugin for the pytest framework that allows developers to detect\nwhether any file handles or other file-like objects were inadvertently\nleft open at the end of a unit test",
            "name": "py-pytest-openfiles"
        },
        {
            "description": "A pytest plugin for parallel and concurrent testing.",
            "name": "py-pytest-parallel"
        },
        {
            "description": "pytest plugin for efficiently checking PEP8 compliance",
            "name": "py-pytest-pep8"
        },
        {
            "description": "Run pylint with pytest and have configurable rule types (i.e.\nConvention, Warn, and Error) fail the build. You can also specify a\npylintrc file.",
            "name": "py-pytest-pylint"
        },
        {
            "description": "A pytest plugin that allows programmers to write tests for PySide,\nPySide2 and PyQt applications.",
            "name": "py-pytest-qt"
        },
        {
            "description": "Randomise the order in which pytest tests are run.",
            "name": "py-pytest-random-order"
        },
        {
            "description": "pytest plugin for snapshot regression testing.",
            "name": "py-pytest-regtest"
        },
        {
            "description": "Pytest plugin for controlling remote data access.",
            "name": "py-pytest-remotedata"
        },
        {
            "description": "A plugin to fake subprocess for pytest.",
            "name": "py-pytest-subprocess"
        },
        {
            "description": "A plugin which will terminate tests after a certain timeout, assuming\nthe test session isn't being debugged.",
            "name": "py-pytest-timeout"
        },
        {
            "description": "A workflow-system agnostic testing framework that aims to make\npipeline/workflow testing easy by using YAML files for the test\nconfiguration.",
            "name": "py-pytest-workflow"
        },
        {
            "description": "py.test xdist plugin for distributed testing and loop-on-failing mode",
            "name": "py-pytest-xdist"
        },
        {
            "description": "rpy2 is a redesign and rewrite of rpy. It is providing a low-level\ninterface to R from Python, a proposed high-level interface, including\nwrappers to graphical libraries, as well as R-like structures and\nfunctions.",
            "name": "py-rpy2"
        },
        {
            "description": "scikit-build-core is a doubly improved build system generator for\nCPython C/C++/Fortran/Cython extensions. It features several\nimprovements over the classic scikit-build build system generator.",
            "name": "py-scikit-build-core"
        },
        {
            "description": "Odes is a scikit toolkit for scipy to add extra ode solvers.\nSpecifically it interfaces the Sundials solvers cvode, cvodes, ida and\nidas. It this way it provides extra modern ode and dae solvers you can\nuse, extending the capabilities offered in scipy.integrade.ode.",
            "name": "py-scikits-odes"
        },
        {
            "description": "Fundamental algorithms for scientific computing in Python.",
            "name": "py-scipy"
        },
        {
            "description": "A Python class for scheduling SLURM jobs",
            "name": "py-slurm-pipeline"
        },
        {
            "description": "Statistical computations and models for use with SciPy",
            "name": "py-statsmodels"
        },
        {
            "description": "With Testinfra you can write unit tests in Python to test actual state\nof your servers configured by management tools like Salt, Ansible,\nPuppet, Chef and so on.",
            "name": "py-testinfra"
        },
        {
            "description": "A collection of open source benchmarks used to evaluate PyTorch\nperformance.",
            "name": "py-torchbenchmark"
        },
        {
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data.",
            "name": "py-torchgeo"
        },
        {
            "description": "Xarray extension for unstructured climate and global weather data\nanalysis and visualization",
            "name": "py-uxarray"
        },
        {
            "description": "WAVES (LANL code C23004) is a computational science and engineering\nworkflow tool that integrates parametric studies with traditional\nsoftware build systems.",
            "name": "py-waves"
        },
        {
            "description": "Bioinformatics tools and a software library developed by the Oxford\nNanopore Technologies Applications group.",
            "name": "py-wub"
        },
        {
            "description": "Common set of tools used in weather workflows. See\nhttps://wxflow.readthedocs.io/en/latest/ for documentation.",
            "name": "py-wxflow"
        },
        {
            "description": "VOTCA is a software package which focuses on the analysis of molecular\ndynamics data, the development of systematic coarse-graining techniques\nas well as methods used for simulating microscopic charge (and exciton)\ntransport in disordered semiconductors.",
            "name": "votca"
        }
    ],
    "description": "pytest: simple powerful testing with Python.\n",
    "homepage": "https://pytest.org/",
    "latest_version": "8.2.1",
    "maintainers": [
        "adamjstewart"
    ],
    "name": "py-pytest",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "8.2.1",
            "sha256": "5046e5b46d8e4cac199c373041f26be56fdb81eb4e67dc11d4e10811fc3408fd"
        },
        {
            "name": "8.0.0",
            "sha256": "249b1b0864530ba251b7438274c4d251c58d868edaaec8762893ad4a0d71c36c"
        },
        {
            "name": "7.4.4",
            "sha256": "2cf0005922c6ace4a3e2ec8b4080eb0d9753fdc93107415332f50ce9e7994280"
        },
        {
            "name": "7.3.2",
            "sha256": "ee990a3cc55ba808b80795a79944756f315c67c12b56abd3ac993a7b8c17030b"
        },
        {
            "name": "7.2.1",
            "sha256": "d45e0952f3727241918b8fd0f376f5ff6b301cc0777c6f9a556935c92d8a7d42"
        },
        {
            "name": "7.1.3",
            "sha256": "4f365fec2dff9c1162f834d9f18af1ba13062db0c708bf7b946f8a5c76180c39"
        },
        {
            "name": "6.2.5",
            "sha256": "131b36680866a76e6781d13f101efb86cf674ebb9762eb70d3082b6f29889e89"
        },
        {
            "name": "6.2.4",
            "sha256": "50bcad0a0b9c5a72c8e4e7c9855a3ad496ca6a881a3641b4260605450772c54b"
        },
        {
            "name": "6.2.2",
            "sha256": "9d1edf9e7d0b84d72ea3dbcdfd22b35fb543a5e8f2a60092dd578936bf63d7f9"
        },
        {
            "name": "6.2.1",
            "sha256": "66e419b1899bc27346cb2c993e12c5e5e8daba9073c1fbce33b9807abc95c306"
        },
        {
            "name": "6.1.1",
            "sha256": "8f593023c1a0f916110285b6efd7f99db07d59546e3d8c36fc60e2ab05d3be92"
        },
        {
            "name": "5.3.4",
            "sha256": "1d122e8be54d1a709e56f82e2d85dcba3018313d64647f38a91aec88c239b600"
        },
        {
            "name": "5.2.1",
            "sha256": "ca563435f4941d0cb34767301c27bc65c510cb82e90b9ecf9cb52dc2c63caaa0"
        },
        {
            "name": "5.1.1",
            "sha256": "c3d5020755f70c82eceda3feaf556af9a341334414a8eca521a18f463bcead88"
        },
        {
            "name": "4.6.9",
            "sha256": "19e8f75eac01dd3f211edd465b39efbcbdc8fc5f7866d7dd49fedb30d8adf339"
        },
        {
            "name": "4.6.5",
            "sha256": "8fc39199bdda3d9d025d3b1f4eb99a192c20828030ea7c9a0d2840721de7d347"
        },
        {
            "name": "4.6.2",
            "sha256": "bea27a646a3d74cbbcf8d3d4a06b2dfc336baf3dc2cc85cf70ad0157e73e8322"
        },
        {
            "name": "4.4.0",
            "sha256": "f21d2f1fb8200830dcbb5d8ec466a9c9120e20d8b53c7585d180125cce1d297a"
        },
        {
            "name": "4.3.0",
            "sha256": "067a1d4bf827ffdd56ad21bd46674703fce77c5957f6c1eef731f6146bfcef1c"
        },
        {
            "name": "3.7.2",
            "sha256": "3459a123ad5532852d36f6f4501dfe1acf4af1dd9541834a164666aa40395b02"
        },
        {
            "name": "3.7.1",
            "sha256": "86a8dbf407e437351cef4dba46736e9c5a6e3c3ac71b2e942209748e76ff2086"
        },
        {
            "name": "3.5.1",
            "sha256": "54713b26c97538db6ff0703a12b19aeaeb60b5e599de542e7fca0ec83b9038e8"
        },
        {
            "name": "3.0.7",
            "sha256": "b70696ebd1a5e6b627e7e3ac1365a4bc60aaf3495e843c1e70448966c5224cab"
        },
        {
            "name": "3.0.2",
            "sha256": "64d8937626dd2a4bc15ef0edd307d26636a72a3f3f9664c424d78e40efb1e339"
        }
    ],
    "versions_deprecated": []
}