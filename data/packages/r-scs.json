{
    "aliases": [],
    "build_system": "RPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "R is 'GNU S', a freely available language and environment for\nstatistical computing and graphics which provides a wide variety of\nstatistical and graphical techniques: linear and nonlinear modelling,\nstatistical tests, time series analysis, classification, clustering,\netc. Please consult the R project homepage for further information.",
            "name": "r"
        }
    ],
    "dependent_to": [
        {
            "description": "Disciplined Convex Optimization. An object-oriented modeling language\nfor disciplined convex programming (DCP) as described in Fu, Narasimhan,\nand Boyd (2020, <doi:10.18637/jss.v094.i14>). It allows the user to\nformulate convex optimization problems in a natural way following\nmathematical convention and DCP rules. The system analyzes the problem,\nverifies its convexity, converts it into a canonical form, and hands it\noff to an appropriate solver to obtain the solution. Interfaces to\nsolvers on CRAN and elsewhere are provided, both commercial and open\nsource.",
            "name": "r-cvxr"
        }
    ],
    "description": "Splitting Conic Solver. Solves convex cone programs via operator\nsplitting. Can solve: linear programs ('LPs'), second-order cone\nprograms ('SOCPs'), semidefinite programs ('SDPs'), exponential cone\nprograms ('ECPs'), and power cone programs ('PCPs'), or problems with\nany combination of those cones. 'SCS' uses 'AMD' (a set of routines for\npermuting sparse matrices prior to factorization) and 'LDL' (a sparse\n'LDL' factorization and solve package) from 'SuiteSparse'\n(<https://people.engr.tamu.edu/davis/suitesparse.html>).\n",
    "homepage": "https://cloud.r-project.org/package=scs",
    "latest_version": "3.2.4",
    "maintainers": [],
    "name": "r-scs",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "3.2.4",
            "sha256": "c3f39874bf4532fa8c2f2e2c41533ba4fe20b61cf6dfc6314407dc981621298f"
        },
        {
            "name": "3.0-1",
            "sha256": "d6881eeec7282f8bfbf60847327786e7f90299e4b8c0b084d8bd11fec7705913"
        }
    ],
    "versions_deprecated": []
}