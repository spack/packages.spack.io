{
    "aliases": [],
    "build_system": "Package",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The Python programming language.",
            "name": "python"
        }
    ],
    "dependent_to": [
        {
            "description": "The Adaptable Input Output System version 2, developed in the Exascale\nComputing Program",
            "name": "adios2"
        },
        {
            "description": "Akantu means a little element in Kinyarwanda, a Bantu language. From\nnow on it is also an opensource object-oriented Finite Element library\nwhich has the ambition to be generic and efficient.",
            "name": "akantu"
        },
        {
            "description": "The ALPS project (Algorithms and Libraries for Physics Simulations)\naims at providing generic parallel algorithms for classical and quantum\nlattice models and provides utility classes and algorithm for many\nothers.",
            "name": "alps"
        },
        {
            "description": "ANTLR (ANother Tool for Language Recognition) is a powerful parser\ngenerator for reading, processing, executing, or translating structured\ntext or binary files. It's widely used to build languages, tools, and\nframeworks. From a grammar, ANTLR generates a parser that can build and\nwalk parse trees.",
            "name": "antlr"
        },
        {
            "description": "APFEL is a library able to perform DGLAP evolution up to NNLO in QCD and\nto NLO in QED, both with pole and MSbar masses. The coupled DGLAP\nQCD+QED evolution equations are solved in x-space by means of higher\norder interpolations and Runge-Kutta techniques.",
            "name": "apfel"
        },
        {
            "description": "Arbor is a high-performance library for computational neuroscience\nsimulations.",
            "name": "arbor"
        },
        {
            "description": "Ascent is an open source many-core capable lightweight in situ\nvisualization and analysis infrastructure for multi-physics HPC\nsimulations.",
            "name": "ascent"
        },
        {
            "description": "A presentable text document format for writing articles, UNIX man pages\nand other small to medium sized documents.",
            "name": "asciidoc"
        },
        {
            "description": "AWS ParallelCluster is an AWS supported Open Source cluster management\ntool to deploy and manage HPC clusters in the AWS cloud.",
            "name": "aws-parallelcluster"
        },
        {
            "description": "This package provides a unified command line interface to Amazon Web\nServices",
            "name": "awscli"
        },
        {
            "description": "This package provides a unified command line interface to Amazon Web\nServices.",
            "name": "awscli-v2"
        },
        {
            "description": "BART: Toolbox for Computational Magnetic Resonance Imaging",
            "name": "bart"
        },
        {
            "description": "Blackhat MC generator",
            "name": "blackhat"
        },
        {
            "description": "Library for automatic acceleration of array operations",
            "name": "bohrium"
        },
        {
            "description": "Bueno: Well-Provenanced Benchmarking",
            "name": "bueno"
        },
        {
            "description": "The NOAA bufr library contains subroutines, functions and other\nutilities that can be used to read (decode) and write (encode) data in\nBUFR, which is a WMO standard format for the exchange of meteorological\ndata. This is part of the NCEPLIBS project. The library also includes a\nPython interface.",
            "name": "bufr"
        },
        {
            "description": "The NOAA bufr-query Library can be used to read NCEP and WMO formated\nBUFR files using a simple interface that does not require the user to\nknow the details of the BUFR format. Detailed documentation for the BUFR\nLibrary can be found at https://bufr-\nquery.readthedocs.io/en/latest/index.html",
            "name": "bufr-query"
        },
        {
            "description": "Bulker: multi-container environment manager",
            "name": "bulker"
        },
        {
            "description": "This is a maintained fork of the excellent bumpversion project.",
            "name": "bump2version"
        },
        {
            "description": "Version-bump your software with a single command.",
            "name": "bumpversion"
        },
        {
            "description": "Assesses genome assembly and annotation completeness with Benchmarking\nUniversal Single-Copy Orthologs",
            "name": "busco"
        },
        {
            "description": "Caffe is a deep learning framework made with expression, speed, and\nmodularity in mind. It is developed by the Berkeley Vision and Learning\nCenter (BVLC) and by community contributors.",
            "name": "caffe"
        },
        {
            "description": "CallFlow is an interactive visual analysis tool that provides a high-\nlevel overview of CCTs together with semantic refinement operations to\nprogressively explore the CCTs.",
            "name": "callflow"
        },
        {
            "description": "Cantera is a suite of object-oriented software tools for problems\ninvolving chemical kinetics, thermodynamics, and/or transport processes.",
            "name": "cantera"
        },
        {
            "description": "A generalist algorithm for cell and nucleus segmentation that can be\noptimized for your own data",
            "name": "cellpose"
        },
        {
            "description": "Cmake package retrieval.",
            "name": "cget"
        },
        {
            "description": "Chapel is a modern programming language that is parallel, productive,\nportable, scalable and open-source. The Chapel package comes with many\noptions in the form of variants, most of which can be left unset to\nallow Chapel's built-in scripts to determine the proper values based on\nthe environment.",
            "name": "chapel"
        },
        {
            "description": "Clingo: A grounder and solver for logic programs Clingo is part of the\nPotassco project for Answer Set Programming (ASP). ASP offers a simple\nand powerful modeling language to describe combinatorial problems as\nlogic programs. The clingo system then takes such a logic program and\ncomputes answer sets representing solutions to the given problem.",
            "name": "clingo"
        },
        {
            "description": "Clingo with some options used for bootstrapping",
            "name": "clingo-bootstrap"
        },
        {
            "description": "Climate Model Output Rewriter is used to produce CF-compliant netCDF\nfiles. The structure of the files created by the library and the\nmetadata they contain fulfill the requirements of many of the climate\ncommunity's standard model experiments.",
            "name": "cmor"
        },
        {
            "description": "CODAR Cheetah: The CODAR Experiment Harness for Exascale science\napplications.",
            "name": "codar-cheetah"
        },
        {
            "description": "Conduit is an open source project from Lawrence Livermore National\nLaboratory that provides an intuitive model for describing hierarchical\nscientific data in C++, C, Fortran, and Python. It is used for data\ncoupling between packages in-core, serialization, and I/O tasks.",
            "name": "conduit"
        },
        {
            "description": "CosmoMC is a Fortran 2008 Markov-Chain Monte-Carlo (MCMC) engine for\nexploring cosmological parameter space, together with Fortran and python\ncode for analysing Monte-Carlo samples and importance sampling (plus a\nsuite of scripts for building grids of runs, plotting and presenting\nresults).",
            "name": "cosmomc"
        },
        {
            "description": "CPAT is an alignment-free method to predict RNA coding potential using\nfour sequence features",
            "name": "cpat"
        },
        {
            "description": "A tool for static C/C++ code analysis.",
            "name": "cppcheck"
        },
        {
            "description": "Cram runs many small MPI jobs inside one large MPI job.",
            "name": "cram"
        },
        {
            "description": "CryoDRGN is a neural network based algorithm for heterogeneous cryo-EM\nreconstruction. In particular, the method models a continuous\ndistribution over 3D structures by using a neural network based\nrepresentation for the volume",
            "name": "cryodrgn"
        },
        {
            "description": "Damaris is a middleware for I/O and in situ analytics targeting large-\nscale, MPI-based HPC simulations.",
            "name": "damaris"
        },
        {
            "description": "DD4hep is a software framework for providing a complete solution for\nfull detector description (geometry, materials, visualization, readout,\nalignment, calibration, etc.) for the full experiment life cycle\n(detector concept development, detector optimization, construction,\noperation). It offers a consistent description through a single source\nof detector information for simulation, reconstruction, analysis, etc.\nIt distributed under the LGPLv3 License.",
            "name": "dd4hep"
        },
        {
            "description": "DFTB+ is an implementation of the Density Functional based Tight Binding\n(DFTB) method, containing many extensions to the original method.",
            "name": "dftbplus"
        },
        {
            "description": "Generally Applicable Atomic-Charge Dependent London Dispersion\nCorrection",
            "name": "dftd4"
        },
        {
            "description": "Drishti is a command-line tool to guide end-users in optimizing I/O in\ntheir applications by detecting typical I/O performance pitfalls and\nproviding a set of recommendations.",
            "name": "drishti"
        },
        {
            "description": "DSQSS is a program package for solving quantum many-body problems\ndefined on lattices. It is based on the quantum Monte Carlo method in\nFeynman's path integral representation.",
            "name": "dsqss"
        },
        {
            "description": "DuckDB is an in-process SQL OLAP Database Management System.",
            "name": "duckdb"
        },
        {
            "description": "DXT Explorer is an interactive web-based log analysis tool to visualize\nDarshan DXT logs and help understand the I/O behavior of applications.",
            "name": "dxt-explorer"
        },
        {
            "description": "Container file creator, facilitating the generation of Dockerfiles and\nSingularity definition files infused with OS packages, spack packages\nand custom commands",
            "name": "e4s-alc"
        },
        {
            "description": "Container Launcher for E4S containers, facilitating MPI library\ntranslations",
            "name": "e4s-cl"
        },
        {
            "description": "easi is a library for the Easy Initialization of models in three (or\nless or more) dimensional domains.",
            "name": "easi"
        },
        {
            "description": "EasyBuild is a software build and installation framework for\n(scientific) software on HPC systems.",
            "name": "easybuild"
        },
        {
            "description": "ecFlow is a work flow package that enables users to run a large number\nof programs (with dependencies on each other and on time) in a\ncontrolled environment. It provides tolerance for hardware and software\nfailures, combined with good restart capabilities.",
            "name": "ecflow"
        },
        {
            "description": "Event data model of Key4hep.",
            "name": "edm4hep"
        },
        {
            "description": "EMBLmyGFF3 converts an assembly in FASTA format along with associated\nannotation in GFF3 format into the EMBL flat file format which is the\nrequired format for submitting annotated assemblies to ENA.",
            "name": "emblmygff3"
        },
        {
            "description": "The Earth System Modeling Framework (ESMF) is high-performance, flexible\nsoftware infrastructure for building and coupling weather, climate, and\nrelated Earth science applications. The ESMF defines an architecture for\ncomposing complex, coupled modeling systems and includes data structures\nand utilities for developing individual models. The National Unified\nOperational Prediction Capability (NUOPC) Layer defines a common model\narchitecture to support interoperable ESMF components. The NUOPC Layer\nis included with the ESMF package.",
            "name": "esmf"
        },
        {
            "description": "ExaGO is a package for solving large-scale power grid optimization\nproblems on parallel and distributed architectures, particularly\ntargeted for exascale machines.",
            "name": "exago"
        },
        {
            "description": "Faiss is a library for efficient similarity search and clustering of\ndense vectors. Faiss contains algorithms that search in sets of vectors\nof any size, up to ones that possibly do not fit in RAM. It also\ncontains supporting code for evaluation and parameter tuning. Faiss is\nwritten in C++ with complete wrappers for Python/numpy. Some of the most\nuseful algorithms are implemented on the GPU. It is developed by\nFacebook AI Research.",
            "name": "faiss"
        },
        {
            "description": "Falcon: a set of tools for fast aligning long reads for consensus and\nassembly. The Falcon tool kit is a set of simple code collection which I\nuse for studying efficient assembly algorithm for haploid and diploid\ngenomes. It has some back-end code implemented in C for speed and some\nsimple front-end written in Python for convenience.",
            "name": "falcon"
        },
        {
            "description": "FEniCS is organized as a collection of interoperable components that\ntogether form the FEniCS Project. These components include the problem-\nsolving environment DOLFIN, the form compiler FFC, the finite element\ntabulator FIAT, the just-in-time compiler Instant / Dijitso, the code\ngeneration interface UFC, the form language UFL and a range of\nadditional components.",
            "name": "fenics"
        },
        {
            "description": "FLANN is a library for performing fast approximate nearest neighbor\nsearches in high dimensional spaces. It contains a collection of\nalgorithms we found to work best for nearest neighbor search and a\nsystem for automatically choosing the best algorithm and optimum\nparameters depending on the dataset. FLANN is written in C++ and\ncontains bindings for the following languages: C, MATLAB and Python.",
            "name": "flann"
        },
        {
            "description": "Memory Efficient Serialization Library",
            "name": "flatbuffers"
        },
        {
            "description": "Python bindings for the flux resource manager API",
            "name": "flux-python"
        },
        {
            "description": "The FPLO(R) package is a full-potential local-orbital code to solve the\nKohn-Sham equations on a regular lattice or with free boundary\nconditions (finite systems). Relativistic effects are treated either in\na scalar-relativistic or a full 4-component formalism. Available\nfunctionals are LSDA, GGA (PBE 96) and LSDA/GGA+U. Orbital polarization\ncorrection can be applied.",
            "name": "fplo"
        },
        {
            "description": "Fusion-IO is a library providing common interface (C++, C, Fortran,\nPython) to data from various fusion simulation codes. It supported\nreading data from M3D-C1, GPEC, MARS, GATO outputs and GEQDSK files.",
            "name": "fusion-io"
        },
        {
            "description": "Python tools for GATE, see https://github.com/OpenGATE/Gate",
            "name": "gatetools"
        },
        {
            "description": "GDAL: Geospatial Data Abstraction Library. GDAL is a translator library\nfor raster and vector geospatial data formats that is released under an\nMIT style Open Source License by the Open Source Geospatial Foundation.\nAs a library, it presents a single raster abstract data model and single\nvector abstract data model to the calling application for all supported\nformats. It also comes with a variety of useful command line utilities\nfor data translation and processing.",
            "name": "gdal"
        },
        {
            "description": "A free and open-source IDL/PV-WAVE compiler. GNU Data Language (GDL) is\na free/libre/open source incremental compiler compatible with IDL and to\nsome extent with PV-WAVE.",
            "name": "gdl"
        },
        {
            "description": "Geant4 is a toolkit for the simulation of the passage of particles\nthrough matter. Its areas of application include high energy, nuclear\nand accelerator physics, as well as studies in medical and space\nscience.",
            "name": "geant4"
        },
        {
            "description": "GenGeo is a library of tools for creating complex particle geometries\nfor use in ESyS-Particle simulations. GenGeo is a standalone application\nwith a Python API that creates geometry files suitable for importing\ninto ESyS-Particle simulations. The functionality of GenGeo far exceeds\nthe in-simulation geometry creation utilities provided by ESyS-Particle\nitself.",
            "name": "gengeo"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Runtime is designed to\nenhance energy efficiency of applications through active hardware\nconfiguration.",
            "name": "geopm-runtime"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Service provides a user\ninterface for accessing hardware telemetry and settings securely. Note:\nGEOPM interfaces with hardware using Model Specific Registers (MSRs).\nFor proper usage make sure MSRs are made available via the msr or msr-\nsafe kernel modules by your administrator.",
            "name": "geopm-service"
        },
        {
            "description": "Organelle Genome Assembly Toolkit (Chloroplast/Mitocondrial/ITS)",
            "name": "getorganelle"
        },
        {
            "description": "CLI for gfal2.",
            "name": "gfal2-util"
        },
        {
            "description": "GLib provides the core application building blocks for libraries and\napplications written in C. The GLib package contains a low-level\nlibraries useful for providing data structure handling for C,\nportability wrappers and interfaces for such runtime functionality as an\nevent loop, threads, dynamic loading and an object system.",
            "name": "glib"
        },
        {
            "description": "GNU Radio is a free & open-source software development toolkit that\nprovides signal processing blocks to implement software radios. It can\nbe used with readily-available, low-cost external RF hardware to create\nsoftware-defined radios, or without hardware in a simulation-like\nenvironment. It is widely used in hobbyist, academic, and commercial\nenvironments to support both wireless communications research and real-\nworld radio systems.",
            "name": "gnuradio"
        },
        {
            "description": "The Gurobi Optimizer was designed from the ground up to be the fastest,\nmost powerful solver available for your LP, QP, QCP, and MIP (MILP,\nMIQP, and MIQCP) problems.",
            "name": "gurobi"
        },
        {
            "description": "Halide is a programming language designed to make it easier to write\nhigh-performance image and array processing code on modern machines.",
            "name": "halide"
        },
        {
            "description": "A Unified Release of the FTOOLS and XANADU Software Packages. XANADU:\nHigh-level, multi-mission tasks for X-ray astronomical spectral, timing,\nand imaging data analysis. FTOOLS: General and mission-specific tools to\nmanipulate FITS files. FITSIO: Core library responsible for reading and\nwriting FITS files. fv: General FITS file browser/editor/plotter with a\ngraphical user interface. XSTAR: Tool for calculating the physical\nconditions and emission spectra of photoionized gases",
            "name": "heasoft"
        },
        {
            "description": "Highly Efficient FFT for Exascale",
            "name": "heffte"
        },
        {
            "description": "HELICS is a general-purpose, modular, highly-scalable co-simulation\nframework that runs cross-platform (Linux, Windows, and Mac OS X) and\nsupports both event driven and time series simulation.",
            "name": "helics"
        },
        {
            "description": "Cooperative multitasking for in situ processing.",
            "name": "henson"
        },
        {
            "description": "The HepMC package is an object oriented, C++ event record for High\nEnergy Physics Monte Carlo generators and simulation.",
            "name": "hepmc3"
        },
        {
            "description": "hipBLASLt is a library that provides general matrix-matrix operations\nwith a flexible API and extends functionalities beyond a traditional\nBLAS library",
            "name": "hipblaslt"
        },
        {
            "description": "HOOMD-blue is a general-purpose particle simulation toolkit. It scales\nfrom a single CPU core to thousands of GPUs. You define particle initial\nconditions and interactions in a high-level python script. Then tell\nHOOMD-blue how you want to execute the job and it takes care of the\nrest. Python job scripts give you unlimited flexibility to create custom\ninitialization routines, control simulation parameters, and perform in\nsitu analysis.",
            "name": "hoomd-blue"
        },
        {
            "description": "BEE is a workflow orchestration system designed to build containerized\nHPC applications and orchestrate workflows across HPC and cloud systems.\nBEE has adopted the Common Workflow Language (CWL) for specifying\nworkflows. Complex scientific workflows specified by CWL are managed and\nvisualized through a graph database, giving the user the ability to\nmonitor the state of each task in the workflow. BEE runs jobs using the\nworkload scheduler (i.e. Slurm or Flux) on the HPC system that tasks are\nspecified to run on.",
            "name": "hpc-beeflow"
        },
        {
            "description": "Modern, user-friendly command-line HTTP client for the API era.",
            "name": "httpie"
        },
        {
            "description": "HybPiper was designed for targeted sequence capture, in which DNA\nsequencing libraries are enriched for gene regions of interest,\nespecially for phylogenetics. HybPiper is a suite of Python scripts that\nwrap and connect bioinformatics tools in order to extract target\nsequences from high-throughput DNA sequencing reads",
            "name": "hybpiper"
        },
        {
            "description": "The Data Broker (DBR) is a distributed, in-memory container of key-value\nstores enabling applications in a workflow to exchange data through one\nor more shared namespaces. Thanks to a small set of primitives,\napplications in a workflow deployed in a (possibly) shared nothing\ndistributed cluster, can easily share and exchange data and messages\nwith applications.",
            "name": "ibm-databroker"
        },
        {
            "description": "Misc. reusable utilities used by IceBin.",
            "name": "ibmisc"
        },
        {
            "description": "A data templating language for app and tool developers based on JSON",
            "name": "jsonnet"
        },
        {
            "description": "The Juelich benchmarking environment (JUBE) provides a script based\nframework to easily create benchmark sets, run those sets on different\ncomputer systems and evaluate the results.",
            "name": "jube"
        },
        {
            "description": "khmer is a software library and toolkit for k-mer based analysis and\ntransformation of nucleotide sequence data",
            "name": "khmer"
        },
        {
            "description": "KiCad is an open source software suite for Electronic Design Automation\n(EDA). The programs handle Schematic Capture, and PCB Layout with Gerber\noutput.",
            "name": "kicad"
        },
        {
            "description": "LAMMPS stands for Large-scale Atomic/Molecular Massively Parallel\nSimulator.",
            "name": "lammps"
        },
        {
            "description": "LBANN: Livermore Big Artificial Neural Network Toolkit. A distributed\nmemory, HPC-optimized, model and data parallel training toolkit for deep\nneural networks.",
            "name": "lbann"
        },
        {
            "description": "ldsc is a command line tool for estimating heritability and genetic\ncorrelation from GWAS summary statistics. ldsc also computes LD scores",
            "name": "ldsc"
        },
        {
            "description": "LHAPDF is a general purpose C++ interpolator, used for evaluating PDFs\nfrom discretised data files.",
            "name": "lhapdf"
        },
        {
            "description": "The goal of this project is to provide a tiny library that would\nfacilitate the common operations with sizes in bytes.",
            "name": "libbytesize"
        },
        {
            "description": "Libcap-ng is a library that makes using posix capabilities easier",
            "name": "libcap-ng"
        },
        {
            "description": "Reference implementation of OGC KML 2.2.",
            "name": "libkml"
        },
        {
            "description": "A generic abstraction for the compression of dense tensors",
            "name": "libpressio"
        },
        {
            "description": "libproxy is a library that provides automatic proxy configuration\nmanagement.",
            "name": "libproxy"
        },
        {
            "description": "The main libseccomp repository",
            "name": "libseccomp"
        },
        {
            "description": "Libxml2 is the XML C parser and toolkit developed for the Gnome project\n(but usable outside of the Gnome platform), it is free software\navailable under the MIT License.",
            "name": "libxml2"
        },
        {
            "description": "Libxslt is the XSLT C library developed for the GNOME project. XSLT\nitself is a an XML language to define transformation for XML. Libxslt is\nbased on libxml2 the XML C library developed for the GNOME project. It\nalso implements most of the EXSLT set of processor-portable extensions\nfunctions and some of Saxon's evaluate and expressions extensions.",
            "name": "libxslt"
        },
        {
            "description": "Liftoff is a tool that accurately maps annotations in GFF or GTF between\nassemblies of the same, or closely-related species.",
            "name": "liftoff"
        },
        {
            "description": "The LLVM Project is a collection of modular and reusable compiler and\ntoolchain technologies. Despite its name, LLVM has little to do with\ntraditional virtual machines, though it does provide helpful libraries\nthat can be used to build them. The name \"LLVM\" itself is not an\nacronym; it is the full name of the project.",
            "name": "llvm"
        },
        {
            "description": "This package provides a collection of the experimental LLVM projects\ndone by the US DOE research and development teams.",
            "name": "llvm-doe"
        },
        {
            "description": "MapServer is an Open Source geographic data rendering engine written in\nC. Beyond browsing GIS data, MapServer allows you create \"geographic\nimage maps\", that is, maps that can direct users to content",
            "name": "mapserver"
        },
        {
            "description": "mdb is a command line debugger aimed at parallel programs using the MPI\nprogramming paradigm.",
            "name": "mdb"
        },
        {
            "description": "MemSurfer is a tool to compute and analyze membrane surfaces found in a\nwide variety of large-scale molecular simulations.",
            "name": "memsurfer"
        },
        {
            "description": "Tool to manage (m)ultiple git r(epo)sitories",
            "name": "mepo"
        },
        {
            "description": "Mercurial is a free, distributed source control management tool.",
            "name": "mercurial"
        },
        {
            "description": "Meson is a portable open source build system meant to be both extremely\nfast, and as user friendly as possible.",
            "name": "meson"
        },
        {
            "description": "The MFrontGenericInterfaceSupport project (MGIS) provides helper\nfunctions for various solvers to interact with behaviour written using\nMFront generic interface. MGIS is written in C++. Bindings are provided\nfor C and fortran (2003). A FEniCS binding is also available.",
            "name": "mgis"
        },
        {
            "description": "Minimap2 is a versatile sequence alignment program that aligns DNA or\nmRNA sequences against a large reference database. Mappy provides a\nconvenient interface to minimap2.",
            "name": "minimap2"
        },
        {
            "description": "MXNet is a deep learning framework designed for both efficiency and\nflexibility.",
            "name": "mxnet"
        },
        {
            "description": "Wavelet and simulated Annealing SliP inversion (WASP). This code uses a\nnonlinear simulated annealing inversion method to model slip amplitude,\nrake, rupture time, and rise time on a discretized fault plane, finding\nthe solution that best fits the observations in the wavelet domain.",
            "name": "neic-finitefault"
        },
        {
            "description": "Nektar++: Spectral/hp Element Framework",
            "name": "nektar"
        },
        {
            "description": "NEST is a simulator for spiking neural network models It focuses on the\ndynamics, size and structure of neural systems rather than on the exact\nmorphology of individual neurons.",
            "name": "nest"
        },
        {
            "description": "A python package with helper tools for the nf-core community.",
            "name": "nf-core-tools"
        },
        {
            "description": "A Python wrapper for the Seqera Platform CLI (formerly Tower CLI).",
            "name": "nf-seqerakit"
        },
        {
            "description": "NLopt is a free/open-source library for nonlinear optimization,\nproviding a common interface for a number of different free optimization\nroutines available online as well as original implementations of various\nother algorithms.",
            "name": "nlopt"
        },
        {
            "description": "Node Resource Manager",
            "name": "nrm"
        },
        {
            "description": "Python code annotation library",
            "name": "nvtx"
        },
        {
            "description": "Application Profiling, Tracing, and Analysis",
            "name": "omnitrace"
        },
        {
            "description": "Open3D: A Modern Library for 3D Data Processing.",
            "name": "open3d"
        },
        {
            "description": "Open Babel is a chemical toolbox designed to speak the many languages of\nchemical data. It's an open, collaborative project allowing anyone to\nsearch, convert, analyze, or store data from molecular modeling,\nchemistry, solid-state materials, biochemistry, or related areas.",
            "name": "openbabel"
        },
        {
            "description": "OpenColorIO (OCIO) is a complete color management solution geared\ntowards motion picture production with an emphasis on visual effects and\ncomputer animation.",
            "name": "opencolorio"
        },
        {
            "description": "OpenCV (Open Source Computer Vision Library) is an open source computer\nvision and machine learning software library.",
            "name": "opencv"
        },
        {
            "description": "OpenFst is a library for constructing, combining, optimizing, and\nsearching weighted finite-state transducers (FSTs). Weighted finite-\nstate transducers are automata where each transition has an input label,\nan output label, and a weight.",
            "name": "openfst"
        },
        {
            "description": "Reading, writing, and processing images in a wide variety of file\nformats, using a format-agnostic API, aimed at VFX applications.",
            "name": "openimageio"
        },
        {
            "description": "A high performance toolkit for molecular simulation. Use it as a\nlibrary, or as an application. We include extensive language bindings\nfor Python, C, C++, and even Fortran. The code is open source and\nactively maintained on Github, licensed under MIT and LGPL. Part of the\nOmnia suite of tools for predictive biomolecular simulation.",
            "name": "openmm"
        },
        {
            "description": "C++ & Python API for Scientific I/O",
            "name": "openpmd-api"
        },
        {
            "description": "OpenTURNS is a scientific C++ and Python library featuring an internal\ndata model and algorithms dedicated to the treatment of uncertainties.\nThe main goal of this library is to provide all functionalities needed\nto treat uncertainties in studies with industrial applications. Targeted\nusers are all engineers who want to introduce the probabilistic\ndimension in their so far deterministic studies.",
            "name": "openturns"
        },
        {
            "description": "OpenVDB - a sparse volume data format.",
            "name": "openvdb"
        },
        {
            "description": "Openwsman server implementation and client api with bindings.",
            "name": "openwsman"
        },
        {
            "description": "The Open Trace Format 2 is a highly scalable, memory efficient event\ntrace data format plus support library.",
            "name": "otf2"
        },
        {
            "description": "Python CLI for Pacifica Core Services",
            "name": "pacifica-cli"
        },
        {
            "description": "pacparser is a library to parse proxy auto-config (PAC) files.",
            "name": "pacparser"
        },
        {
            "description": "Parallel Global Multiobjective Optimizer (and its Python alter ego\nPyGMO) is a C++ / Python platform to perform parallel computations of\noptimisation tasks (global and local) via the asynchronous generalized\nisland model.",
            "name": "pagmo"
        },
        {
            "description": "ParaView is an open-source, multi-platform data analysis and\nvisualization application. This package includes the Catalyst in-situ\nlibrary for versions 5.7 and greater, otherwise use the catalyst\npackage.",
            "name": "paraview"
        },
        {
            "description": "PASTA (Practical Alignment using SATe and Transitivity)",
            "name": "pasta"
        },
        {
            "description": "phyluce (phy-loo-chee) is a software package that was initially\ndeveloped for analyzing data collected from ultraconserved elements in\norganismal genomes",
            "name": "phyluce"
        },
        {
            "description": "pipx is a tool to install and run Python applications in isolated\nenvironments",
            "name": "pipx"
        },
        {
            "description": "Piranha is a computer-algebra library for the symbolic manipulation of\nsparse multivariate polynomials and other closely-related symbolic\nobjects (such as Poisson series).",
            "name": "piranha"
        },
        {
            "description": "Parallel Ice Sheet Model",
            "name": "pism"
        },
        {
            "description": "PODIO, or plain-old-data I/O, is a C++ library to support the creation\nand handling of data models in particle physics.",
            "name": "podio"
        },
        {
            "description": "Professor Monte-Carlo tuning package",
            "name": "professor"
        },
        {
            "description": "lib3to2 is a set of fixers that are intended to backport code written\nfor Python version 3.x into Python version 2.x.",
            "name": "py-3to2"
        },
        {
            "description": "XML tools and libraries for Python: Domlette, XPath, XSLT, XPointer,\nXLink, XUpdate",
            "name": "py-4suite-xml"
        },
        {
            "description": "Convert WSGI app to ASGI app or ASGI app to WSGI app.",
            "name": "py-a2wsgi"
        },
        {
            "description": "ABCpy is a highly modular, scientific library for approximate Bayesian\ncomputation (ABC) written in Python. It is designed to run all included\nABC algorithms in parallel, either using multiple cores of a single\ncomputer or using an Apache Spark or MPI enabled cluster.",
            "name": "py-abcpy"
        },
        {
            "description": "Python package to automate ABINIT calculations and analyze the results.",
            "name": "py-abipy"
        },
        {
            "description": "A cool helper for tracking time and throughput of code blocks, with\nbeautiful human friendly renditions.",
            "name": "py-about-time"
        },
        {
            "description": "This repository is a collection of Python library code for building\nPython applications. The code is collected from Google's own Python code\nbase, and has been extensively tested and used in production.",
            "name": "py-absl-py"
        },
        {
            "description": "A simple way to train and use PyTorch models with multi-GPU, TPU, mixed-\nprecision.",
            "name": "py-accelerate"
        },
        {
            "description": "This package includes a collection of accessible themes for pygments\nbased on different sources.",
            "name": "py-accessible-pygments"
        },
        {
            "description": "An accelerated Image loader and preprocessor leveraging Intel IPP.\naccimage mimics the PIL API and can be used as a backend for\ntorchvision.",
            "name": "py-accimage"
        },
        {
            "description": "A tiny script to issue and renew TLS certs from Let's Encrypt.",
            "name": "py-acme-tiny"
        },
        {
            "description": "The ADAL for Python library makes it easy for python application to\nauthenticate to Azure Active Directory (AAD) in order to access AAD\nprotected web resources. DEPRECATED: replaced by MSAL Python.",
            "name": "py-adal"
        },
        {
            "description": "ADB-Enhanced is a Swiss-army knife for Android testing and development.\nA command-line interface to trigger various scenarios like screen\nrotation, battery saver mode, data saver mode, doze mode, permission\ngrant/revocation.",
            "name": "py-adb-enhanced"
        },
        {
            "description": "addict is a Python module that gives you dictionaries whose values are\nboth gettable and settable using attributes, in addition to standard\nitem-syntax.",
            "name": "py-addict"
        },
        {
            "description": "NumPy bindings of ADIOS1",
            "name": "py-adios"
        },
        {
            "description": "Fast Indexed python HTML parser which builds a DOM node tree, providing\ncommon getElementsBy* functions for scraping, testing, modification, and\nformatting",
            "name": "py-advancedhtmlparser"
        },
        {
            "description": "Advanced Enumerations (compatible with Python's stdlib Enum),\nNamedTuples, and NamedConstants.",
            "name": "py-aenum"
        },
        {
            "description": "Matrices describing affine transformation of the plane.",
            "name": "py-affine"
        },
        {
            "description": "agate is a Python data analysis library that is optimized for humans\ninstead of machines. It is an alternative to numpy and pandas that\nsolves real-world problems with readable code.",
            "name": "py-agate"
        },
        {
            "description": "agate-dbf adds read support for dbf files to agate.",
            "name": "py-agate-dbf"
        },
        {
            "description": "agate-excel adds read support for Excel files (xls and xlsx) to agate.",
            "name": "py-agate-excel"
        },
        {
            "description": "agate-sql adds SQL read/write support to agate.",
            "name": "py-agate-sql"
        },
        {
            "description": "AHPy is an implementation of the Analytic Hierarchy Process (AHP), a\nmethod used to structure, synthesize and evaluate the elements of a\ndecision problem.",
            "name": "py-ahpy"
        },
        {
            "description": "Async client for amazon services using botocore and aiohttp/asyncio.",
            "name": "py-aiobotocore"
        },
        {
            "description": "This library experimentally provides the missing asyncio support for the\ncontextvars backport library.",
            "name": "py-aiocontextvars"
        },
        {
            "description": "Simple DNS resolver for asyncio.It provides a simple way for doing\nasynchronous DNS resolutions using pycares.",
            "name": "py-aiodns"
        },
        {
            "description": "aiofiles is an Apache2 licensed library, written in Python, for handling\nlocal disk files in asyncio applications.",
            "name": "py-aiofiles"
        },
        {
            "description": "This library exists to allow connecting with Happy Eyeballs (RFC 8305)\nwhen you already have a list of addrinfo and not a DNS name.",
            "name": "py-aiohappyeyeballs"
        },
        {
            "description": "Supports both client and server side of HTTP protocol. Supports both\nclient and server Web-Sockets out-of-the-box and avoids Callbacks.\nProvides Web-server with middlewares and plugable routing.",
            "name": "py-aiohttp"
        },
        {
            "description": "aiohttp_cors library implements Cross Origin Resource Sharing (CORS)\nsupport for aiohttp asyncio-powered asynchronous HTTP server.",
            "name": "py-aiohttp-cors"
        },
        {
            "description": "Implementation of itertools, builtins, and more for AsyncIO and mixed-\ntype iterables.",
            "name": "py-aioitertools"
        },
        {
            "description": "Jobs scheduler for managing background task (asyncio).",
            "name": "py-aiojobs"
        },
        {
            "description": "asyncio (PEP 3156) Redis support.",
            "name": "py-aioredis"
        },
        {
            "description": "A project to manage callbacks in asyncio projects.",
            "name": "py-aiosignal"
        },
        {
            "description": "asyncio bridge to the standard sqlite3 module",
            "name": "py-aiosqlite"
        },
        {
            "description": "Alabaster is a visually (c)lean, responsive, configurable theme for the\nSphinx documentation system.",
            "name": "py-alabaster"
        },
        {
            "description": "Alembic is a database migrations tool.",
            "name": "py-alembic"
        },
        {
            "description": "A new kind of Progress Bar, with real-time throughput, ETA, and very\ncool animations!",
            "name": "py-alive-progress"
        },
        {
            "description": "An automatic evaluator for instruction-following language models. Human-\nvalidated, high-quality, cheap, and fast.",
            "name": "py-alpaca-eval"
        },
        {
            "description": "AlpacaFarm is a simulator that enables research and development on\nlearning from feedback at a fraction of the usual cost, promoting\naccessible research on instruction following and alignment.",
            "name": "py-alpaca-farm"
        },
        {
            "description": "AlphaFold is an AI system developed by DeepMind that predicts a\nprotein's 3D structure from its amino acid sequence. It regularly\nachieves accuracy competitive with experiment.",
            "name": "py-alphafold"
        },
        {
            "description": "Declarative statistical visualization library for Python",
            "name": "py-altair"
        },
        {
            "description": "altgraph is a fork of graphlib: a graph (network) package for\nconstructing graphs, BFS and DFS traversals, topological sort, shortest\npaths, etc. with graphviz output.",
            "name": "py-altgraph"
        },
        {
            "description": "Advanced Multilanguage Interface for CVODES and IDAS",
            "name": "py-amici"
        },
        {
            "description": "Provides typing hints to be shared between LCLS-II analysis packages.",
            "name": "py-amityping"
        },
        {
            "description": "AMPL API is an interface that allows developers to access the features\nof the AMPL interpreter from within a programming language. All model\ngeneration and solver interaction is handled directly by AMPL, which\nleads to great stability and speed; the library just acts as an\nintermediary, and the added overhead (in terms of memory and CPU usage)\ndepends mostly on how much data is read back from AMPL, the size of the\nmodel as such is irrelevant.",
            "name": "py-amplpy"
        },
        {
            "description": "This package includes tools to use with AMPL and amplpy.",
            "name": "py-ampltools"
        },
        {
            "description": "Low-level AMQP client for Python (fork of amqplib).",
            "name": "py-amqp"
        },
        {
            "description": "AMReX Python Bindings with pybind11",
            "name": "py-amrex"
        },
        {
            "description": "ANGEL: Robust Open Reading Frame prediction",
            "name": "py-angel"
        },
        {
            "description": "A library for parsing ISO 8601 strings.",
            "name": "py-aniso8601"
        },
        {
            "description": "anndata is a Python package for handling annotated data matrices in\nmemory and on disk, positioned between pandas and xarray.",
            "name": "py-anndata"
        },
        {
            "description": "git annex special remotes made easy.",
            "name": "py-annexremote"
        },
        {
            "description": "Reusable constraint types to use with typing.Annotated.",
            "name": "py-annotated-types"
        },
        {
            "description": "Annoy (Approximate Nearest Neighbors Oh Yeah) is a C++ library with\nPython bindings to search for points in space that are close to a given\nquery point. It also creates large read-only file-based data structures\nthat are mmapped into memory so that many processes may share the same\ndata.",
            "name": "py-annoy"
        },
        {
            "description": "Convert text with ansi color codes to HTML",
            "name": "py-ansi2html"
        },
        {
            "description": "Ansible is a radically simple IT automation platform that makes your\napplications and systems easier to deploy.",
            "name": "py-ansible"
        },
        {
            "description": "Produce colored terminal text with an xml-like markup.",
            "name": "py-ansimarkup"
        },
        {
            "description": "textwrap, but savvy to ANSI colors and styles.",
            "name": "py-ansiwrap"
        },
        {
            "description": "Fix shapes that cross the antimeridian.",
            "name": "py-antimeridian"
        },
        {
            "description": "This package provides runtime libraries required to use parsers\ngenerated for the Python3 language by version 4 of ANTLR (ANother Tool\nfor Language Recognition).",
            "name": "py-antlr4-python3-runtime"
        },
        {
            "description": "Advanced Normalization Tools in Python.",
            "name": "py-antspyx"
        },
        {
            "description": "ANUGA (pronounced \"AHnooGAH\") is open-source software for the simulation\nof the shallow water equation, in particular it can be used to model\ntsunamis and floods.",
            "name": "py-anuga"
        },
        {
            "description": "Anvi\u2019o is a comprehensive platform that brings together many aspects of\ntoday\u2019s cutting-edge computational strategies of data-enabled\nmicrobiology, including genomics, metagenomics, metatranscriptomics,\npangenomics, metapangenomics, phylogenomics, and microbial population\ngenetics in an integrated and easy-to-use fashion through extensive\ninteractive visualization capabilities.",
            "name": "py-anvio"
        },
        {
            "description": "Python project for generating badges for your projects",
            "name": "py-anybadge"
        },
        {
            "description": "High level compatibility layer for multiple asynchronous event loop\nimplementations.",
            "name": "py-anyio"
        },
        {
            "description": "Python tree data library - lightweight and extensible Tree data\nstructure.",
            "name": "py-anytree"
        },
        {
            "description": "Apache Beam is a unified programming model for Batch and Streaming.",
            "name": "py-apache-beam"
        },
        {
            "description": "Python library for multiple cloud provider APIs",
            "name": "py-apache-libcloud"
        },
        {
            "description": "apex: Pyramid toolkit to add Velruse, Flash Messages,CSRF, ReCaptcha and\nSessions.",
            "name": "py-apex"
        },
        {
            "description": "Handy tools for working with URLs and APIs.",
            "name": "py-apeye"
        },
        {
            "description": "Core (offline) functionality for the apeye library.",
            "name": "py-apeye-core"
        },
        {
            "description": "apipkg: namespace control and lazy-import mechanism",
            "name": "py-apipkg"
        },
        {
            "description": "A pluggable API specification generator.",
            "name": "py-apispec"
        },
        {
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\".",
            "name": "py-appdirs"
        },
        {
            "description": "This project extends the Application Insights API surface to support\nPython.",
            "name": "py-applicationinsights"
        },
        {
            "description": "Disable App Nap on OS X 10.9",
            "name": "py-appnope"
        },
        {
            "description": "The apptools project includes a set of packages that Enthought has found\nuseful in creating a number of applications. They implement\nfunctionality that is commonly needed by many applications.",
            "name": "py-apptools"
        },
        {
            "description": "In-process task scheduler with Cron-like capabilities.",
            "name": "py-apscheduler"
        },
        {
            "description": "ArcGIS API for Python.",
            "name": "py-arcgis"
        },
        {
            "description": "Autoregressive Conditional Heteroskedasticity (ARCH) and other tools for\nfinancial econometrics, written in Python (with Cython and/or Numba used\nto improve performance)",
            "name": "py-arch"
        },
        {
            "description": "A library for detecting, labeling and reasoning about\nmicroarchitectures.",
            "name": "py-archspec"
        },
        {
            "description": "arcp (Archive and Package) URI parser and generator",
            "name": "py-arcp"
        },
        {
            "description": "Bash tab completion for argparse.",
            "name": "py-argcomplete"
        },
        {
            "description": "An argparse wrapper that doesn't make you say \"argh\" each time you deal\nwith it. Building a command-line interface? Found yourself uttering\n\"argh!\" while struggling with the API of argparse? Don't like the\ncomplexity but need the power? Argh is a smart wrapper for argparse.\nArgparse is a very powerful tool; Argh just makes it easy to use.",
            "name": "py-argh"
        },
        {
            "description": "The secure Argon2 password hashing algorithm..",
            "name": "py-argon2-cffi"
        },
        {
            "description": "Low-level CFFI bindings for Argon2.",
            "name": "py-argon2-cffi-bindings"
        },
        {
            "description": "An immutable mapping type for Python.",
            "name": "py-argparse-dataclass"
        },
        {
            "description": "Build manual page from python's ArgumentParser object.",
            "name": "py-argparse-manpage"
        },
        {
            "description": "Command Arguments for Humans.",
            "name": "py-args"
        },
        {
            "description": "This is the python client for Arkouda.",
            "name": "py-arkouda"
        },
        {
            "description": "Python ARM Radar Toolkit. A growing collection of weather radar\nalgorithms and utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, processes, and analyse data from\nmany types of weather radars.",
            "name": "py-arm-pyart"
        },
        {
            "description": "Packrat parser interpreter.",
            "name": "py-arpeggio"
        },
        {
            "description": "Arrow is a Python library that offers a sensible and human-friendly\napproach to creating, manipulating, formatting and converting dates,\ntimes and timestamps. It implements and updates the datetime type,\nplugging gaps in functionality and providing an intelligent module API\nthat supports many common creation scenarios. Simply put, it helps you\nwork with dates and times with fewer imports and a lot less code.",
            "name": "py-arrow"
        },
        {
            "description": "ASCII art library for Python.",
            "name": "py-art"
        },
        {
            "description": "ArviZ (pronounced \"AR-vees\") is a Python package for exploratory\nanalysis of Bayesian models. Includes functions for posterior analysis,\nmodel checking, comparison and diagnostics.",
            "name": "py-arviz"
        },
        {
            "description": "Draws ASCII trees.",
            "name": "py-asciitree"
        },
        {
            "description": "The Advanced Scientific Data Format (ASDF) is a next-generation\ninterchange format for scientific data. This package contains the Python\nimplementation of the ASDF Standard.",
            "name": "py-asdf"
        },
        {
            "description": "ASDF serialization support for astropy",
            "name": "py-asdf-astropy"
        },
        {
            "description": "ASDF schemas for coordinates",
            "name": "py-asdf-coordinates-schemas"
        },
        {
            "description": "Standards document describing ASDF, Advanced Scientific Data Format",
            "name": "py-asdf-standard"
        },
        {
            "description": "ASDF schemas for transforms",
            "name": "py-asdf-transform-schemas"
        },
        {
            "description": "ASDF schemas for units",
            "name": "py-asdf-unit-schemas"
        },
        {
            "description": "ASDL: Automatic Second-order Differentiation (for Fisher, Gradient\ncovariance, Hessian, Jacobian, and Kernel) Library.",
            "name": "py-asdfghjkl"
        },
        {
            "description": "The Atomic Simulation Environment (ASE) is a set of tools and Python\nmodules for setting up, manipulating, running, visualizing and analyzing\natomistic simulations.",
            "name": "py-ase"
        },
        {
            "description": "ASGI specification and utilities.",
            "name": "py-asgiref"
        },
        {
            "description": "Python ASN.1 library with a focus on performance and a pythonic API",
            "name": "py-asn1crypto"
        },
        {
            "description": "Some extensions to pyyaml.",
            "name": "py-aspy-yaml"
        },
        {
            "description": "Stand-alone Assertions.",
            "name": "py-asserts"
        },
        {
            "description": "Safe, minimalistic evaluator of python expression using ast module",
            "name": "py-asteval"
        },
        {
            "description": "astor is designed to allow easy manipulation of Python source via the\nAST.",
            "name": "py-astor"
        },
        {
            "description": "Pretty print the output of python stdlib `ast.parse`.",
            "name": "py-astpretty"
        },
        {
            "description": "A common base representation of python source code for pylint and other\nprojects.",
            "name": "py-astroid"
        },
        {
            "description": "The Astropy Project is a community effort to develop a single core\npackage for Astronomy in Python and foster interoperability between\nPython astronomy packages.",
            "name": "py-astropy"
        },
        {
            "description": "HEALPix (Hierarchical Equal Area isoLatitude Pixelisation) is an\nalgorithm for pixellizing a sphere that is sometimes used in Astronomy\nto store data from all-sky surveys, but the general algorithm can apply\nto any field that has to deal with representing data on a sphere.",
            "name": "py-astropy-healpix"
        },
        {
            "description": "The astropy-helpers package includes many build, installation, and\ndocumentation-related tools used by the Astropy project, but packaged\nseparately for use by other projects that wish to leverage this work.",
            "name": "py-astropy-helpers"
        },
        {
            "description": "IERS Earth rotation and leap second table Note: This package is not\nmeant for standalone purposes but is needed by AstroPy.",
            "name": "py-astropy-iers-data"
        },
        {
            "description": "Annotate AST trees with source code positions.",
            "name": "py-asttokens"
        },
        {
            "description": "An AST unparser for Python. This is a factored out version of unparse\nfound in the Python source distribution; under Demo/parser in Python 2\nand under Tools/parser in Python 3.",
            "name": "py-astunparse"
        },
        {
            "description": "Provides async generator functionality to python 3.5.",
            "name": "py-async-generator"
        },
        {
            "description": "Simple lru_cache for asyncio",
            "name": "py-async-lru"
        },
        {
            "description": "asyncio-compatible timeout context manager.",
            "name": "py-async-timeout"
        },
        {
            "description": "The asyncio module provides infrastructure for writing single-threaded\nconcurrent code using coroutines, multiplexing I/O access over sockets\nand other resources, running network clients and servers, and other\nrelated primitives.",
            "name": "py-asyncio"
        },
        {
            "description": "The package asynctest is built on top of the standard unittest module\nand cuts down boilerplate code when testing libraries for asyncio.",
            "name": "py-asynctest"
        },
        {
            "description": "Atomic file writes.",
            "name": "py-atomicwrites"
        },
        {
            "description": "This library provides two very simple decorators that document the\npublicness of the names in your module.",
            "name": "py-atpublic"
        },
        {
            "description": "Atropos is tool for specific, sensitive, and speedy trimming of NGS\nreads. It is a fork of the venerable Cutadapt read trimmer.",
            "name": "py-atropos"
        },
        {
            "description": "ATS - Automated Testing System - is an open-source, Python-based tool\nfor automating the running of tests of an application across a broad\nrange of high performance computers.",
            "name": "py-ats"
        },
        {
            "description": "Key-value mapping that supports nested attribute-style access.",
            "name": "py-attmap"
        },
        {
            "description": "Classes Without Boilerplate",
            "name": "py-attrs"
        },
        {
            "description": "cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding for\nPython.",
            "name": "py-audioread"
        },
        {
            "description": "Auditing and relabeling of PEP 600 manylinux_x_y, PEP 513 manylinux1,\nPEP 571 manylinux2010 and PEP 599 manylinux2014 Linux wheels.",
            "name": "py-auditwheel"
        },
        {
            "description": "Deep learning configuration.",
            "name": "py-autocfg"
        },
        {
            "description": "Extended sphinx autodoc including automatic autosummaries.",
            "name": "py-autodocsumm"
        },
        {
            "description": "Autograd can automatically differentiate native Python and Numpy code.\nIt can handle a large subset of Python's features, including loops, ifs,\nrecursion and closures, and it can even take derivatives of derivatives\nof derivatives. It supports reverse-mode differentiation (a.k.a.\nbackpropagation), which means it can efficiently take gradients of\nscalar-valued functions with respect to array-valued arguments, as well\nas forward-mode differentiation, and the two can be composed\narbitrarily. The main intended application of Autograd is gradient-based\noptimization. For more information, check out the tutorial and the\nexamples directory.",
            "name": "py-autograd"
        },
        {
            "description": "autograd compatible approximations to the derivatives of the Gamma-\nfamily of functions.",
            "name": "py-autograd-gamma"
        },
        {
            "description": "Self-service finite-state machines for the programmer on the go.",
            "name": "py-automat"
        },
        {
            "description": "autopep8 automatically formats Python code to conform to the PEP 8 style\nguide.",
            "name": "py-autopep8"
        },
        {
            "description": "Write backend agnostic numeric code compatible with any numpy-ish array\nlibrary.",
            "name": "py-autoray"
        },
        {
            "description": "Auxlib is an auxiliary library to the python standard library.",
            "name": "py-auxlib"
        },
        {
            "description": "Avro is a serialization and RPC framework.",
            "name": "py-avro"
        },
        {
            "description": "Serializes data into a JSON format using AVRO schema.",
            "name": "py-avro-json-serializer"
        },
        {
            "description": "Apache Avro is a data serialization system. Note: lang/py3 version (this\npackage) will be deprecated and lang/py functions will be made available\nfor both python2 and python3.",
            "name": "py-avro-python3"
        },
        {
            "description": "Python flexible slugify function",
            "name": "py-awesome-slugify"
        },
        {
            "description": "Manipulate JSON-like data with NumPy-like idioms.",
            "name": "py-awkward"
        },
        {
            "description": "py-awkward-cpp provides precompiled routines for the py-awkward package.\nIt is not useful on its own, only as a dependency for py-awkward.",
            "name": "py-awkward-cpp"
        },
        {
            "description": "Manipulate arrays of complex data structures as easily as Numpy. Awkward\nArray is a pure Python+Numpy library for manipulating complex data\nstructures as you would Numpy arrays.",
            "name": "py-awkward0"
        },
        {
            "description": "Python 3 bindings for the AWS Common Runtime.",
            "name": "py-awscrt"
        },
        {
            "description": "Adaptive experimentation is the machine-learning guided process of\niteratively exploring a (possibly infinite) parameter space in order to\nidentify optimal configurations in a resource-efficient manner. Ax\ncurrently supports Bayesian optimization and bandit optimization as\nexploration strategies. Bayesian optimization in Ax is powered by\nBoTorch, a modern library for Bayesian optimization research built on\nPyTorch.",
            "name": "py-ax-platform"
        },
        {
            "description": "Azote is a GTK+3 - based picture browser and background setter, as the\nfrontend to the swaybg (sway/Wayland) and feh (X windows) commands.",
            "name": "py-azote"
        },
        {
            "description": "Microsoft Azure Batch Client Library for Python.",
            "name": "py-azure-batch"
        },
        {
            "description": "Microsoft Azure Command-Line Tools.",
            "name": "py-azure-cli"
        },
        {
            "description": "Microsoft Azure CLI Command Modules Namespace Package.",
            "name": "py-azure-cli-command-modules-nspkg"
        },
        {
            "description": "Microsoft Azure Command-Line Tools Core Module.",
            "name": "py-azure-cli-core"
        },
        {
            "description": "Microsoft Azure CLI Namespace Package.",
            "name": "py-azure-cli-nspkg"
        },
        {
            "description": "Microsoft Azure CLI Telemetry Package.",
            "name": "py-azure-cli-telemetry"
        },
        {
            "description": "Microsoft Azure Client Library for Python (Common).",
            "name": "py-azure-common"
        },
        {
            "description": "Microsoft Azure Core Library for Python.",
            "name": "py-azure-core"
        },
        {
            "description": "Microsoft Azure Cosmos Client Library for Python.",
            "name": "py-azure-cosmos"
        },
        {
            "description": "Azure Data Lake Store Filesystem Client Library for Python.",
            "name": "py-azure-datalake-store"
        },
        {
            "description": "Python package for integrating Azure Functions with Azure DevOps.\nSpecifically made for the Azure CLI.",
            "name": "py-azure-functions-devops-build"
        },
        {
            "description": "Microsoft Azure Graph RBAC Client Library for Python.",
            "name": "py-azure-graphrbac"
        },
        {
            "description": "Microsoft Azure Identity Library for Python.",
            "name": "py-azure-identity"
        },
        {
            "description": "Microsoft Azure Key Vault Client Libraries for Python.",
            "name": "py-azure-keyvault"
        },
        {
            "description": "Microsoft Azure Key Vault Certificates Client Library for Python.",
            "name": "py-azure-keyvault-certificates"
        },
        {
            "description": "Microsoft Azure Key Vault Keys Client Library for Python.",
            "name": "py-azure-keyvault-keys"
        },
        {
            "description": "Microsoft Azure Key Vault Namespace Package.",
            "name": "py-azure-keyvault-nspkg"
        },
        {
            "description": "Microsoft Azure Key Vault Secrets Client Library for Python.",
            "name": "py-azure-keyvault-secrets"
        },
        {
            "description": "Microsoft Azure Log Analytics Client Library for Python.",
            "name": "py-azure-loganalytics"
        },
        {
            "description": "Microsoft Azure Advisor Client Library for Python.",
            "name": "py-azure-mgmt-advisor"
        },
        {
            "description": "Microsoft Azure API Management Client Library for Python.",
            "name": "py-azure-mgmt-apimanagement"
        },
        {
            "description": "Microsoft Azure App Configuration Management Client Library for Python.",
            "name": "py-azure-mgmt-appconfiguration"
        },
        {
            "description": "Microsoft Azure Application Insights Management Client Library for\nPython.",
            "name": "py-azure-mgmt-applicationinsights"
        },
        {
            "description": "Microsoft Azure Authorization Management Client Library for Python.",
            "name": "py-azure-mgmt-authorization"
        },
        {
            "description": "Microsoft Azure Batch Management Client Library for Python.",
            "name": "py-azure-mgmt-batch"
        },
        {
            "description": "Microsoft Azure Batch AI Management Client Library for Python.",
            "name": "py-azure-mgmt-batchai"
        },
        {
            "description": "Microsoft Azure Billing Client Library for Python.",
            "name": "py-azure-mgmt-billing"
        },
        {
            "description": "Microsoft Azure Bot Service Client Library for Python.",
            "name": "py-azure-mgmt-botservice"
        },
        {
            "description": "Microsoft Azure CDN Management Client Library for Python.",
            "name": "py-azure-mgmt-cdn"
        },
        {
            "description": "Microsoft Azure Cognitive Services Management Client Library for Python.",
            "name": "py-azure-mgmt-cognitiveservices"
        },
        {
            "description": "Microsoft Azure Compute Management Client Library for Python.",
            "name": "py-azure-mgmt-compute"
        },
        {
            "description": "Microsoft Azure Consumption Client Library for Python.",
            "name": "py-azure-mgmt-consumption"
        },
        {
            "description": "Microsoft Azure Container Instance Client Library for Python.",
            "name": "py-azure-mgmt-containerinstance"
        },
        {
            "description": "Microsoft Azure Container Registry Client Library for Python.",
            "name": "py-azure-mgmt-containerregistry"
        },
        {
            "description": "Microsoft Azure Container Service Management Client Library for Python.",
            "name": "py-azure-mgmt-containerservice"
        },
        {
            "description": "Microsoft Azure Management Core Library for Python.",
            "name": "py-azure-mgmt-core"
        },
        {
            "description": "Microsoft Azure Cosmos DB Management Client Library for Python.",
            "name": "py-azure-mgmt-cosmosdb"
        },
        {
            "description": "Microsoft Azure Data Lake Analytics Management Client Library for\nPython.",
            "name": "py-azure-mgmt-datalake-analytics"
        },
        {
            "description": "Microsoft Azure Data Lake Store Management Client Library for Python.",
            "name": "py-azure-mgmt-datalake-store"
        },
        {
            "description": "Microsoft Azure Data Migration Client Library for Python.",
            "name": "py-azure-mgmt-datamigration"
        },
        {
            "description": "Microsoft Azure Deployment Manager Client Library for Python.",
            "name": "py-azure-mgmt-deploymentmanager"
        },
        {
            "description": "Microsoft Azure DevTestLabs Management Client Library for Python.",
            "name": "py-azure-mgmt-devtestlabs"
        },
        {
            "description": "Microsoft Azure DNS Management Client Library for Python.",
            "name": "py-azure-mgmt-dns"
        },
        {
            "description": "Microsoft Azure EventGrid Management Client Library for Python.",
            "name": "py-azure-mgmt-eventgrid"
        },
        {
            "description": "Microsoft Azure EventHub Management Client Library for Python.",
            "name": "py-azure-mgmt-eventhub"
        },
        {
            "description": "Microsoft Azure HDInsight Management Client Library for Python.",
            "name": "py-azure-mgmt-hdinsight"
        },
        {
            "description": "Microsoft Azure Image Builder Client Library for Python.",
            "name": "py-azure-mgmt-imagebuilder"
        },
        {
            "description": "Microsoft Azure IoTCentral Management Client Library for Python.",
            "name": "py-azure-mgmt-iotcentral"
        },
        {
            "description": "Microsoft Azure IoTHub Management Client Library for Python.",
            "name": "py-azure-mgmt-iothub"
        },
        {
            "description": "Microsoft Azure IoTHub Provisioning Services Client Library for Python.",
            "name": "py-azure-mgmt-iothubprovisioningservices"
        },
        {
            "description": "Microsoft Azure Key Vault Management Client Library for Python.",
            "name": "py-azure-mgmt-keyvault"
        },
        {
            "description": "Microsoft Azure Kusto Management Client Library for Python.",
            "name": "py-azure-mgmt-kusto"
        },
        {
            "description": "Microsoft Azure Log Analytics Management Client Library for Python.",
            "name": "py-azure-mgmt-loganalytics"
        },
        {
            "description": "Microsoft Azure Managed Services Client Library for Python.",
            "name": "py-azure-mgmt-managedservices"
        },
        {
            "description": "Microsoft Azure Management Groups Client Library for Python.",
            "name": "py-azure-mgmt-managementgroups"
        },
        {
            "description": "Microsoft Azure Maps Client Library for Python.",
            "name": "py-azure-mgmt-maps"
        },
        {
            "description": "Microsoft Azure Market Place Ordering Client Library for Python.",
            "name": "py-azure-mgmt-marketplaceordering"
        },
        {
            "description": "Microsoft Azure Media Services Client Library for Python.",
            "name": "py-azure-mgmt-media"
        },
        {
            "description": "Microsoft Azure Monitor Client Library for Python.",
            "name": "py-azure-mgmt-monitor"
        },
        {
            "description": "Microsoft Azure MSI Management Client Library for Python.",
            "name": "py-azure-mgmt-msi"
        },
        {
            "description": "Microsoft Azure NetApp Files Management Client Library for Python.",
            "name": "py-azure-mgmt-netapp"
        },
        {
            "description": "Microsoft Azure Network Management Client Library for Python.",
            "name": "py-azure-mgmt-network"
        },
        {
            "description": "Microsoft Azure Resource Management Namespace Package [Internal].",
            "name": "py-azure-mgmt-nspkg"
        },
        {
            "description": "Microsoft Azure Policy Insights Client Library for Python.",
            "name": "py-azure-mgmt-policyinsights"
        },
        {
            "description": "Microsoft Azure DNS Private Zones Client Library for Python.",
            "name": "py-azure-mgmt-privatedns"
        },
        {
            "description": "Microsoft Azure RDBMS Management Client Library for Python.",
            "name": "py-azure-mgmt-rdbms"
        },
        {
            "description": "Microsoft Azure Recovery Services Client Library for Python.",
            "name": "py-azure-mgmt-recoveryservices"
        },
        {
            "description": "Microsoft Azure Recovery Services Backup Management Client Library for\nPython.",
            "name": "py-azure-mgmt-recoveryservicesbackup"
        },
        {
            "description": "Microsoft Azure Red Hat Openshift Management Client Library for Python.",
            "name": "py-azure-mgmt-redhatopenshift"
        },
        {
            "description": "Microsoft Azure Redis Cache Management Client Library for Python.",
            "name": "py-azure-mgmt-redis"
        },
        {
            "description": "Microsoft Azure Relay Client Library for Python.",
            "name": "py-azure-mgmt-relay"
        },
        {
            "description": "Microsoft Azure Reservations Client Library for Python.",
            "name": "py-azure-mgmt-reservations"
        },
        {
            "description": "Microsoft Azure Resource Management Client Library for Python.",
            "name": "py-azure-mgmt-resource"
        },
        {
            "description": "Microsoft Azure Search Management Client Library for Python.",
            "name": "py-azure-mgmt-search"
        },
        {
            "description": "Microsoft Azure Security Center Management Client Library for Python.",
            "name": "py-azure-mgmt-security"
        },
        {
            "description": "Microsoft Azure Service Bus Management Client Library for Python.",
            "name": "py-azure-mgmt-servicebus"
        },
        {
            "description": "Microsoft Azure Service Fabric Management Client Library for Python.",
            "name": "py-azure-mgmt-servicefabric"
        },
        {
            "description": "Microsoft Azure SignalR Client Library for Python.",
            "name": "py-azure-mgmt-signalr"
        },
        {
            "description": "Microsoft Azure SQL Management Client Library for Python.",
            "name": "py-azure-mgmt-sql"
        },
        {
            "description": "Microsoft Azure SQL Virtual Machine Management Client Library for\nPython.",
            "name": "py-azure-mgmt-sqlvirtualmachine"
        },
        {
            "description": "Microsoft Azure Storage Management Client Library for Python.",
            "name": "py-azure-mgmt-storage"
        },
        {
            "description": "Microsoft Azure Traffic Manager Client Library for Python.",
            "name": "py-azure-mgmt-trafficmanager"
        },
        {
            "description": "Microsoft Azure Web Apps Management Client Library for Python.",
            "name": "py-azure-mgmt-web"
        },
        {
            "description": "Microsoft Azure Storage Client Library for Python with multi API version\nsupport.",
            "name": "py-azure-multiapi-storage"
        },
        {
            "description": "Microsoft Azure Namespace Package [Internal].",
            "name": "py-azure-nspkg"
        },
        {
            "description": "Microsoft Azure Blob Storage Client Library for Python",
            "name": "py-azure-storage-blob"
        },
        {
            "description": "Microsoft Azure Storage Common Client Library for Python.",
            "name": "py-azure-storage-common"
        },
        {
            "description": "Microsoft Azure Storage Namespace Package.",
            "name": "py-azure-storage-nspkg"
        },
        {
            "description": "The azureml-automl-core package is a package containing functionality\nused by the azureml-train-automl package.",
            "name": "py-azureml-automl-core"
        },
        {
            "description": "The azureml-core contains functionality for creating and managing: *\nAzure Machine Learning workspaces, experiments and runs; * Machine\nlearning compute respources; * Models, images and web services.",
            "name": "py-azureml-core"
        },
        {
            "description": "Azure ML Data Preparation SDK.",
            "name": "py-azureml-dataprep"
        },
        {
            "description": "Python Package for AzureML DataPrep specific native extensions.",
            "name": "py-azureml-dataprep-native"
        },
        {
            "description": "Azure Machine Learning Data Prep RsLex is a Rust implementation of Data\nPrep's capabilities to load, transform, and write data for machine\nlearning workflows.",
            "name": "py-azureml-dataprep-rslex"
        },
        {
            "description": "The purpose of this package is to coordinate dependencies within AzureML\npackages. It is not intended for public use.",
            "name": "py-azureml-dataset-runtime"
        },
        {
            "description": "The Azure Machine Learning SDK for Python can be used to create ML\npipelines as well as to submit and track individual pipeline runs.",
            "name": "py-azureml-pipeline"
        },
        {
            "description": "Core functionality to enable azureml-pipeline feature.",
            "name": "py-azureml-pipeline-core"
        },
        {
            "description": "Represents a unit of computation in azureml-pipeline.",
            "name": "py-azureml-pipeline-steps"
        },
        {
            "description": "Microsoft Azure Machine Learning Python SDK.",
            "name": "py-azureml-sdk"
        },
        {
            "description": "Machine learning (ML) telemetry package is used to collect telemetry\ndata.",
            "name": "py-azureml-telemetry"
        },
        {
            "description": "The azureml-train package provides estimators for training models using\ndifferent deep learning frameworks and functionality for hyperparameter\ntuning using Azure cloud.",
            "name": "py-azureml-train"
        },
        {
            "description": "The azureml-train-automl-client package contains functionality for\nautomatically finding the best machine learning model and its\nparameters, given training and test data.",
            "name": "py-azureml-train-automl-client"
        },
        {
            "description": "The azureml-train-core contains functionality used by azureml-train\nmetapackage.",
            "name": "py-azureml-train-core"
        },
        {
            "description": "The azureml-train-restclients-hyperdrive contains functionality for\nazureml-train metapackage.",
            "name": "py-azureml-train-restclients-hyperdrive"
        },
        {
            "description": "Babel is an integrated collection of utilities that assist in\ninternationalizing and localizing Python applications, with an emphasis\non web-based applications.",
            "name": "py-babel"
        },
        {
            "description": "Specifications for callback functions passed in to an API",
            "name": "py-backcall"
        },
        {
            "description": "Function decoration for backoff and retry.",
            "name": "py-backoff"
        },
        {
            "description": "BackPACK: Packing more into backprop.",
            "name": "py-backpack-for-pytorch"
        },
        {
            "description": "Backports_ABC: A backport of recent additions to the 'collections.abc'\nmodule.",
            "name": "py-backports-abc"
        },
        {
            "description": "cached_property() - computed once per instance, cached as attribute",
            "name": "py-backports-cached-property"
        },
        {
            "description": "Compatibility shim providing selectable entry points for older\nimplementations",
            "name": "py-backports-entry-points-selectable"
        },
        {
            "description": "Backport of Python 3.3's standard library module lzma for LZMA/XY\ncompressed files.",
            "name": "py-backports-lzma"
        },
        {
            "description": "Backport of new features in Python's os module",
            "name": "py-backports-os"
        },
        {
            "description": "The ssl.match_hostname() function from Python 3.5",
            "name": "py-backports-ssl-match-hostname"
        },
        {
            "description": "This package provides backports of new features in Python's tempfile\nmodule under the backports namespace",
            "name": "py-backports-tempfile"
        },
        {
            "description": "Backports of new features in Python's weakref module",
            "name": "py-backports-weakref"
        },
        {
            "description": "Backport of the standard library zoneinfo module",
            "name": "py-backports-zoneinfo"
        },
        {
            "description": "bagit is a Python library and command line utility for working with\nBagIt style packages.",
            "name": "py-bagit"
        },
        {
            "description": "A simple Python module for validating BagIt profiles.",
            "name": "py-bagit-profile"
        },
        {
            "description": "Bakta: rapid & standardized annotation of bacterial genomes, MAGs &\nplasmids",
            "name": "py-bakta"
        },
        {
            "description": "Security oriented static analyser for python code.",
            "name": "py-bandit"
        },
        {
            "description": "barectf (from bare metal and CTF) is a generator of tracer which\nproduces CTF data streams.",
            "name": "py-barectf"
        },
        {
            "description": "The matplotlib basemap toolkit is a library for plotting 2D data on maps\nin Python.",
            "name": "py-basemap"
        },
        {
            "description": "A Jupyter kernel for bash.",
            "name": "py-bash-kernel"
        },
        {
            "description": "Command-line interface for the Basis Set Exchange Website",
            "name": "py-basis-set-exchange"
        },
        {
            "description": "This is a custom spawner for Jupyterhub that is designed for\ninstallations on clusters using batch scheduling software.",
            "name": "py-batchspawner"
        },
        {
            "description": "Pure Python implementation of bayesian global optimization with gaussian\nprocesses.",
            "name": "py-bayesian-optimization"
        },
        {
            "description": "Read and write Generic Feature Format (GFF) with Biopython integration.",
            "name": "py-bcbio-gff"
        },
        {
            "description": "bcolz provides columnar and compressed data containers. Column storage\nallows for efficiently querying tables with a large number of columns.\nIt also allows for cheap addition and removal of column. In addition,\nbcolz objects are compressed by default for reducing memory/disk I/O\nneeds. The compression process is carried out internally by Blosc, a\nhigh-performance compressor that is optimized for binary data.",
            "name": "py-bcolz"
        },
        {
            "description": "Modern password hashing for your software and your servers",
            "name": "py-bcrypt"
        },
        {
            "description": "The bdbag utilities are a collection of software programs for working\nwith BagIt packages that conform to the BDBag and Bagit/RO profiles.",
            "name": "py-bdbag"
        },
        {
            "description": "Beaker is a web session and general caching library that includes WSGI\nmiddleware for use in web applications.",
            "name": "py-beaker"
        },
        {
            "description": "A double-entry bookkeeping computer language that lets you define\nfinancial transaction records in a text file, read them in memory,\ngenerate a variety of reports from them, and provides a web interface..",
            "name": "py-beancount"
        },
        {
            "description": "Unbearably fast near-real-time hybrid runtime-static type-checking in\npure Python.",
            "name": "py-beartype"
        },
        {
            "description": "Beautiful Soup is a Python library for pulling data out of HTML and XML\nfiles. It works with your favorite parser to provide idiomatic ways of\nnavigating, searching, and modifying the parse tree.",
            "name": "py-beautifulsoup4"
        },
        {
            "description": "Extract semantic information about static Python code.",
            "name": "py-beniget"
        },
        {
            "description": "Validator for the Brain Imaging Data Structure",
            "name": "py-bids-validator"
        },
        {
            "description": "Converts and organises raw MRI data-sets according to the Brain Imaging\nData Structure (BIDS).",
            "name": "py-bidscoin"
        },
        {
            "description": "Tools for DICOM to BIDS conversion.",
            "name": "py-bidskit"
        },
        {
            "description": "BigDFT: the python interface of BigDFT for electronic structure\ncalculation based on Daubechies wavelets.",
            "name": "py-bigdft"
        },
        {
            "description": "Arbitrary-precision correctly-rounded floating-point arithmetic, via\nMPFR.",
            "name": "py-bigfloat"
        },
        {
            "description": "Python multiprocessing fork with improvements and bugfixes",
            "name": "py-billiard"
        },
        {
            "description": "Ultra-lightweight pure Python package to check if a file is binary or\ntext.",
            "name": "py-binaryornot"
        },
        {
            "description": "Package provides Binary-, RedBlack- and AVL-Trees in Python and Cython.",
            "name": "py-bintrees"
        },
        {
            "description": "Binwalk is a fast, easy to use tool for analyzing, reverse engineering,\nand extracting firmware images.",
            "name": "py-binwalk"
        },
        {
            "description": "Biobb_common is the base package required to use the biobb packages",
            "name": "py-biobb-common"
        },
        {
            "description": "Biobb_gromacs is the Biobb module collection to perform molecular\ndynamics simulations using the GROMACS MD suite",
            "name": "py-biobb-gromacs"
        },
        {
            "description": "Biobb_io is the Biobb module collection to fetch data to be consumed by\nthe rest of the Biobb building blocks",
            "name": "py-biobb-io"
        },
        {
            "description": "Biobb_model is the Biobb module collection to check and model 3d\nstructures, create mutations or reconstruct missing atoms",
            "name": "py-biobb-model"
        },
        {
            "description": "Biobb_structure_checking provides a series of functions to check the\nquality of a 3D structure intended to facilitate the setup of a\nmolecular dynamics simulation of protein or nucleic acids systems",
            "name": "py-biobb-structure-checking"
        },
        {
            "description": "Biobb_structure_utils is the Biobb module collection to modify or\nextract information from a PDB structure file, such as pulling out a\nparticular model or chain, removing water molecules or ligands, or\nrenumbering or sorting atoms or residues",
            "name": "py-biobb-structure-utils"
        },
        {
            "description": "BioBlend is a Python library for interacting with the Galaxy API.",
            "name": "py-bioblend"
        },
        {
            "description": "The BIOM file format (canonically pronounced biome) is designed to be a\ngeneral-use format for representing biological sample by observation\ncontingency tables.",
            "name": "py-biom-format"
        },
        {
            "description": "Bioinformatics data-mining.",
            "name": "py-biomine"
        },
        {
            "description": "Working with molecular structures in pandas DataFrames",
            "name": "py-biopandas"
        },
        {
            "description": "A distributed collaborative effort to develop Python libraries and\napplications which address the needs of current and future work in\nbioinformatics.",
            "name": "py-biopython"
        },
        {
            "description": "Biotite is your Swiss army knife for bioinformatics. Whether you want to\nidentify homologous sequence regions in a protein family or you would\nlike to find disulfide bonds in a protein structure: Biotite has the\nright tool for you. This package bundles popular tasks in computational\nmolecular biology into a uniform Python library.",
            "name": "py-biotite"
        },
        {
            "description": "Reading structures from trajectory files.",
            "name": "py-biotraj"
        },
        {
            "description": "Efficient array of booleans - C extension",
            "name": "py-bitarray"
        },
        {
            "description": "Filter for improving compression of typed binary data.",
            "name": "py-bitshuffle"
        },
        {
            "description": "Simple construction, analysis and modification of binary data.",
            "name": "py-bitstring"
        },
        {
            "description": "This module is intended to have a similar interface as the python struct\nmodule, but working on bits instead of primitive data types (char, int,\n...)",
            "name": "py-bitstruct"
        },
        {
            "description": "Black is the uncompromising Python code formatter. By using it, you\nagree to cede control over minutiae of hand-formatting. In return, Black\ngives you speed, determinism, and freedom from pycodestyle nagging about\nformatting.",
            "name": "py-black"
        },
        {
            "description": "An easy whitelist-based HTML-sanitizing tool.",
            "name": "py-bleach"
        },
        {
            "description": "Blessed is a thin, practical wrapper around terminal capabilities in\nPython.",
            "name": "py-blessed"
        },
        {
            "description": "A nicer, kinder way to write to the terminal",
            "name": "py-blessings"
        },
        {
            "description": "A catch-all compile-tool wrapper.",
            "name": "py-blight"
        },
        {
            "description": "Fast, simple object-to-object and broadcast signaling",
            "name": "py-blinker"
        },
        {
            "description": "Cython BLIS: Fast BLAS-like operations from Python and Cython, without\nthe tears",
            "name": "py-blis"
        },
        {
            "description": "A Python wrapper for the extremely fast Blosc compression library",
            "name": "py-blosc"
        },
        {
            "description": "Python wrapper for the C-Blosc2 library.",
            "name": "py-blosc2"
        },
        {
            "description": "The BLOcks SUbstitution Matrices (BLOSUM) are used to score alignments\nbetween protein sequences and are therefore mainly used in\nbioinformatics.",
            "name": "py-blosum"
        },
        {
            "description": "Blue Brain Python E-feature extraction",
            "name": "py-bluepyefe"
        },
        {
            "description": "Python library to optimize and evaluate electrical models.",
            "name": "py-bluepyemodel"
        },
        {
            "description": "Bluebrain Python Optimisation Library",
            "name": "py-bluepyopt"
        },
        {
            "description": "Bmaptool is a generic tool for creating the block map (bmap) for a file\nand copying files using the block map. The idea is that large files,\nlike raw system image files, can be copied or flashed a lot faster and\nmore reliably with bmaptool than with traditional tools, like \"dd\" or\n\"cp\".",
            "name": "py-bmap-tools"
        },
        {
            "description": "The Brain Modeling Toolkit",
            "name": "py-bmtk"
        },
        {
            "description": "Statistical and novel interactive HTML plots for Python",
            "name": "py-bokeh"
        },
        {
            "description": "When they're not builtins, they're boltons. Functionality that should be\nin the standard library. Like builtins, but Boltons. Otherwise known as,\n\"everyone's util.py,\" but cleaned up and tested.",
            "name": "py-boltons"
        },
        {
            "description": "Boom is a boot manager for Linux systems using boot loaders that support\nthe BootLoader Specification for boot entry configuration.",
            "name": "py-boom-boot-manager"
        },
        {
            "description": "The Boost::Histogram Python wrapper.",
            "name": "py-boost-histogram"
        },
        {
            "description": "Boto is a Python package that provides interfaces to Amazon Web\nServices.",
            "name": "py-boto"
        },
        {
            "description": "The AWS SDK for Python.",
            "name": "py-boto3"
        },
        {
            "description": "Low-level, data-driven core of boto 3.",
            "name": "py-botocore"
        },
        {
            "description": "BoTorch is a library for Bayesian Optimization built on PyTorch.",
            "name": "py-botorch"
        },
        {
            "description": "Bottle is a fast, simple and lightweight WSGI micro web-framework for\nPython.",
            "name": "py-bottle"
        },
        {
            "description": "A collection of fast NumPy array functions written in Cython.",
            "name": "py-bottleneck"
        },
        {
            "description": "Interactive plotting for the Jupyter notebook, using d3.js and\nipywidgets.",
            "name": "py-bqplot"
        },
        {
            "description": "Bash-style brace expansion",
            "name": "py-braceexpand"
        },
        {
            "description": "Spatial indexer for geometries and morphologies",
            "name": "py-brain-indexer"
        },
        {
            "description": "Generate complex HTML+JS pages with Python.",
            "name": "py-branca"
        },
        {
            "description": "Bravado is a Yelp maintained fork of digium/swagger-py for use with\nOpenAPI Specification version 2.0 (previously known as Swagger).",
            "name": "py-bravado"
        },
        {
            "description": "bravado-core is a Python library that adds client-side and server-side\nsupport for the OpenAPI Specification v2.0.",
            "name": "py-bravado-core"
        },
        {
            "description": "nucleotide-resolution analysis of structural variants",
            "name": "py-breakseq2"
        },
        {
            "description": "This is an extension to reStructuredText and Sphinx to be able to read\nand render the Doxygen xml output.",
            "name": "py-breathe"
        },
        {
            "description": "A clock-driven simulator for spiking neural networks",
            "name": "py-brian"
        },
        {
            "description": "A clock-driven simulator for spiking neural networks",
            "name": "py-brian2"
        },
        {
            "description": "Python bindings for the Brotli compression library.",
            "name": "py-brotli"
        },
        {
            "description": "Python binding to the Brotli library.",
            "name": "py-brotlipy"
        },
        {
            "description": "This module provides a nearly complete wrapping of the Oracle/Sleepycat\nC API for the Database Environment, Database, Cursor, Log Cursor,\nSequence and Transaction objects, and each of these is exposed as a\nPython type in the bsddb3.db module.",
            "name": "py-bsddb3"
        },
        {
            "description": "A simple, correct PEP517 package builder.",
            "name": "py-build"
        },
        {
            "description": "The bx-python project is a python library and associated set of scripts\nto allow for rapid implementation of genome scale analyses.",
            "name": "py-bx-python"
        },
        {
            "description": "CacheControl is a port of the caching algorithms in httplib2 for use\nwith requests session object.",
            "name": "py-cachecontrol"
        },
        {
            "description": "A decorator for caching properties in classes.",
            "name": "py-cached-property"
        },
        {
            "description": "This module provides various memoizing collections and decorators,\nincluding variants of the Python 3 Standard Library @lru_cache function\ndecorator.",
            "name": "py-cachetools"
        },
        {
            "description": "Cachy provides a simple yet effective caching library.",
            "name": "py-cachy"
        },
        {
            "description": "cairocffi is a CFFI-based drop-in replacement for Pycairo, a set of\nPython bindings and object-oriented API for cairo. Cairo is a 2D vector\ngraphics library with support for multiple backends including image\nbuffers, PNG, PostScript, PDF, and SVG file output.",
            "name": "py-cairocffi"
        },
        {
            "description": "CairoSVG is an SVG converter based on Cairo. It can export SVG files to\nPDF, EPS, PS, and PNG files.",
            "name": "py-cairosvg"
        },
        {
            "description": "A Python library for reading Caliper .cali files.",
            "name": "py-caliper-reader"
        },
        {
            "description": "A Simple Tool to Monitor and Log Function Calls",
            "name": "py-callmonitor"
        },
        {
            "description": "The calver package is a setuptools extension for automatically defining\nyour Python package version as a calendar version.",
            "name": "py-calver"
        },
        {
            "description": "CANToolz is a framework for analysing CAN networks and devices. It\nprovides multiple modules that can be chained using CANToolz's pipe\nsystem and used by security researchers, automotive/OEM security testers\nin black-box analysis.",
            "name": "py-cantoolz"
        },
        {
            "description": "The carputils framework for running simulations with the openCARP\nsoftware.",
            "name": "py-carputils"
        },
        {
            "description": "Cartopy - a cartographic python library with matplotlib support.",
            "name": "py-cartopy"
        },
        {
            "description": "CasADi -- framework for algorithmic differentiation and numeric\noptimization",
            "name": "py-casadi"
        },
        {
            "description": "catalogue: Super lightweight function registries for your library.",
            "name": "py-catalogue"
        },
        {
            "description": "Library for retrieving information about catkin packages.",
            "name": "py-catkin-pkg"
        },
        {
            "description": "An open source Python library for structuring and unstructuring data.",
            "name": "py-cattrs"
        },
        {
            "description": "Open source library for parsing and interpreting the results of\ncomputational chemistry packages",
            "name": "py-cclib"
        },
        {
            "description": "The cdo package provides an interface to the Climate Data Operators from\nPython.",
            "name": "py-cdo"
        },
        {
            "description": "Climate Data Store API.",
            "name": "py-cdsapi"
        },
        {
            "description": "CEKit is a Container image creation tool. CEKit helps to build container\nimages from image definition files with strong focus on modularity and\ncode reuse.",
            "name": "py-cekit"
        },
        {
            "description": "Celery - Distributed Task Queue.",
            "name": "py-celery"
        },
        {
            "description": "CellProfiler cell image analysis software. CellProfiler is a free open-\nsource software designed to enable biologists without training in\ncomputer vision or programming to quantitatively measure phenotypes from\nthousands of images automatically.",
            "name": "py-cellprofiler"
        },
        {
            "description": "Core classes and components used by CellProfiler.",
            "name": "py-cellprofiler-core"
        },
        {
            "description": "An open source image processing library.",
            "name": "py-centrosome"
        },
        {
            "description": "Lightweight, extensible schema and data validation tool for Python\ndictionaries",
            "name": "py-cerberus"
        },
        {
            "description": "Certifi: A carefully curated collection of Root Certificates for\nvalidating the trustworthiness of SSL certificates while verifying the\nidentity of TLS hosts.",
            "name": "py-certifi"
        },
        {
            "description": "A simple python tool for creating certificate authorities and\ncertificates on the fly.",
            "name": "py-certipy"
        },
        {
            "description": "Units of measure as required by the Climate and Forecast (CF) metadata\nconventions.",
            "name": "py-cf-units"
        },
        {
            "description": "A convenience wrapper for using CF attributes on xarray objects.",
            "name": "py-cf-xarray"
        },
        {
            "description": "Command line program to validate and convert CITATION.cff files.",
            "name": "py-cffconvert"
        },
        {
            "description": "Foreign Function Interface for Python calling C code",
            "name": "py-cffi"
        },
        {
            "description": "Python interface to map GRIB files to the NetCDF Common Data Model\nfollowing the CF Convention using ecCodes.",
            "name": "py-cfgrib"
        },
        {
            "description": "Validate configuration and produce human readable error messages.",
            "name": "py-cfgv"
        },
        {
            "description": "Python library for decoding time units and variable values in a netCDF\nfile conforming to the Climate and Forecasting (CF) netCDF conventions",
            "name": "py-cftime"
        },
        {
            "description": "cgen offers a simple abstract syntax tree for C and related languages\n(C++/CUDA/OpenCL) to allow structured code generation from Python.",
            "name": "py-cgen"
        },
        {
            "description": "Chai - Python Mocking Made Easy",
            "name": "py-chai"
        },
        {
            "description": "Chainer is a Python-based deep learning framework aiming at\nflexibility. It provides automatic differentiation APIs based on the\ndefine-by-run approach (a.k.a. dynamic computational graphs) as well as\nobject-oriented high-level APIs to build and train neural networks. It\nalso supports CUDA/cuDNN using CuPy for high performance training and\ninference.",
            "name": "py-chainer"
        },
        {
            "description": "A code generator that fuses subsequent batched matrix multiplications\n(GEMMs) into a single GPU kernel, holding intermediate results in shared\nmemory as long as necessary.",
            "name": "py-chainforgecodegen"
        },
        {
            "description": "Clone/backport of ChainMap for Python 2.6, Python 3.2, and PyPy3 based\non Python 3.2--versions that currently lack their own ChainMap\nimplementations.",
            "name": "py-chainmap"
        },
        {
            "description": "Python Serverless Microframework for AWS.",
            "name": "py-chalice"
        },
        {
            "description": "Universal encoding detector for Python 3",
            "name": "py-chardet"
        },
        {
            "description": "Charm4py (Charm++ for Python) is a distributed computing and parallel\nprogramming framework for Python, for the productive development of\nfast, parallel and scalable applications. It is built on top of Charm++,\na C++ adaptive runtime system that has seen extensive use in the\nscientific and high-performance computing (HPC) communities across many\ndisciplines, and has been used to develop applications that run on a\nwide range of devices: from small multi-core devices up to the largest\nsupercomputers.",
            "name": "py-charm4py"
        },
        {
            "description": "The Real First Universal Charset Detector. Open, modern and actively\nmaintained alternative to Chardet.",
            "name": "py-charset-normalizer"
        },
        {
            "description": "Utilities for interfacing with plotly's Chart Studio.",
            "name": "py-chart-studio"
        },
        {
            "description": "This library provides short, fast, configurable string representations,\nand an easy API for registering your own. It's an improvement of the\nstandard library module reprlib (repr in Python 2).",
            "name": "py-cheap-repr"
        },
        {
            "description": "Assess the quality of microbial genomes recovered from isolates, single\ncells, and metagenomes",
            "name": "py-checkm-genome"
        },
        {
            "description": "Cheetah3 is a template engine and code generation tool.",
            "name": "py-cheetah3"
        },
        {
            "description": "Python interface to chemfiles",
            "name": "py-chemfiles"
        },
        {
            "description": "Highly-optimized, pure-python HTTP server",
            "name": "py-cheroot"
        },
        {
            "description": "CherryPy is a pythonic, object-oriented HTTP framework.",
            "name": "py-cherrypy"
        },
        {
            "description": "Chex is a library of utilities for helping to write reliable JAX code.",
            "name": "py-chex"
        },
        {
            "description": "A small Python 3 library containing some handy tools for handling time,\nespecially when it comes to interfacing with those pesky humans.",
            "name": "py-chronyk"
        },
        {
            "description": "Continuous Integration Information. A Python implementation of\nwatson/ci-info. Get details about the current Continuous Integration\nenvironment.",
            "name": "py-ci-info"
        },
        {
            "description": "This repository contains an implementation for the Convolutive transfer\nfunction Invariant Signal-to-Distortion Ratio objective for PyTorch as\ndescribed in the publication Convolutive Transfer Function Invariant SDR\ntraining criteria for Multi-Channel Reverberant Speech Separation",
            "name": "py-ci-sdr"
        },
        {
            "description": "cinema_lib is a set of tools and library for interacting with a Cinema\ndatabase (currently Spec A and Spec D) through Python and the command\nline tool, cinema.",
            "name": "py-cinema-lib"
        },
        {
            "description": "A set of python tools for reading, writing and viewing Cinema databases",
            "name": "py-cinemasci"
        },
        {
            "description": "Circus is a program that will let you run and watch multiple processes\nand sockets.",
            "name": "py-circus"
        },
        {
            "description": "Citations and bibliography formatter.",
            "name": "py-citeproc-py"
        },
        {
            "description": "User-generated content on the Web and in social media is often dirty.\nPreprocess your scraped data with clean-text to create a normalized text\nrepresentation.",
            "name": "py-clean-text"
        },
        {
            "description": "Cleo allows you to create beautiful and testable command-line\ninterfaces.",
            "name": "py-cleo"
        },
        {
            "description": "Python composable command line interface toolkit.",
            "name": "py-click"
        },
        {
            "description": "Enable git-like did-you-mean feature in click",
            "name": "py-click-didyoumean"
        },
        {
            "description": "click-option-group is a Click-extension package that adds option groups\nmissing in Click.",
            "name": "py-click-option-group"
        },
        {
            "description": "An extension module for py-click to register external CLI commands via\nsetuptools entry-points.",
            "name": "py-click-plugins"
        },
        {
            "description": "Subcommand REPL for click apps",
            "name": "py-click-repl"
        },
        {
            "description": "Common arguments and options for GeoJSON processing commands, using\nClick.",
            "name": "py-cligj"
        },
        {
            "description": "CliKit is a group of utilities to build beautiful and testable command\nline interfaces.",
            "name": "py-clikit"
        },
        {
            "description": "Command line arguments parsing",
            "name": "py-climate"
        },
        {
            "description": "ClimaX: A foundation model for weather and climate.",
            "name": "py-climax"
        },
        {
            "description": "Python Command-line Application Tools",
            "name": "py-clint"
        },
        {
            "description": "CLIP (Contrastive Language-Image Pre-Training) is a neural network\ntrained on a variety of (image, text) pairs. It can be instructed in\nnatural language to predict the most relevant text snippet, given an\nimage, without directly optimizing for the task, similarly to the zero-\nshot capabilities of GPT-2 and 3. We found CLIP matches the performance\nof the original ResNet50 on ImageNet \"zero-shot\" without using any of\nthe original 1.28M labeled examples, overcoming several major challenges\nin computer vision.",
            "name": "py-clip-anytorch"
        },
        {
            "description": "A cross platform clipboard operation library of Python.",
            "name": "py-clipboard"
        },
        {
            "description": "Implements means of authorization delegation on cloud-based resource\nproviders.",
            "name": "py-cloudauthz"
        },
        {
            "description": "A simple layer of abstraction over multiple cloud providers.",
            "name": "py-cloudbridge"
        },
        {
            "description": "Extended pickling support for Python objects.",
            "name": "py-cloudpickle"
        },
        {
            "description": "Scalable cluster administration Python framework - Manage node sets node\ngroups and execute commands on cluster nodes in parallel.",
            "name": "py-clustershell"
        },
        {
            "description": "Python implementation of CMA-ES Covariance Matrix Adaptation Evolution\nStr ategy for non-linear numerical optimization in Python",
            "name": "py-cma"
        },
        {
            "description": "Lightweight Covariance Matrix Adaptation Evolution Strategy (CMA-ES)\nimplementation.",
            "name": "py-cmaes"
        },
        {
            "description": "cmake-format project provides Quality Assurance (QA) tools for cmake.\nTools include cmake-annotate, cmake-format, cmake-lint, and ctest-to.",
            "name": "py-cmake-format"
        },
        {
            "description": "Parse CMake files with Python.",
            "name": "py-cmake-parser"
        },
        {
            "description": "Colormaps for Oceanography.",
            "name": "py-cmocean"
        },
        {
            "description": "CMSeq is a set of commands to provide an interface to .bam files for\ncoverage and sequence consensus.",
            "name": "py-cmseq"
        },
        {
            "description": "Python package of the CMS Machine Learning Group.",
            "name": "py-cmsml"
        },
        {
            "description": "Matplotlib colormaps from the yt project !",
            "name": "py-cmyt"
        },
        {
            "description": "CoAPthon3 is a porting to python3 of my CoAPthon library. CoAPthon3 is a\npython3 library to the CoAP protocol compliant with the RFC. Branch is\navailable for the Twisted framework.",
            "name": "py-coapthon3"
        },
        {
            "description": "CoCa, Contrastive Captioners are Image-Text Foundation Models - Pytorch",
            "name": "py-coca-pytorch"
        },
        {
            "description": "Coclust provides both a Python package which implements several diagonal\nand non-diagonal co-clustering algorithms, and a ready to use script to\nperform co- clustering",
            "name": "py-coclust"
        },
        {
            "description": "An analysis tool providing insight into the portability and\nmaintainability of an application's source code.",
            "name": "py-codebasin"
        },
        {
            "description": "CodePy is a C metaprogramming toolkit for Python. It handles two aspects\nof metaprogramming: - Generating C source code. - Compiling this source\ncode and dynamically loading it into the Python interpreter.",
            "name": "py-codepy"
        },
        {
            "description": "check code for common misspellings",
            "name": "py-codespell"
        },
        {
            "description": "Lightweight Python STOMP message broker.",
            "name": "py-coilmq"
        },
        {
            "description": "Tools to work with colab from google.",
            "name": "py-colabtools"
        },
        {
            "description": "Cross-platform colored terminal text.",
            "name": "py-colorama"
        },
        {
            "description": "A collection of perceptually acccurate 256-color colormaps for use with\nPython plotting programs like Bokeh, Matplotlib, HoloViews, and\nDatashader.",
            "name": "py-colorcet"
        },
        {
            "description": "Colorful worry-free console applications for Linux, Mac OS X, and\nWindows.",
            "name": "py-colorclass"
        },
        {
            "description": "Simple library for color and formatting to terminal Very simple Python\nlibrary for color and formatting in terminal. Collection of color codes\nand names for 256 color terminal setups. The following is a list of 256\ncolors for Xterm, containing an example of the displayed color, Xterm\nName, Xterm Number and HEX.",
            "name": "py-colored"
        },
        {
            "description": "Automatically color Python's uncaught exception tracebacks.",
            "name": "py-colored-traceback"
        },
        {
            "description": "Colored terminal output for Python's logging module",
            "name": "py-coloredlogs"
        },
        {
            "description": "Terminal string styling done right, in Python.",
            "name": "py-colorful"
        },
        {
            "description": "Tools for color research",
            "name": "py-colorio"
        },
        {
            "description": "A colored formatter for the python logging module",
            "name": "py-colorlog"
        },
        {
            "description": "Color scales in Python for humans.",
            "name": "py-colorlover"
        },
        {
            "description": "Color math and conversion library.",
            "name": "py-colormath"
        },
        {
            "description": "ColorPy is a Python package to convert physical descriptions of light -\nspectra of light intensity vs. wavelength - into RGB colors that can be\ndrawn on a computer screen. It provides a nice set of attractive plots\nthat you can make of such spectra, and some other color related\nfunctions as well.",
            "name": "py-colorpy"
        },
        {
            "description": "A powerful, accurate, and easy-to-use Python library for doing\ncolorspace conversions.",
            "name": "py-colorspacious"
        },
        {
            "description": "An integrated large-scale model training system with efficient\nparallelization techniques.",
            "name": "py-colossalai"
        },
        {
            "description": "converts and manipulates various color representation (HSL, RVB, web,\nX11, ...)",
            "name": "py-colour"
        },
        {
            "description": "Jupyter Python Comm implementation, for usage in ipykernel, xeus-python\netc.",
            "name": "py-comm"
        },
        {
            "description": "Common tools and data structures implemented in pure python.",
            "name": "py-common"
        },
        {
            "description": "commonmark.py is a pure Python port of jgm's commonmark.js, a Markdown\nparser and renderer for the CommonMark specification, using only native\nmodules.",
            "name": "py-commonmark"
        },
        {
            "description": "Conan C/C++ package manager",
            "name": "py-conan"
        },
        {
            "description": "Helper functions for injecting a conda environment into the current\npython environment.",
            "name": "py-conda-inject"
        },
        {
            "description": "Project to handle conda recipes.",
            "name": "py-conda-souschef"
        },
        {
            "description": "The sweetest config system for Python",
            "name": "py-confection"
        },
        {
            "description": "Applications with more than a handful of user-settable options are best\nconfigured through a combination of command line args, config files,\nhard-coded defaults, and in some cases, environment variables. Python's\ncommand line parsing modules such as argparse have very limited support\nfor config files and environment variables, so this module extends\nargparse to add these features.",
            "name": "py-configargparse"
        },
        {
            "description": "Config file reading, writing and validation.",
            "name": "py-configobj"
        },
        {
            "description": "This library brings the updated configparser from Python 3.5 to Python\n2.6-3.5.",
            "name": "py-configparser"
        },
        {
            "description": "Creation and manipulation of parameter configuration spaces for\nautomated algorithm configuration and hyperparameter tuning.",
            "name": "py-configspace"
        },
        {
            "description": "Confluent's Kafka Python Client.",
            "name": "py-confluent-kafka"
        },
        {
            "description": "Thread-safe connection pool for python.",
            "name": "py-connectionpool"
        },
        {
            "description": "Additional utilities for click.",
            "name": "py-consolekit"
        },
        {
            "description": "Symbolic constants in Python",
            "name": "py-constantly"
        },
        {
            "description": "Context geo-tiles in Python.",
            "name": "py-contextily"
        },
        {
            "description": "contextlib2 is a backport of the standard library's contextlib module to\nearlier Python versions.",
            "name": "py-contextlib2"
        },
        {
            "description": "A timer as a context manager. contexttimer provides you with a couple of\nutilities to quickly measure the execution time of a code block or a\nfunction.",
            "name": "py-contexttimer"
        },
        {
            "description": "A clean and simple data loading library for Continual Learning",
            "name": "py-continuum"
        },
        {
            "description": "Python library for calculating contours of 2D quadrilateral grids.",
            "name": "py-contourpy"
        },
        {
            "description": "A python package for making stacked area plots of contributions over\ntime.",
            "name": "py-contrib"
        },
        {
            "description": "The Python Control Systems Library is a Python module that implements\nbasic operations for analysis and design of feedback control systems.",
            "name": "py-control"
        },
        {
            "description": "Converts between Gregorian dates and other calendar systems.Calendars\nincluded: Baha'i, French Republican, Hebrew, Indian Civil, Islamic, ISO,\nJulian, Mayan and Persian.",
            "name": "py-convertdate"
        },
        {
            "description": "This toolkit contains tools to extract conversational features and\nanalyze social phenomena in conversations, using a single unified\ninterface inspired by (and compatible with) scikit-learn.",
            "name": "py-convokit"
        },
        {
            "description": "A command-line utility that creates projects from cookiecutters (project\ntemplates). E.g. Python package projects, jQuery plugin projects.",
            "name": "py-cookiecutter"
        },
        {
            "description": "Copulas is a Python library for modeling multivariate distributions and\nsampling from them using copula functions. Given a table containing\nnumerical data, we can use Copulas to learn the distribution and later\non generate new synthetic rows following the same statistical\nproperties.",
            "name": "py-copulas"
        },
        {
            "description": "Make some beautiful corner plots.",
            "name": "py-corner"
        },
        {
            "description": "A generic correction library",
            "name": "py-correctionlib"
        },
        {
            "description": "Blazing fast correlation functions on the CPU.",
            "name": "py-corrfunc"
        },
        {
            "description": "Counter package defines the \"counter.Counter\" class similar to bags or\nmultisets in other languages.",
            "name": "py-counter"
        },
        {
            "description": "plugin core for use by pytest-cov, nose-cov and nose2-cov",
            "name": "py-cov-core"
        },
        {
            "description": "Testing coverage checker for python",
            "name": "py-coverage"
        },
        {
            "description": "coveralls.io is a service for publishing your coverage stats online.",
            "name": "py-coveralls"
        },
        {
            "description": "Parse C++ header files and generate a data structure representing the\nclass",
            "name": "py-cppheaderparser"
        },
        {
            "description": "C++ headers for C extension development",
            "name": "py-cppy"
        },
        {
            "description": "Crashtest is a Python library that makes exceptions handling and\ninspection easier.",
            "name": "py-crashtest"
        },
        {
            "description": "Python module for generating objects that compute the Cyclic Redundancy\nCheck (CRC)",
            "name": "py-crcmod"
        },
        {
            "description": "croniter provides iteration for datetime object with cron like format.",
            "name": "py-croniter"
        },
        {
            "description": "CrossMap is a program for convenient conversion of genome coordinates\n(or annotation files) between different assemblies",
            "name": "py-crossmap"
        },
        {
            "description": "The crYOLO boxmanger was written to produce annotation data for crYOLO\nas deep learning based particle picking procedure for cryo electro\nmicroscopy.",
            "name": "py-cryolobm"
        },
        {
            "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers",
            "name": "py-cryptography"
        },
        {
            "description": "A CSS Cascading Style Sheets library for Python.",
            "name": "py-css-parser"
        },
        {
            "description": "Python-cssselect parses CSS3 Selectors and translate them to XPath 1.0\nexpressions. Such expressions can be used in lxml or another XPath\nengine to find the matching elements in an XML or HTML document.",
            "name": "py-cssselect"
        },
        {
            "description": "cssselect2 is a straightforward implementation of CSS4 Selectors for\nmarkup documents (HTML, XML, etc.) that can be read by ElementTree-like\nparsers (including cElementTree, lxml, html5lib, etc.)",
            "name": "py-cssselect2"
        },
        {
            "description": "A CSS Cascading Style Sheets library for Python.",
            "name": "py-cssutils"
        },
        {
            "description": "A library of utilities for working with CSV, the king of tabular file\nformats",
            "name": "py-csvkit"
        },
        {
            "description": "CTGAN is a collection of Deep Learning based Synthetic Data Generators\nfor single table data, which are able to learn from real data and\ngenerate synthetic clones with high fidelity.",
            "name": "py-ctgan"
        },
        {
            "description": "Built based on the Apache Arrow columnar memory format, cuDF is a GPU\nDataFrame library for loading, joining, aggregating, filtering, and\notherwise manipulating data.",
            "name": "py-cudf"
        },
        {
            "description": "Productivity Tools for Plotly + Pandas. This library binds the power of\nplotly with the flexibility of pandas for easy plotting.",
            "name": "py-cufflinks"
        },
        {
            "description": "cuML is a suite of libraries that implement machine learning algorithms\nand mathematical primitives functions that share compatible APIs with\nother RAPIDS projects.",
            "name": "py-cuml"
        },
        {
            "description": "CuPy is an open-source array library accelerated with NVIDIA CUDA. CuPy\nprovides GPU accelerated computing with Python. CuPy uses CUDA-related\nlibraries including cuBLAS, cuDNN, cuRand, cuSolver, cuSPARSE, cuFFT and\nNCCL to make full use of the GPU architecture.",
            "name": "py-cupy"
        },
        {
            "description": "Current module relative paths and imports",
            "name": "py-current"
        },
        {
            "description": "Module to easily plot the currents in electrical neuron models.",
            "name": "py-currentscape"
        },
        {
            "description": "scipy Linear operators for curvature matrices in PyTorch.",
            "name": "py-curvlinops-for-pytorch"
        },
        {
            "description": "Custodian is a simple, robust and flexible just-in-time (JIT) job\nmanagement framework written in Python. Using custodian, you can create\nwrappers that perform error checking, job management and error recovery.\nIt has a simple plugin framework that allows you to develop specific job\nmanagement workflows for different applications.",
            "name": "py-custodian"
        },
        {
            "description": "A Python package that provides customized docstring inheritance schemes\nbetween derived classes and their parents.",
            "name": "py-custom-inherit"
        },
        {
            "description": "Cutadapt finds and removes adapter sequences, primers, poly-A tails and\nother types of unwanted sequence from your high-throughput sequencing\nreads.",
            "name": "py-cutadapt"
        },
        {
            "description": "CVXOPT is a free software package for convex optimization based on the\nPython programming language.",
            "name": "py-cvxopt"
        },
        {
            "description": "Convex optimization, for everyone.",
            "name": "py-cvxpy"
        },
        {
            "description": "Common Workflow Language standalone document upgrader",
            "name": "py-cwl-upgrader"
        },
        {
            "description": "Python Utilities and Autogenerated Classes for loading and parsing CWL\nv1.0, CWL v1.1, and CWL v1.2 documents.",
            "name": "py-cwl-utils"
        },
        {
            "description": "Common workflow language reference implementation",
            "name": "py-cwltool"
        },
        {
            "description": "Python interface to Oracle",
            "name": "py-cx-oracle"
        },
        {
            "description": "Composable style cycles.",
            "name": "py-cycler"
        },
        {
            "description": "Cython wrapper for khash-sets/maps, efficient implementation of isin and\nunique.",
            "name": "py-cykhash"
        },
        {
            "description": "A workflow engine for cycling systems.",
            "name": "py-cylc-flow"
        },
        {
            "description": "A Cylc plugin providing support for the Rose rose-suite.conf file.",
            "name": "py-cylc-rose"
        },
        {
            "description": "Cylc UI Server.",
            "name": "py-cylc-uiserver"
        },
        {
            "description": "A Python interface for CLP, CBC, and CGL. CyLP is a Python interface to\nCOIN-OR's Linear and mixed-integer program solvers (CLP, CBC, and CGL).\nCyLP's unique feature is that you can use it to alter the solution\nprocess of the solvers from within Python.",
            "name": "py-cylp"
        },
        {
            "description": "Manage calls to calloc/free through Cython.",
            "name": "py-cymem"
        },
        {
            "description": "The Python standard library's OrderedDict ported to Cython. A drop-in\nreplacement that is 2-6x faster.",
            "name": "py-cyordereddict"
        },
        {
            "description": "The Cython compiler for writing C extensions for the Python language.",
            "name": "py-cython"
        },
        {
            "description": "cython_bbox is widely used in object detection tasks. To my best\nknowledge, it was first implemented in Faster-RCNN. Since then, almost\nall object detection projects use the source code directly. In order to\nuse it in standalone code snippets or small projects, I make it a pypi\nmodule. The cython_bbox.pyx is totally borrowed from Faster-RCNN. Thanks\nRBG!",
            "name": "py-cython-bbox"
        },
        {
            "description": "fast vcf parsing with cython + htslib",
            "name": "py-cyvcf2"
        },
        {
            "description": "d2to1 (the 'd' is for 'distutils') allows using distutils2-like\nsetup.cfg files for a package's metadata with a distribute/setuptools\nsetup.py script.",
            "name": "py-d2to1"
        },
        {
            "description": "DaCe is a fast parallel programming framework that takes code in\nPython/NumPy and other programming languages, and maps it to high-\nperformance CPU, GPU, and FPGA programs, which can be optimized\nprogrammatically or interactively.",
            "name": "py-dace"
        },
        {
            "description": "Simple creation of data classes from dictionaries.",
            "name": "py-dacite"
        },
        {
            "description": "Fit population genetic models of demography and selection using\ndiffusion approximations to the allele frequency spectrum",
            "name": "py-dadi"
        },
        {
            "description": "Trans-Learn is a Transfer Learning library based on pure PyTorch with\nhigh performance and friendly API.",
            "name": "py-dalib"
        },
        {
            "description": "Pre- and post-processing tools for DAMASK",
            "name": "py-damask"
        },
        {
            "description": "Python utilities to interact with Darshan log records of HPC\napplications.",
            "name": "py-darshan"
        },
        {
            "description": "Dasbus is a DBus library written in Python 3, based on GLib and inspired\nby pydbus.",
            "name": "py-dasbus"
        },
        {
            "description": "Dash is the most downloaded, trusted Python framework for building ML &\ndata science web apps.",
            "name": "py-dash"
        },
        {
            "description": "Bootstrap themed components for use in Plotly Dash",
            "name": "py-dash-bootstrap-components"
        },
        {
            "description": "SVG support library for Plotly/Dash",
            "name": "py-dash-svg"
        },
        {
            "description": "Dask is a flexible parallel computing library for analytics.",
            "name": "py-dask"
        },
        {
            "description": "Dask DataFrames with query optimization.",
            "name": "py-dask-expr"
        },
        {
            "description": "Dask-glm is a library for fitting Generalized Linear Models on large\ndatasets.",
            "name": "py-dask-glm"
        },
        {
            "description": "Scalable Machine Learning with Dask.",
            "name": "py-dask-ml"
        },
        {
            "description": "Deploying Dask using MPI4Py.",
            "name": "py-dask-mpi"
        },
        {
            "description": "Sphinx theme for Dask documentation.",
            "name": "py-dask-sphinx-theme"
        },
        {
            "description": "A command line interface for Databricks.",
            "name": "py-databricks-cli"
        },
        {
            "description": "A backport of the dataclasses module for Python 3.6",
            "name": "py-dataclasses"
        },
        {
            "description": "Easily serialize dataclasses to and from JSON.",
            "name": "py-dataclasses-json"
        },
        {
            "description": "An analysis environment for satellite and other earth observation data.",
            "name": "py-datacube"
        },
        {
            "description": "data distribution geared toward scientific datasets. DataLad makes data\nmanagement and data distribution more accessible. To do that, it stands\non the shoulders of Git and Git-annex to deliver a decentralized system\nfor data exchange. This includes automated ingestion of data from online\nportals and exposing it in readily usable form as Git(-annex)\nrepositories, so-called datasets. The actual data storage and permission\nmanagement, however, remains with the original data providers.",
            "name": "py-datalad"
        },
        {
            "description": "DataLad extension package for working with containerized environments",
            "name": "py-datalad-container"
        },
        {
            "description": "DataLad extension package for deprecated functionality that was phased\nout in the core package.",
            "name": "py-datalad-deprecated"
        },
        {
            "description": "DataLad extension for raw data capturing and conversion workflows",
            "name": "py-datalad-hirni"
        },
        {
            "description": "This software implements the metadata model that datalad and datalad-\nmetalad will use in the future (datalad-metalad>=0.3.0) to handle\nmetadata.",
            "name": "py-datalad-metadata-model"
        },
        {
            "description": "DataLad extension for semantic metadata handling",
            "name": "py-datalad-metalad"
        },
        {
            "description": "DataLad extension package for neuro/medical imaging",
            "name": "py-datalad-neuroimaging"
        },
        {
            "description": "DataLad extension for exposing commands via a web request API",
            "name": "py-datalad-webapp"
        },
        {
            "description": "Datasets is a lightweight library providing two main features: one-line\ndataloaders for many public datasets and efficient data pre-processing.",
            "name": "py-datasets"
        },
        {
            "description": "Datashader is a data rasterization pipeline for automating the process\nof creating meaningful representations of large amounts of data",
            "name": "py-datashader"
        },
        {
            "description": "dateparser -- python parser for human readable dates",
            "name": "py-dateparser"
        },
        {
            "description": "Various utilities for working with date and datetime objects.",
            "name": "py-dateutils"
        },
        {
            "description": "Super-fast, efficiently stored Trie for Python (2.x and 3.x). Uses\nlibdatrie.",
            "name": "py-datrie"
        },
        {
            "description": "Pure python package for reading/writing dBase, FoxPro, and Visual FoxPro\n.dbf files (including memos)",
            "name": "py-dbf"
        },
        {
            "description": "DBF is a file format used by databases such dBase, Visual FoxPro, and\nFoxBase+. This library reads DBF files and returns the data as native\nPython data types for further processing. It is primarily intended for\nbatch jobs and one-off scripts.",
            "name": "py-dbfread"
        },
        {
            "description": "Reorganising NIfTI files from dcm2niix into the Brain Imaging Data\nStructure.",
            "name": "py-dcm2bids"
        },
        {
            "description": "Distributed Evolutionary Algorithms in Python.",
            "name": "py-deap"
        },
        {
            "description": "A collection of Python deprecation patterns and strategies that help\nyou collect your technical debt in a non-destructive manner.",
            "name": "py-debtcollector"
        },
        {
            "description": "An implementation of the Debug Adapter Protocol for Python.",
            "name": "py-debugpy"
        },
        {
            "description": "The aim of the decorator module it to simplify the usage of decorators\nfor the average programmer, and to popularize decorators by showing\nvarious non-trivial examples.",
            "name": "py-decorator"
        },
        {
            "description": "Deep Difference and Search of any Python object/data..",
            "name": "py-deepdiff"
        },
        {
            "description": "DeepEcho is a Synthetic Data Generation Python library for mixed-type,\nmultivariate time series.",
            "name": "py-deepecho"
        },
        {
            "description": "Scalable asynchronous hyperparameter optimization, neural architecture\nsearch, and parallel ensemble of predictive models.",
            "name": "py-deephyper"
        },
        {
            "description": "deep-significance: Easy and Better Significance Testing for Deep Neural\nNetworks",
            "name": "py-deepsig"
        },
        {
            "description": "DeepSig - Predictor of signal peptides in proteins based on deep\nlearning",
            "name": "py-deepsig-biocomp"
        },
        {
            "description": "DeepSpeed library. DeepSpeed enables world's most powerful language\nmodels like MT-530B and BLOOM. It is an easy-to-use deep learning\noptimization software suite that powers unprecedented scale and speed\nfor both training and inference.",
            "name": "py-deepspeed"
        },
        {
            "description": "deepTools addresses the challenge of handling the large amounts of data\nthat are now routinely generated from DNA sequencing centers.",
            "name": "py-deeptools"
        },
        {
            "description": "A python module creating/accessing GTF-based interval trees with\nassociated meta-data.",
            "name": "py-deeptoolsintervals"
        },
        {
            "description": "defusing XML bombs and other exploits",
            "name": "py-defusedxml"
        },
        {
            "description": "demjson is a Python language module for encoding, decoding, and syntax-\nchecking JSON data",
            "name": "py-demjson"
        },
        {
            "description": "DendroPy is a Python library for phylogenetic computing. It provides\nclasses and functions for the simulation, processing, and manipulation\nof phylogenetic trees and character matrices, and supports the reading\nand writing of phylogenetic data in a range of formats, such as NEXUS,\nNEWICK, NeXML, Phylip, FASTA, etc.",
            "name": "py-dendropy"
        },
        {
            "description": "Python @deprecat decorator to deprecate old python classes, functions or\nmethods.",
            "name": "py-deprecat"
        },
        {
            "description": "Python @deprecated decorator to deprecate old python classes, functions\nor methods.",
            "name": "py-deprecated"
        },
        {
            "description": "The deprecation library provides a deprecated decorator and a\nfail_if_not_removed decorator for your tests.",
            "name": "py-deprecation"
        },
        {
            "description": "Wrapper providing support for deprecated aliases.",
            "name": "py-deprecation-alias"
        },
        {
            "description": "Use Shapely or GeoJSON-like geometric objects as matplotlib paths and\npatches",
            "name": "py-descartes"
        },
        {
            "description": "Devito is a Python package to implement optimized stencil computation.\n(e.g., finite differences, image processing, machine learning) from\nhigh-level symbolic problem definitions. Devito builds on SymPy and\nemploys automated code generation and just-in-time compilation to\nexecute optimized computational kernels on several computer platforms,\nincluding CPUs, GPUs, and clusters thereof.",
            "name": "py-devito"
        },
        {
            "description": "Library for interaction with and instrumentation of remote devices.",
            "name": "py-devlib"
        },
        {
            "description": "Deep Graph Library (DGL). DGL is an easy-to-use, high performance and\nscalable Python package for deep learning on graphs. DGL is framework\nagnostic, meaning if a deep graph model is a component of an end-to-end\napplication, the rest of the logics can be implemented in any major\nframeworks, such as PyTorch, Apache MXNet or TensorFlow.",
            "name": "py-dgl"
        },
        {
            "description": "A Modified version of scikit-optimize a Sequential model-based\noptimization toolbox for DeepHyper. Scikit-Optimize, or skopt, is a\nsimple and efficient library to minimize (very) expensive and noisy\nblack-box functions. It implements several methods for sequential model-\nbased optimization. skopt aims to be accessible and easy to use in many\ncontexts. The library is built on top of NumPy, SciPy and Scikit-Learn.",
            "name": "py-dh-scikit-optimize"
        },
        {
            "description": "A \u03bc-library for constructing cascading style sheets from Python\ndictionaries.",
            "name": "py-dict2css"
        },
        {
            "description": "Dictdiffer is a helper module that helps you to diff and patch\ndictionares.",
            "name": "py-dictdiffer"
        },
        {
            "description": "A set of Python dictionary objects where keys can be accessed as\ninstance attributes.",
            "name": "py-dictobj"
        },
        {
            "description": "Serialize all of python",
            "name": "py-dill"
        },
        {
            "description": "Dinosaur: differentiable dynamics for global atmospheric modeling.",
            "name": "py-dinosaur"
        },
        {
            "description": "Diffusion MRI utilities in python. DIPY is the paragon 3D/4D+ imaging\nlibrary in Python. Contains generic methods for spatial normalization,\nsignal processing, machine learning, statistical analysis and\nvisualization of medical images. Additionally, it contains specialized\nmethods for computational anatomy including diffusion, perfusion and\nstructural imaging.",
            "name": "py-dipy"
        },
        {
            "description": "JSON decoder for Python that can extract data from the muck",
            "name": "py-dirtyjson"
        },
        {
            "description": "Dynamically distribute a list of tasks over a pool of compute resources.",
            "name": "py-disbatch"
        },
        {
            "description": "Test discovery for unittest.",
            "name": "py-discover"
        },
        {
            "description": "Disk Cache -- Disk and file backed persistent cache.",
            "name": "py-diskcache"
        },
        {
            "description": "Parse and create Python distribution metadata.",
            "name": "py-dist-meta"
        },
        {
            "description": "This package provides helpers for computing similarities between\narbitrary sequences. Included metrics are Levenshtein, Hamming, Jaccard,\nand Sorensen distance, plus some bonuses.",
            "name": "py-distance"
        },
        {
            "description": "Distribution utilities",
            "name": "py-distlib"
        },
        {
            "description": "Distributed scheduler for Dask",
            "name": "py-distributed"
        },
        {
            "description": "Distro - an OS platform information API.",
            "name": "py-distro"
        },
        {
            "description": "The Web framework for perfectionists with deadlines.",
            "name": "py-django"
        },
        {
            "description": "DLCpar is a reconciliation method for inferring gene duplications,\nlosses, and coalescence (accounting for incomplete lineage sorting).",
            "name": "py-dlcpar"
        },
        {
            "description": "A low-level profiler for capture I/O calls from deep learning\napplications.",
            "name": "py-dlio-profiler-py"
        },
        {
            "description": "JAX-based neural network library",
            "name": "py-dm-haiku"
        },
        {
            "description": "tree is a library for working with nested data structures. In a way,\ntree generalizes the builtin map() function which only supports flat\nsequences, and allows to apply a function to each leaf preserving the\noverall structure.",
            "name": "py-dm-tree"
        },
        {
            "description": "Read and write FASTQ and FASTA",
            "name": "py-dnaio"
        },
        {
            "description": "DNS toolkit",
            "name": "py-dnspython"
        },
        {
            "description": "A Python library for the Docker Engine API.",
            "name": "py-docker"
        },
        {
            "description": "Python bindings for the docker credentials store API",
            "name": "py-dockerpy-creds"
        },
        {
            "description": "Command-line interface description language.",
            "name": "py-docopt"
        },
        {
            "description": "Command-line interface description language.",
            "name": "py-docopt-ng"
        },
        {
            "description": "Parse Python docstrings in reST, Google and Numpydoc format.",
            "name": "py-docstring-parser"
        },
        {
            "description": "On the fly conversion of Python docstrings to markdown.",
            "name": "py-docstring-to-markdown"
        },
        {
            "description": "Docutils is an open-source text processing system for processing\nplaintext documentation into useful formats, such as HTML, LaTeX, man-\npages, open-document or XML. It includes reStructuredText, the easy to\nread, easy to use, what-you-see-is-what-you-get plaintext markup\nlanguage.",
            "name": "py-docutils"
        },
        {
            "description": "PEP 561 based Type information for docutils.",
            "name": "py-docutils-stubs"
        },
        {
            "description": "dogpile.cache is a Python caching API which provides a generic interface\nto caching backends of any variety.",
            "name": "py-dogpile-cache"
        },
        {
            "description": "doit - Automation Tool.",
            "name": "py-doit"
        },
        {
            "description": "Dom's tools for Tom's Obvious, Minimal Language.",
            "name": "py-dom-toml"
        },
        {
            "description": "Helpful functions for Python",
            "name": "py-domdf-python-tools"
        },
        {
            "description": "Dominate is a Python library for creating and manipulating HTML\ndocuments using an elegant DOM API. It allows you to write HTML pages in\npure Python very concisely, which eliminates the need to learn another\ntemplate language, and lets you take advantage of the more powerful\nfeatures of Python.",
            "name": "py-dominate"
        },
        {
            "description": "Donfig is a python library making package and script configuration easy",
            "name": "py-donfig"
        },
        {
            "description": "`DotMap` is a dot-access `dict` subclass that allows dot access to\nitems.",
            "name": "py-dotmap"
        },
        {
            "description": ".Net Core 2.1 runtime.",
            "name": "py-dotnetcore2"
        },
        {
            "description": "Stochastic optimization routines for Theano",
            "name": "py-downhill"
        },
        {
            "description": "A Doxygen filter for Python. A more Pythonic version of doxypy, a\nDoxygen filter for Python.",
            "name": "py-doxypypy"
        },
        {
            "description": "Filesystem-like pathing and searching for dictionaries.",
            "name": "py-dpath"
        },
        {
            "description": "dRep is a python program for rapidly comparing large numbers of genomes.\ndRep can also \"de-replicate\" a genome set by identifying groups of\nhighly similar genomes and choosing the best representative genome for\neach genome set.",
            "name": "py-drep"
        },
        {
            "description": "Python wrapper around the C DRMAA library.",
            "name": "py-drmaa"
        },
        {
            "description": "a lightweight Javascript-aware, headless web scraping library for Python",
            "name": "py-dryscrape"
        },
        {
            "description": "Publications (and donations) tracer.",
            "name": "py-duecredit"
        },
        {
            "description": "Dulwich aims to provide an interface to Git repos (both local and\nremote) that doesn't call out to Git directory, but instead uses pure\nPython.",
            "name": "py-dulwich"
        },
        {
            "description": "Dynamic version generation.",
            "name": "py-dunamai"
        },
        {
            "description": "Git for data scientists - manage your code and data together.",
            "name": "py-dvc"
        },
        {
            "description": "DXchange provides an interface with tomoPy and raw tomographic data\ncollected at different synchrotron facilities.",
            "name": "py-dxchange"
        },
        {
            "description": "Scientific Data Exchange [A1] is a set of guidelines for storing\nscientific data and metadata in a Hierarchical Data Format 5 [B6] file.",
            "name": "py-dxfile"
        },
        {
            "description": "Dynaconf is a dynamic configuration management package for Python\nprojects",
            "name": "py-dynaconf"
        },
        {
            "description": "dynim is a pure-python package to perform dynamic-importance (DynIm)\nsampling on a high-dimensional data set.",
            "name": "py-dynim"
        },
        {
            "description": "Earth-2 Model Intercomparison Project (MIP). A python framework that\nenables climate researchers and scientists to explore and experiment\nwith AI models for weather and climate.",
            "name": "py-earth2mip"
        },
        {
            "description": "This package allows developers to interact with Google Earth Engine\nusing the Python programming language.",
            "name": "py-earthengine-api"
        },
        {
            "description": "Collection of easyblocks for EasyBuild, a software build and\ninstallation framework for (scientific) software on HPC systems.",
            "name": "py-easybuild-easyblocks"
        },
        {
            "description": "Collection of easyconfig files for EasyBuild, a software build and\ninstallation framework for (scientific) software on HPC systems.",
            "name": "py-easybuild-easyconfigs"
        },
        {
            "description": "The core of EasyBuild, a software build and installation framework for\n(scientific) software on HPC systems.",
            "name": "py-easybuild-framework"
        },
        {
            "description": "Python interface to the ecCodes GRIB and BUFR decoder/encoder.",
            "name": "py-eccodes"
        },
        {
            "description": "ECDSA cryptographic signature library (pure python)",
            "name": "py-ecdsa"
        },
        {
            "description": "A package to download ECMWF open data.",
            "name": "py-ecmwf-opendata"
        },
        {
            "description": "A Python package that wraps some of ECMWF libraries to be used by Python\ninterfaces to ECMWF software.",
            "name": "py-ecmwflibs"
        },
        {
            "description": "This is the Python package for ECOS: Embedded Cone Solver.",
            "name": "py-ecos"
        },
        {
            "description": "Versioned, Python packaged EDAM ontology (http://edamontology.org/)\ndata.",
            "name": "py-edam-ontology"
        },
        {
            "description": "Generic class for Edf files manipulation.",
            "name": "py-edffile"
        },
        {
            "description": "Read and write EDF/EDF+ files.",
            "name": "py-edfio"
        },
        {
            "description": "Library to read/write EDF+/BDF+ files written in pure Python by the same\nauthor as the original EDFlib.",
            "name": "py-edflib-python"
        },
        {
            "description": "A Python library for creating \"editable wheels\".",
            "name": "py-editables"
        },
        {
            "description": "Fast implementation of the edit distance (Levenshtein distance).",
            "name": "py-editdistance"
        },
        {
            "description": "Lightweight, super fast library for sequence alignment using edit\n(Levenshtein) distance.",
            "name": "py-edlib"
        },
        {
            "description": "I/O support for EEGLAB files in Python.",
            "name": "py-eeglabio"
        },
        {
            "description": "Code Editor-style reprs for Earth Engine data in a Jupyter notebook.",
            "name": "py-eerepr"
        },
        {
            "description": "The Electrophys Feature Extract Library (eFEL) allows neuroscientists to\nautomatically extract features from time series data recorded from\nneurons (both in vitro and in silico). Examples are the action potential\nwidth and amplitude in voltage traces recorded during whole-cell patch\nclamp experiments. The user of the library provides a set of traces and\nselects the features to be calculated. The library will then extract the\nrequested features and return the values to the user.",
            "name": "py-efel"
        },
        {
            "description": "EfficientNet implemented in PyTorch.",
            "name": "py-efficientnet-pytorch"
        },
        {
            "description": "eg provides examples of common uses of command line tools.",
            "name": "py-eg"
        },
        {
            "description": "Convolutions as tensor contractions (einsums) for PyTorch.",
            "name": "py-einconv"
        },
        {
            "description": "Flexible and powerful tensor operations for readable and reliable code.\nSupports numpy, pytorch, tensorflow, and others.",
            "name": "py-einops"
        },
        {
            "description": "Transport classes and utilities shared among Python Elastic client\nlibraries",
            "name": "py-elastic-transport"
        },
        {
            "description": "Python client for Elasticsearch",
            "name": "py-elasticsearch"
        },
        {
            "description": "Elasticsearch DSL is a high-level library whose aim is to help with\nwriting and running queries against Elasticsearch. It is built on top of\nthe official low-level client (elasticsearch-py).",
            "name": "py-elasticsearch-dsl"
        },
        {
            "description": "Elephant is a package for analysis of electrophysiology data in Python",
            "name": "py-elephant"
        },
        {
            "description": "Python script to download global terrain digital elevation models, SRTM\n30m DEM and SRTM 90m DEM.",
            "name": "py-elevation"
        },
        {
            "description": "Easy way to keep track of exponential moving average version of your\npytorch module",
            "name": "py-ema-pytorch"
        },
        {
            "description": "A robust email address syntax and deliverability validation library.",
            "name": "py-email-validator"
        },
        {
            "description": "Embedding reader is a module to make it easy to read efficiently a large\ncollection of embeddings stored in any file system.",
            "name": "py-embedding-reader"
        },
        {
            "description": "emcee is an MIT licensed pure-Python implementation of Goodman & Weare's\nAffine Invariant Markov chain Monte Carlo (MCMC) Ensemble sampler.",
            "name": "py-emcee"
        },
        {
            "description": "Emoji for Python.",
            "name": "py-emoji"
        },
        {
            "description": "A powerful and robust templating system for Python",
            "name": "py-empy"
        },
        {
            "description": "Discover and load entry points from installed packages.",
            "name": "py-entrypoints"
        },
        {
            "description": "Tools to expand Python's enum module.",
            "name": "py-enum-tools"
        },
        {
            "description": "Envisage is a Python-based framework for building extensible\napplications, that is, applications whose functionality can be extended\nby adding \"plug-ins\". Envisage provides a standard mechanism for\nfeatures to be added to an application, whether by the original\ndeveloper or by someone else. In fact, when you build an application\nusing Envisage, the entire application consists primarily of plug-ins.\nIn this respect, it is similar to the Eclipse and Netbeans frameworks\nfor Java applications.",
            "name": "py-envisage"
        },
        {
            "description": "PyEphem provides an ephem Python package for performing high-precision\nastronomy computations.",
            "name": "py-ephem"
        },
        {
            "description": "eprosima Fast DDS (formerly Fast RTPS) is a C++ implementation of the\nDDS (Data Distribution Service) standard of the OMG (Object Management\nGroup). eProsima Fast DDS implements the RTPS (Real Time Publish\nSubscribe) protocol, which provides publisher-subscriber communications\nover unreliable transports such as UDP, as defined and maintained by the\nObject Management Group (OMG) consortium. This is the python interface\nfor eprosima Fast DDS.",
            "name": "py-eprosima-fastdds"
        },
        {
            "description": "Epydoc is a tool for generating API documentation documentation for\nPython modules, based on their docstrings.",
            "name": "py-epydoc"
        },
        {
            "description": "General Equation Parser and Evaluator",
            "name": "py-equation"
        },
        {
            "description": "Equinox is a comprehensive JAX library that provides a wide range of\ntools and features not found in core JAX, including neural networks with\nPyTorch-like syntax, filtered APIs for transformations, PyTree\nmanipulation routines, and advanced features like runtime errors.",
            "name": "py-equinox"
        },
        {
            "description": "ESPResSo is a highly versatile software package for performing and\nanalyzing scientific Molecular Dynamics many-particle simulations of\ncoarse-grained atomistic or bead-spring models as they are used in soft\nmatter research in physics, chemistry and molecular biology. It can be\nused to simulate systems such as polymers, liquid crystals, colloids,\npolyelectrolytes, ferrofluids and biological systems, for example DNA\nand lipid membranes. It also has a DPD and lattice Boltzmann solver for\nhydrodynamic interactions, and allows several particle couplings to the\nLB fluid.",
            "name": "py-espresso"
        },
        {
            "description": "ESPResSo++ is an extensible, flexible, fast and parallel simulation\nsoftware for soft matter research. It is a highly versatile software\npackage for the scientific simulation and analysis of coarse-grained\natomistic or bead-spring models as they are used in soft matter research",
            "name": "py-espressopp"
        },
        {
            "description": "An implementation of lxml.xmlfile for the standard library.",
            "name": "py-et-xmlfile"
        },
        {
            "description": "The Environment for Tree Exploration (ETE) is a Python programming\ntoolkit that assists in the recontruction, manipulation, analysis and\nvisualization of phylogenetic trees (although clustering trees or any\nother tree-like data structure are also supported).",
            "name": "py-ete3"
        },
        {
            "description": "A lightweight python client to communicate with the etelemetry server",
            "name": "py-etelemetry"
        },
        {
            "description": "etils (eclectic utils) is an open-source collection of utils for python.",
            "name": "py-etils"
        },
        {
            "description": "Concurrent networking library for Python",
            "name": "py-eventlet"
        },
        {
            "description": "Python package for generation of protein sequences and evolutionary\nalignments via discrete diffusion models",
            "name": "py-evodiff"
        },
        {
            "description": "EWAH Bool Array utils for yt",
            "name": "py-ewah-bool-utils"
        },
        {
            "description": "A scalable software framework for reinforcement learning environments\nand agents/policies used for the Design and Control applications",
            "name": "py-exarl"
        },
        {
            "description": "A backport of the BaseExceptionGroup and ExceptionGroup classes from\nPython 3.11.",
            "name": "py-exceptiongroup"
        },
        {
            "description": "execnet provides a share-nothing model with channel-send/receive\ncommunication for distributing execution across many Python interpreters\nacross version, platform and network barriers.",
            "name": "py-execnet"
        },
        {
            "description": "Get the currently executing AST node of a frame, and other information.",
            "name": "py-executing"
        },
        {
            "description": "Automatic C++ library api documentation generation: breathe doxygen in\nand exhale it out.",
            "name": "py-exhale"
        },
        {
            "description": "Read Exif metadata from tiff and jpeg files.",
            "name": "py-exifread"
        },
        {
            "description": "Exodus is a tool that makes it easy to successfully relocate Linux ELF\nbinaries from one system to another.",
            "name": "py-exodus-bundler"
        },
        {
            "description": "Expand system variables Unix style.",
            "name": "py-expandvars"
        },
        {
            "description": "This library implements expect tests (also known as \"golden\" tests).",
            "name": "py-expecttest"
        },
        {
            "description": "The extension-helpers package includes convenience helpers to assist\nwith building Python packages with compiled C/Cython extensions. It is\ndeveloped by the Astropy project but is intended to be general and\nusable by any Python package.",
            "name": "py-extension-helpers"
        },
        {
            "description": "Useful extra bits for Python - things that shold be in the standard\nlibrary.",
            "name": "py-extras"
        },
        {
            "description": "Setuptools bootstrap module, which is not always packaged with\nsetuptools.",
            "name": "py-ez-setup"
        },
        {
            "description": "Fortran 90 namelist parser.",
            "name": "py-f90nml"
        },
        {
            "description": "f90wrap is a tool to automatically generate Python extension modules\nwhich interface to Fortran code that makes use of derived types.",
            "name": "py-f90wrap"
        },
        {
            "description": "High level SSH command execution.",
            "name": "py-fabric"
        },
        {
            "description": "Fabric is a simple, Pythonic tool for remote execution and deployment\n(py2.7/py3.4+ compatible fork).",
            "name": "py-fabric3"
        },
        {
            "description": "Evolutionary Scale Modeling",
            "name": "py-fair-esm"
        },
        {
            "description": "FairScale is a PyTorch extension library for high performance and large\nscale training. This library extends basic PyTorch capabilities while\nadding new SOTA scaling techniques.",
            "name": "py-fairscale"
        },
        {
            "description": "Faker is a Python package that generates fake data for you. Whether you\nneed to bootstrap your database, create good-looking XML documents,\nfill-in your persistence to stress test it, or anonymize data taken from\na production service, Faker is for you.",
            "name": "py-faker"
        },
        {
            "description": "Falcon is a reliable, high-performance Python web framework for building\nlarge-scale app backends and microservices.",
            "name": "py-falcon"
        },
        {
            "description": "Module to expose posix_fallocate(3), posix_fadvise(3) and fallocate(2)",
            "name": "py-fallocate"
        },
        {
            "description": "You can use fastai without any installation by using Google Colab. In\nfact, every page of this documentation is also available as an\ninteractive notebook - click \"Open in colab\" at the top of any page to\nopen it (be sure to change the Colab runtime to \"GPU\" to have it run\nfast!) See the fast.ai documentation on Using Colab for more\ninformation.",
            "name": "py-fastai"
        },
        {
            "description": "FastA index (.fai) handler compatible with samtools faidx is extended\nwith 4 columns storing counts for A, C, G & T for each sequence..",
            "name": "py-fastaindex"
        },
        {
            "description": "FastAPI framework, high performance, easy to learn, fast to code, ready\nfor production",
            "name": "py-fastapi"
        },
        {
            "description": "Reusable utilities for FastAPI",
            "name": "py-fastapi-utils"
        },
        {
            "description": "Fastavro for Python.",
            "name": "py-fastavro"
        },
        {
            "description": "C implementation of Python 3 functools.lru_cache",
            "name": "py-fastcache"
        },
        {
            "description": "Fast hierarchical clustering routines for R and Python.",
            "name": "py-fastcluster"
        },
        {
            "description": "Python is a powerful, dynamic language. Rather than bake everything into\nthe language, it lets the programmer customize it to make it work for\nthem. fastcore uses this flexibility to add to Python features inspired\nby other languages we've loved, like multiple dispatch from Julia,\nmixins from Ruby, and currying, binding, and more from Haskell. It also\nadds some \"missing features\" and clean up some rough edges in the Python\nstandard library, such as simplifying parallel processing, and bringing\nideas from NumPy over to Python's list type.",
            "name": "py-fastcore"
        },
        {
            "description": "A parallelized gcov wrapper for generating intermediate coverage\nformats fast",
            "name": "py-fastcov"
        },
        {
            "description": "If you have datasets or other archives that you want to make available\nto your users, and ensure they always have the latest versions and that\nthey are downloaded correctly, fastdownload can help.",
            "name": "py-fastdownload"
        },
        {
            "description": "Python implementation of FastDTW\n(http://cs.fit.edu/~pkc/papers/tdm04.pdf), which is an approximate\nDynamic Time Warping (DTW) algorithm that provides optimal or near-\noptimal alignments with an O(N) time and memory complexity.",
            "name": "py-fastdtw"
        },
        {
            "description": "A python package that provides useful locks.",
            "name": "py-fasteners"
        },
        {
            "description": "Optimizing Protein Structure Prediction Model Training and Inference on\nGPU Clusters.",
            "name": "py-fastfold"
        },
        {
            "description": "Fast JSON schema validator for Python.",
            "name": "py-fastjsonschema"
        },
        {
            "description": "Fastpath is a fast and lightweight tool for finding the shortest path in\na weighted graph. As input it only needs the starting node, the ending\nnode, and the weights of each node to node edge.",
            "name": "py-fastpath"
        },
        {
            "description": "A fast and simple progress bar for Jupyter Notebook and console. Created\nby Sylvain Gugger for fast.ai.",
            "name": "py-fastprogress"
        },
        {
            "description": "Renumber and relabel Numpy arrays at C++ speed and physically convert\nrectangular Numpy arrays between C and Fortran order using an in-place\ntransposition",
            "name": "py-fastremap"
        },
        {
            "description": "This is a C-level implementation of a fast, re-entrant, optimistic lock\nfor CPython.",
            "name": "py-fastrlock"
        },
        {
            "description": "FastStructure is a fast algorithm for inferring population structure\nfrom large SNP genotype data.",
            "name": "py-faststructure"
        },
        {
            "description": "Fava is a web interface for the double-entry bookkeeping software\nBeancount with a focus on features and usability.",
            "name": "py-fava"
        },
        {
            "description": "Python interface to Basix, a finite element definition and tabulation\nruntime library",
            "name": "py-fenics-basix"
        },
        {
            "description": "A Python module for distributed just-in-time shared library building",
            "name": "py-fenics-dijitso"
        },
        {
            "description": "Python interface to the next generation FEniCS problem solving\nenvironment",
            "name": "py-fenics-dolfinx"
        },
        {
            "description": "The FEniCS Form Compiler FFC is a compiler for finite element\nvariational forms, translating high-level mathematical descriptions of\nvariational forms into efficient low-level C++ code for finite element\nassembly.",
            "name": "py-fenics-ffc"
        },
        {
            "description": "Next generation FEniCS Form Compiler",
            "name": "py-fenics-ffcx"
        },
        {
            "description": "The FInite element Automatic Tabulator FIAT supports generation of\narbitrary order instances of the Lagrange elements on lines, triangles,\nand tetrahedra. It is also capable of generating arbitrary order\ninstances of Jacobi-type quadrature rules on the same element shapes.\nFurther, H(div) and H(curl) conforming finite element spaces such as the\nfamilies of Raviart-Thomas, Brezzi-Douglas-Marini and Nedelec are\nsupported on triangles and tetrahedra. Upcoming versions will also\nsupport Hermite and nonconforming elements",
            "name": "py-fenics-fiat"
        },
        {
            "description": "Instant is a Python module that allows for instant inlining of C and C++\ncode in Python. It is a small Python module built on top of SWIG and\nDistutils. Instant has been retired after 2017.2.0 release. It is no\nlonger needed in FEniCS and hence no longer maintained and tested.",
            "name": "py-fenics-instant"
        },
        {
            "description": "The Unified Form Language (UFL) is a domain specific language for\ndeclaration of finite element discretizations of variational forms. More\nprecisely, it defines a flexible interface for choosing finite element\nspaces and defining expressions for weak forms in a notation close to\nmathematical notation.",
            "name": "py-fenics-ufl"
        },
        {
            "description": "The Unified Form Language (UFL) is a domain specific language for\ndeclaration of finite element discretizations of variational forms. More\nprecisely, it defines a flexible interface for choosing finite element\nspaces and defining expressions for weak forms in a notation close to\nmathematical notation.",
            "name": "py-fenics-ufl-legacy"
        },
        {
            "description": "A simple Python wrapper for ffmpeg",
            "name": "py-ffmpy"
        },
        {
            "description": "This library is a Python ctypes interface to libmagic",
            "name": "py-file-magic"
        },
        {
            "description": "Python port of LLVM's FileCheck, flexible pattern matching file\nverifier.",
            "name": "py-filecheck"
        },
        {
            "description": "A platform-independent file lock for Python. This package contains a\nsingle module, which implements a platform independent file lock in\nPython, which provides a simple way of inter-process communication",
            "name": "py-filelock"
        },
        {
            "description": "A Python API for libmagic, the library behind the Unix file command",
            "name": "py-filemagic"
        },
        {
            "description": "Small and dependency free Python package to infer file type and MIME\ntype checking the magic numbers signature of a file or buffer.",
            "name": "py-filetype"
        },
        {
            "description": "This library provides Kalman filtering and various related optimal and\nnon-optimal filtering software written in Python.",
            "name": "py-filterpy"
        },
        {
            "description": "Finds the libpython associated with your environment, wherever it may be\nhiding",
            "name": "py-find-libpython"
        },
        {
            "description": "A package to search for shared libraries on various platforms.",
            "name": "py-findlibs"
        },
        {
            "description": "Fiona reads and writes spatial data files.",
            "name": "py-fiona"
        },
        {
            "description": "Python Fire is a library for automatically generating command line\ninterfaces (CLIs) with a single line of code.",
            "name": "py-fire"
        },
        {
            "description": "FireWorks stores, executes, and manages calculation workflows.",
            "name": "py-fireworks"
        },
        {
            "description": "fiscalyear is a small, lightweight Python module providing helpful\nutilities for managing the fiscal calendar. It is designed as an\nextension of the built-in datetime and calendar modules, adding the\nability to query the fiscal year, fiscal quarter, fiscal month, and\nfiscal day of a date or datetime object.",
            "name": "py-fiscalyear"
        },
        {
            "description": "Fisher's Exact Test. Simple, fast implementation of Fisher's exact test.",
            "name": "py-fisher"
        },
        {
            "description": "Tools for manipulating FITS images using primarily scipy & native python\nroutines",
            "name": "py-fits-tools"
        },
        {
            "description": "A python package for FITS input/output wrapping cfitsio",
            "name": "py-fitsio"
        },
        {
            "description": "fitter package provides a simple class to identify the distribution from\nwhich a data samples is generated from. It uses 80 distributions from\nScipy and allows you to plot the results to check what is the most\nprobable distribution and the best parameters.",
            "name": "py-fitter"
        },
        {
            "description": "Fixtures, reusable state for writing clean tests and more.",
            "name": "py-fixtures"
        },
        {
            "description": "Flake8 is a wrapper around PyFlakes, pep8 and Ned Batchelder's McCabe\nscript.",
            "name": "py-flake8"
        },
        {
            "description": "Flake8 and pylama plugin that checks the ordering of import statements.",
            "name": "py-flake8-import-order"
        },
        {
            "description": "flake8-polyfill is a package that provides some compatibility helpers\nfor Flake8 plugins that intend to support Flake8 2.x and 3.x\nsimultaneously.",
            "name": "py-flake8-polyfill"
        },
        {
            "description": "Flaky is a plugin for nose or pytest that automatically reruns flaky\ntests.",
            "name": "py-flaky"
        },
        {
            "description": "Flamegraph generator for python's cProfile stats.",
            "name": "py-flameprof"
        },
        {
            "description": "This package provides the official implementation of FlashAttention.",
            "name": "py-flash-attn"
        },
        {
            "description": "A simple framework for building complex web applications.",
            "name": "py-flask"
        },
        {
            "description": "Implements i18n and l10n support for Flask.",
            "name": "py-flask-babel"
        },
        {
            "description": "Flask-Compress allows you to easily compress your Flask application's\nresponses with gzip.",
            "name": "py-flask-compress"
        },
        {
            "description": "A Flask extension for handling Cross Origin Resource Sharing (CORS),\nmaking cross-origin AJAX possible.",
            "name": "py-flask-cors"
        },
        {
            "description": "Simple paginate for flask (study from will_paginate). Use bootstrap css\nframework, supports bootstrap2&3 and foundation.",
            "name": "py-flask-paginate"
        },
        {
            "description": "Simple framework for creating REST APIs",
            "name": "py-flask-restful"
        },
        {
            "description": "Flask-SocketIO gives Flask applications access to low latency bi-\ndirectional communications between the clients and the server. The\nclient-side application can use any of the SocketIO official clients\nlibraries in Javascript, C++, Java and Swift, or any compatible client\nto establish a permanent connection to the server.",
            "name": "py-flask-socketio"
        },
        {
            "description": "Add SQLAlchemy support to your Flask application.",
            "name": "py-flask-sqlalchemy"
        },
        {
            "description": "The FlatBuffers serialization format implemented in Python. For a\nfaster and feature-complete version check out the C++ implementation in\n`flatbuffers` package.",
            "name": "py-flatbuffers"
        },
        {
            "description": "A flexible utility for flattening and unflattening dict-lik objects in\nPython",
            "name": "py-flatten-dict"
        },
        {
            "description": "a program that examines source code looking for security weaknesses",
            "name": "py-flawfinder"
        },
        {
            "description": "Flax: A neural network library for JAX designed for flexibility.",
            "name": "py-flax"
        },
        {
            "description": "flexmock is a testing library for Python that makes it easy to create\nmocks,stubs and fakes. Its API is inspired by a Ruby library of the same\nname. However, it is not a goal of Python flexmock to be a clone of the\nRuby version. Instead, the focus is on providing full support for\ntesting Python programs and making the creation of fake objects as\nunobtrusive as possible.",
            "name": "py-flexmock"
        },
        {
            "description": "Write desktop and web apps in pure Python.",
            "name": "py-flexx"
        },
        {
            "description": "Flit is a simple way to put Python packages and modules on PyPI.",
            "name": "py-flit"
        },
        {
            "description": "Distribution-building parts of Flit.",
            "name": "py-flit-core"
        },
        {
            "description": "A PEP 518 build backend that uses setuptools_scm to generate a version\nfile from your version control system, then flit to build the package.",
            "name": "py-flit-scm"
        },
        {
            "description": "Fast & furious GroupBy operations for dask.array.",
            "name": "py-flox"
        },
        {
            "description": "NFS-safe file locking with timeouts for POSIX and Windows",
            "name": "py-flufl-lock"
        },
        {
            "description": "Framework for studying fluid dynamics.",
            "name": "py-fluiddyn"
        },
        {
            "description": "Efficient and easy Fast Fourier Transform (FFT) for Python.",
            "name": "py-fluidfft"
        },
        {
            "description": "Fluidfft plugin dependencies",
            "name": "py-fluidfft-builder"
        },
        {
            "description": "Fluidfft plugin using fftw.",
            "name": "py-fluidfft-fftw"
        },
        {
            "description": "Fluidfft plugin using fftwmpi.",
            "name": "py-fluidfft-fftwmpi"
        },
        {
            "description": "Fluidfft MPI plugin using fftw.",
            "name": "py-fluidfft-mpi-with-fftw"
        },
        {
            "description": "Fluidfft MPI plugin using p3dfft.",
            "name": "py-fluidfft-p3dfft"
        },
        {
            "description": "Fluidfft MPI plugin using pfft.",
            "name": "py-fluidfft-pfft"
        },
        {
            "description": "Framework for studying fluid dynamics with simulations.",
            "name": "py-fluidsim"
        },
        {
            "description": "Pure-Python core library for FluidSim framework.",
            "name": "py-fluidsim-core"
        },
        {
            "description": "Fast and accurate de novo assembler for single molecule sequencing reads",
            "name": "py-flye"
        },
        {
            "description": "Functional programming in Python: implementation of missing features to\nenjoy FP.",
            "name": "py-fn-py"
        },
        {
            "description": "Make beautiful maps with Leaflet.js & Python.",
            "name": "py-folium"
        },
        {
            "description": "fontTools is a library for manipulating fonts, written in Python. The\nproject includes the TTX tool, that can convert TrueType and OpenType\nfonts to and from an XML text format, which is also called TTX. It\nsupports TrueType, OpenType, AFM and to an extent Type 1 and some Mac-\nspecific formats.",
            "name": "py-fonttools"
        },
        {
            "description": "FORD, standing for FORtran Documenter, is an automatic documentation\ngenerator for modern Fortran programs.",
            "name": "py-ford"
        },
        {
            "description": "Literal string formatting for Python versions older than 3.6.",
            "name": "py-formatizer"
        },
        {
            "description": "Formulaic is a high-performance implementation of Wilkinson formulas for\nPython.",
            "name": "py-formulaic"
        },
        {
            "description": "A Language Server for Fortran providing code completion, diagnostics,\nhovering and more.",
            "name": "py-fortls"
        },
        {
            "description": "A Fortran implementation of the Language Server Protocol using Python\n(2.7+ or 3.0+).",
            "name": "py-fortran-language-server"
        },
        {
            "description": "Mimics Fortran textual IO in Python",
            "name": "py-fortranformat"
        },
        {
            "description": "This project is based upon the Fortran parser originally developed by\nPearu Peterson for the F2PY project, www.f2py.com. It provides a parser\nfor Fortran source code (up to and including F2008) implemented purely\nin Python with minimal dependencies.",
            "name": "py-fparser"
        },
        {
            "description": "fprettify is an auto-formatter for modern Fortran code (Fortran 90 and\nlater) that imposes strict whitespace formatting, written in Python.",
            "name": "py-fprettify"
        },
        {
            "description": "Validates fully-qualified domain names against RFC 1123, so that they\nare acceptable to modern bowsers.",
            "name": "py-fqdn"
        },
        {
            "description": "Fractional Ridge Regression.",
            "name": "py-fracridge"
        },
        {
            "description": "Fraction carries out all the fraction operations including addition,\nsubtraction, multiplicati on, division, reciprocation.",
            "name": "py-fraction"
        },
        {
            "description": "FreezeGun is a library that allows your Python tests to travel through\ntime by mocking the datetime module.",
            "name": "py-freezegun"
        },
        {
            "description": "An immutable dictionary",
            "name": "py-frozendict"
        },
        {
            "description": "A list-like structure which implements collections.abc.MutableSequence.",
            "name": "py-frozenlist"
        },
        {
            "description": "Python's filesystem abstraction layer",
            "name": "py-fs"
        },
        {
            "description": "A specification for pythonic filesystems.",
            "name": "py-fsspec"
        },
        {
            "description": "An XRootD implementation for fsspec.",
            "name": "py-fsspec-xrootd"
        },
        {
            "description": "Fixes Unicode that's broken in various ways.",
            "name": "py-ftfy"
        },
        {
            "description": "High-level FTP client for Python.",
            "name": "py-ftputil"
        },
        {
            "description": "A collection of fancy functional tools focused on practicality",
            "name": "py-funcy"
        },
        {
            "description": "A clean customisable Sphinx documentation theme..",
            "name": "py-furo"
        },
        {
            "description": "Free Unified Rendering in Python.",
            "name": "py-fury"
        },
        {
            "description": "Fusepy is a Python module that provides a simple interface to FUSE and\nMacFUSE. It's just one file and is implemented using ctypes.",
            "name": "py-fusepy"
        },
        {
            "description": "Clean single-source support for Python 3 and 2",
            "name": "py-future"
        },
        {
            "description": "Fuzzy string matching in python.",
            "name": "py-fuzzywuzzy"
        },
        {
            "description": "Python powered Fortran preprocessor.",
            "name": "py-fypp"
        },
        {
            "description": "The Galaxy containers module - interfaces for modeling and interacting\nwith container backends (docker and docker swarm currently).",
            "name": "py-galaxy-containers"
        },
        {
            "description": "The Galaxy job metrics framework and default plugins.",
            "name": "py-galaxy-job-metrics"
        },
        {
            "description": "The Galaxy object store framework and default implementations.",
            "name": "py-galaxy-objectstore"
        },
        {
            "description": "Galaxy utilities for manipulating sequences Galaxy project.",
            "name": "py-galaxy-sequence-utils"
        },
        {
            "description": "The Galaxy tool utilities.",
            "name": "py-galaxy-tool-util"
        },
        {
            "description": "Galaxy Generic Utilities",
            "name": "py-galaxy-util"
        },
        {
            "description": "Convert a Galaxy workflow to abstract Common Workflow Language (CWL)",
            "name": "py-galaxy2cwl"
        },
        {
            "description": "Python AST that abstracts the underlying Python version",
            "name": "py-gast"
        },
        {
            "description": "Gcovr provides a utility for managing the use of the GNU gcov utility\nand generating summarized code coverage results. This command is\ninspired by the Python coverage.py package, which provides a similar\nutility for Python.",
            "name": "py-gcovr"
        },
        {
            "description": "Auth plugin allowing use the use of OAuth 2.0 credentials for Google\nCloud Storage in the Boto library.",
            "name": "py-gcs-oauth2-boto-plugin"
        },
        {
            "description": "Pythonic file-system for Google Cloud Storage.",
            "name": "py-gcsfs"
        },
        {
            "description": "gdbgui is a modern, free, browser-based frontend to gdb",
            "name": "py-gdbgui"
        },
        {
            "description": "The gdc-client provides several convenience functions over the GDC API\nwhich provides general download/upload via HTTPS.",
            "name": "py-gdc-client"
        },
        {
            "description": "Google Drive Public File/Folder Downloader.",
            "name": "py-gdown"
        },
        {
            "description": "Google Earth Engine Batch Asset Manager.",
            "name": "py-gee-asset-manager"
        },
        {
            "description": "Google Earth Engine Batch Assets Manager with Addons.",
            "name": "py-geeadd"
        },
        {
            "description": "A Python package for interactive mapping using Google Earth Engine and\nipyleaflet.",
            "name": "py-geemap"
        },
        {
            "description": "Simple Client for Earth Engine Uploads with Selenium Support.",
            "name": "py-geeup"
        },
        {
            "description": "GPU-GEMM generator for the Discontinuous Galerkin method",
            "name": "py-gemmforge"
        },
        {
            "description": "Genders is a static cluster configuration database used for cluster\nconfiguration management. It is used by a variety of tools and scripts\nfor management of large clusters.",
            "name": "py-genders"
        },
        {
            "description": "Given multiple snpEff or VEP or BCFTools consequence annotations for a\nsingle variant, get an orderable python object for each annotation.",
            "name": "py-geneimpacts"
        },
        {
            "description": "Generate Python data structures and XML parser from Xschema.",
            "name": "py-generateds"
        },
        {
            "description": "Python toolkit for generation of output for the web",
            "name": "py-genshi"
        },
        {
            "description": "Gensim is a Python library for topic modelling, document indexing and\nsimilarity retrieval with large corpora. Target audience is the natural\nlanguage processing (NLP) and information retrieval (IR) community.",
            "name": "py-gensim"
        },
        {
            "description": "Using SQLAlchemy with Spatial Databases",
            "name": "py-geoalchemy2"
        },
        {
            "description": "Geocoder is a simple and consistent geocoding library.",
            "name": "py-geocoder"
        },
        {
            "description": "Tool to convert geopandas vector data into rasterized xarray data.",
            "name": "py-geocube"
        },
        {
            "description": "The geodesic routines from GeographicLib.",
            "name": "py-geographiclib"
        },
        {
            "description": "Python bindings and utilities for GeoJSON.",
            "name": "py-geojson"
        },
        {
            "description": "Object-oriented pure Python B-Spline and NURBS library.",
            "name": "py-geomdl"
        },
        {
            "description": "GeoPandas is an open source project to make working with geospatial data\nin python easier. GeoPandas extends the datatypes used by pandas to\nallow spatial operations on geometric types. Geometric operations are\nperformed by shapely. Geopandas further depends on fiona for file access\nand descartes and matplotlib for plotting.",
            "name": "py-geopandas"
        },
        {
            "description": "geoplot is a high-level Python geospatial plotting library. It's an\nextension to cartopy and matplotlib which makes mapping easy: like\nseaborn for geospatial.",
            "name": "py-geoplot"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Service provides a user\ninterface for accessing hardware telemetry and settings securely.",
            "name": "py-geopmdpy"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Service provides a user\ninterface for accessing hardware telemetry and settings securely.",
            "name": "py-geopmpy"
        },
        {
            "description": "geopy is a Python client for several popular geocoding web services.",
            "name": "py-geopy"
        },
        {
            "description": "A Python library designed to make data analysis and visualization\nseamless and simple.",
            "name": "py-geoviews"
        },
        {
            "description": "gevent is a coroutine-based Python networking library.",
            "name": "py-gevent"
        },
        {
            "description": "GF256 is an implementation of GF(2**8). This Galois Field allows you to\nperform finite field arithmetic on byte sized integers.",
            "name": "py-gf256"
        },
        {
            "description": "Python2 and 3 bindings for gfal2.",
            "name": "py-gfal2-python"
        },
        {
            "description": "GFF and GTF file manipulation and interconversion gffutils is a Python\npackage for working with and manipulating the GFF and GTF format files\ntypically used for genomic annotations. Files are loaded into a sqlite3\ndatabase, allowing much more complex manipulation of hierarchical\nfeatures (e.g., genes, transcripts, and exons) than is possible with\nplain-text methods alone.",
            "name": "py-gffutils"
        },
        {
            "description": "Copy your docs directly to the gh-pages branch.",
            "name": "py-ghp-import"
        },
        {
            "description": "An async GitHub API library for Python.",
            "name": "py-gidgethub"
        },
        {
            "description": "An asynchronous GitLab API library.",
            "name": "py-gidgetlab"
        },
        {
            "description": "Generator of Matrix Multiplication Kernels - GiMMiK - is a tool for\ngeneration of high performance matrix multiplication kernel code. for\nvarious accelerator platforms.",
            "name": "py-gimmik"
        },
        {
            "description": "Gin provides a lightweight configuration framework for Python, based on\ndependency injection.",
            "name": "py-gin-config"
        },
        {
            "description": "git-review is a tool that helps submitting git branches to gerrit",
            "name": "py-git-review"
        },
        {
            "description": "The GitDB project implements interfaces to allow read and write access\nto git repositories.",
            "name": "py-gitdb"
        },
        {
            "description": "GitPython is a python library used to interact with Git repositories.",
            "name": "py-gitpython"
        },
        {
            "description": "Parser tools for Mozilla's Glean telemetry.",
            "name": "py-glean-parser"
        },
        {
            "description": "Mozilla's Glean Telemetry SDK",
            "name": "py-glean-sdk"
        },
        {
            "description": "This is a Python wrapper for the fortran library used in the R package\nglmnet.",
            "name": "py-glmnet"
        },
        {
            "description": "This is a python version of the popular glmnet library (beta release).\nGlmnet fits the entire lasso or elastic-net regularization path for\nlinear regression, logistic and multinomial regression models, poisson\nregression and the cox model.",
            "name": "py-glmnet-python"
        },
        {
            "description": "A toolbox for accurate single-trial estimates in fMRI time-series data.",
            "name": "py-glmsingle"
        },
        {
            "description": "Version of the glob module that can capture patterns and supports\nrecursive wildcards.",
            "name": "py-glob2"
        },
        {
            "description": "Globus CLI is a standalone application that can be installed on the\nuser's machine and is used to access the Globus service. The CLI\nprovides an interface to Globus services from the shell, and is suited\nto both interactive and simple scripting use cases.",
            "name": "py-globus-cli"
        },
        {
            "description": "Globus SDK for Python",
            "name": "py-globus-sdk"
        },
        {
            "description": "GluonCV provides implementations of state-of-the-art (SOTA) deep\nlearning algorithms in computer vision. It aims to help engineers,\nresearchers, and students quickly prototype products, validate new ideas\nand learn computer vision.",
            "name": "py-gluoncv"
        },
        {
            "description": "glymur contains a Python interface to the OpenJPEG library which allows\none to read and write JPEG 2000 files. glymur works on Python 3.7, 3.8,\n3.9, and 3.10.",
            "name": "py-glymur"
        },
        {
            "description": "Pythonic interface to GMSH.",
            "name": "py-gmsh"
        },
        {
            "description": "Interoperability between Python and Gmsh",
            "name": "py-gmsh-interop"
        },
        {
            "description": "Python bindings and ensemble workflow management for GROMACS. The\nGROMACS C++ API is affected by its package variants. You can specify a\nparticular GROMACS API by making the dependency variant explicit. E.g.\n``spack install gmxapi ^gromacs+mpi~double``",
            "name": "py-gmxapi"
        },
        {
            "description": "Gnuplot.py is a Python package that allows you to create graphs from\nwithin Python using the gnuplot plotting program.",
            "name": "py-gnuplot"
        },
        {
            "description": "Python scripts to find enrichment of GO terms",
            "name": "py-goatools"
        },
        {
            "description": "Turn (almost) any command line program into a full GUI application with\none line",
            "name": "py-gooey"
        },
        {
            "description": "Python bindings to the Google search engine.",
            "name": "py-google"
        },
        {
            "description": "Google API client core library.",
            "name": "py-google-api-core"
        },
        {
            "description": "The Google API Client for Python is a client library for accessing the\nPlus, Moderator, and many other Google APIs.",
            "name": "py-google-api-python-client"
        },
        {
            "description": "client libraries for humans",
            "name": "py-google-apitools"
        },
        {
            "description": "This library simplifies using Google's various server-to-server\nauthentication mechanisms to access Google APIs.",
            "name": "py-google-auth"
        },
        {
            "description": "Google Authentication Library: httplib2 transport.",
            "name": "py-google-auth-httplib2"
        },
        {
            "description": "This library provides oauthlib integration with google-auth.",
            "name": "py-google-auth-oauthlib"
        },
        {
            "description": "Google Cloud Appengine Logging API client library.",
            "name": "py-google-cloud-appengine-logging"
        },
        {
            "description": "Google Cloud Audit Protos.",
            "name": "py-google-cloud-audit-log"
        },
        {
            "description": "Google Cloud Batch API client library.",
            "name": "py-google-cloud-batch"
        },
        {
            "description": "Google Cloud API client core library.",
            "name": "py-google-cloud-core"
        },
        {
            "description": "Stackdriver Logging API client library.",
            "name": "py-google-cloud-logging"
        },
        {
            "description": "Google Cloud Storage API client library.",
            "name": "py-google-cloud-storage"
        },
        {
            "description": "This package wraps the google/crc32c hardware-based implementation of\nthe CRC32C hashing algorithm.",
            "name": "py-google-crc32c"
        },
        {
            "description": "pasta is an AST-based Python refactoring library.",
            "name": "py-google-pasta"
        },
        {
            "description": "Google Reauth Library.",
            "name": "py-google-reauth"
        },
        {
            "description": "Utilities for Google Media Downloads and Resumable Uploads.",
            "name": "py-google-resumable-media"
        },
        {
            "description": "Common protobufs used in Google APIs.",
            "name": "py-googleapis-common-protos"
        },
        {
            "description": "Minimal class to download shared files from Google Drive.",
            "name": "py-googledrivedownloader"
        },
        {
            "description": "The package GoSam allows for the automated calculation of one-loop\namplitudes for multi-particle processes in renormalizable quantum field\ntheories.",
            "name": "py-gosam"
        },
        {
            "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation\nenvironment (ASE).",
            "name": "py-gpaw"
        },
        {
            "description": "An utility to monitor NVIDIA GPU status and usage.",
            "name": "py-gpustat"
        },
        {
            "description": "GPUtil is a Python module for getting the GPU status from NVIDA GPUs\nusing nvidia-smi.",
            "name": "py-gputil"
        },
        {
            "description": "The Gaussian Process Toolbox.",
            "name": "py-gpy"
        },
        {
            "description": "Performs global optimization with different acquisition functions. Among\nother functionalities, it is possible to use GPyOpt to optimize physical\nexperiments (sequentially or in batches) and tune the parameters of\nMachine Learning algorithms. It is able to handle large data sets via\nsparse Gaussian process models.",
            "name": "py-gpyopt"
        },
        {
            "description": "GPyTorch is a Gaussian process library implemented using PyTorch.\nGPyTorch is designed for creating scalable, flexible, and modular\nGaussian process models with ease.",
            "name": "py-gpytorch"
        },
        {
            "description": "This is a GraphQL client for Python. Plays nicely with graphene,\ngraphql-core, graphql-js and any other GraphQL implementation compatible\nwith the spec. GQL architecture is inspired by React-Relay and Apollo-\nClient.",
            "name": "py-gql"
        },
        {
            "description": "Python library for easily interacting with trained machine learning\nmodels",
            "name": "py-gradio"
        },
        {
            "description": "Python library for easily interacting with trained machine learning\nmodels",
            "name": "py-gradio-client"
        },
        {
            "description": "Grandalf is a Python package made for experimentations with graph\ndrawing algorithms.",
            "name": "py-grandalf"
        },
        {
            "description": "GraphCast: Learning skillful medium-range global weather forecasting.",
            "name": "py-graphcast"
        },
        {
            "description": "A Python package for working with user perceived characters. More\nspecifically, string manipulation and calculation functions for working\nwith grapheme cluster groups (graphemes) as defined by the Unicode\nStandard Annex #29.",
            "name": "py-grapheme"
        },
        {
            "description": "GraphQL Framework for Python.",
            "name": "py-graphene"
        },
        {
            "description": "Graphene Tornado integration.",
            "name": "py-graphene-tornado"
        },
        {
            "description": "Backport of the Python 3.9 graphlib module for Python 3.6+.",
            "name": "py-graphlib-backport"
        },
        {
            "description": "GraphQL-core 3 is a Python 3.6+ port of GraphQL.js, the JavaScript\nreference implementation for GraphQL, a query language for APIs created\nby Facebook.",
            "name": "py-graphql-core"
        },
        {
            "description": "Relay library for graphql-core.",
            "name": "py-graphql-relay"
        },
        {
            "description": "Websocket backend for GraphQL subscriptions.",
            "name": "py-graphql-ws"
        },
        {
            "description": "Simple Python interface for Graphviz",
            "name": "py-graphviz"
        },
        {
            "description": "Command-line utilities to assist in managing Galaxy servers",
            "name": "py-gravity"
        },
        {
            "description": "Project to generate recipes for conda packages.",
            "name": "py-grayskull"
        },
        {
            "description": "Lightweight in-process concurrent programming",
            "name": "py-greenlet"
        },
        {
            "description": "GRequests allows you to use Requests with Gevent to make asynchronous\nHTTP Requests easily. Note: You should probably use requests-threads or\nrequests-futures instead.",
            "name": "py-grequests"
        },
        {
            "description": "The gridDataFormats package provides classes to unify reading and\nwriting n-dimensional datasets. One can read grid data from files, make\nthem available as a Grid object, and write out the data again.",
            "name": "py-griddataformats"
        },
        {
            "description": "Signatures for entire Python programs. Extract the structure, the frame,\nthe skeleton of your project, to generate API documentation or find\nbreaking changes in your API.",
            "name": "py-griffe"
        },
        {
            "description": "IAM API client library.",
            "name": "py-grpc-google-iam-v1"
        },
        {
            "description": "HTTP/2-based RPC framework.",
            "name": "py-grpcio"
        },
        {
            "description": "Status proto mapping for gRPC.",
            "name": "py-grpcio-status"
        },
        {
            "description": "Protobuf code generator for gRPC",
            "name": "py-grpcio-tools"
        },
        {
            "description": "The GSD file format is the native file format for HOOMD-blue. GSD files\nstore trajectories of the HOOMD-blue system state in a binary file with\nefficient random access to frames. GSD allows all particle and topology\nproperties to vary from one frame to the next. Use the GSD Python API to\nspecify the initial condition for a HOOMD-blue simulation or analyze\ntrajectory output with a script. Read a GSD trajectory with a\nvisualization tool to explore the behavior of the simulation.",
            "name": "py-gsd"
        },
        {
            "description": "Python-GSSAPI provides both low-level and high level wrappers around the\nGSSAPI C libraries.",
            "name": "py-gssapi"
        },
        {
            "description": "A command line tool for interacting with cloud storage services.",
            "name": "py-gsutil"
        },
        {
            "description": "GTDB-Tk is a software toolkit for assigning objective taxonomic\nclassifications to bacterial and archaeal genomes based on the Genome\nDatabase Taxonomy (GTDB).",
            "name": "py-gtdbtk"
        },
        {
            "description": "WSGI HTTP Server for UNIX",
            "name": "py-gunicorn"
        },
        {
            "description": "Galaxy Workflow Format 2 Descriptions",
            "name": "py-gxformat2"
        },
        {
            "description": "OpenAI Gym is a toolkit for developing and comparing reinforcement\nlearning algorithms. This is the gym open-source library, which gives\nyou access to a standardized set of environments.",
            "name": "py-gym"
        },
        {
            "description": "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1",
            "name": "py-h11"
        },
        {
            "description": "HTTP/2 State-Machine based protocol implementation",
            "name": "py-h2"
        },
        {
            "description": "H5Glance lets you explore HDF5 files in the terminal or an HTML\ninterface.",
            "name": "py-h5glance"
        },
        {
            "description": "Python Objects Onto HDF5.",
            "name": "py-h5io"
        },
        {
            "description": "A Python interface for the netCDF4 file-format that reads and writes\nlocal or remote HDF5 files directly via h5py or h5pyd, without relying\non the Unidata netCDF library.",
            "name": "py-h5netcdf"
        },
        {
            "description": "The h5py package provides both a high- and low-level interface to the\nHDF5 library from Python.",
            "name": "py-h5py"
        },
        {
            "description": "Shell-like environment for HDF5.",
            "name": "py-h5sh"
        },
        {
            "description": "OpenStack Hacking Guideline Enforcement.",
            "name": "py-hacking"
        },
        {
            "description": "Some handy archive helpers for Python.",
            "name": "py-handy-archives"
        },
        {
            "description": "HAplotype and PHylodynamics pipeline for viral assembly, population\ngenetics, and phylodynamics.",
            "name": "py-haphpipe"
        },
        {
            "description": "Modern, extensible Python project management",
            "name": "py-hatch"
        },
        {
            "description": "cython hooks for hatch",
            "name": "py-hatch-cython"
        },
        {
            "description": "Fancy PyPI READMEs with Hatch.",
            "name": "py-hatch-fancy-pypi-readme"
        },
        {
            "description": "A hatch plugin to help build Jupyter packages.",
            "name": "py-hatch-jupyter-builder"
        },
        {
            "description": "Hatch plugin for versioning from a package.json file.",
            "name": "py-hatch-nodejs-version"
        },
        {
            "description": "Hatchling plugin to read project dependencies from requirements.txt",
            "name": "py-hatch-requirements-txt"
        },
        {
            "description": "Hatch plugin for versioning with your preferred VCS",
            "name": "py-hatch-vcs"
        },
        {
            "description": "Hatchet is a performance tool for analyzing hierarchical performance\ndata using a graph-indexed Pandas dataframe.",
            "name": "py-hatchet"
        },
        {
            "description": "Modern, extensible Python build backend.",
            "name": "py-hatchling"
        },
        {
            "description": "Hclust2 is a handy tool for plotting heat-maps with several useful\noptions to produce high quality figures that can be used in publication.",
            "name": "py-hclust2"
        },
        {
            "description": "HDBSCAN - Hierarchical Density-Based Spatial Clustering of Applications\nwith Noise. Performs DBSCAN over varying epsilon values and integrates\nthe result to find a clustering that gives the best stability over\nepsilon. This allows HDBSCAN to find clusters of varying densities\n(unlike DBSCAN), and be more robust to parameter selection. In practice\nthis means that HDBSCAN returns a good clustering straight away with\nlittle or no parameter tuning -- and the primary parameter, minimum\ncluster size, is intuitive and easy to select. HDBSCAN is ideal for\nexploratory data analysis; it's a fast and robust algorithm that you can\ntrust to return meaningful clusters (if there are any).",
            "name": "py-hdbscan"
        },
        {
            "description": "API and command line interface for HDFS",
            "name": "py-hdfs"
        },
        {
            "description": "Python and C package for HEALPix discretisation of the sphere",
            "name": "py-healpix"
        },
        {
            "description": "healpy is a Python package to handle pixelated data on the sphere.",
            "name": "py-healpy"
        },
        {
            "description": "A heap with decrease-key and increase-key operations",
            "name": "py-heapdict"
        },
        {
            "description": "Heat is a flexible and seamless open-source software for high\nperformance data analytics and machine learning. It provides highly\noptimized algorithms and data structures for tensor computations using\nCPUs, GPUs and distributed cluster systems on top of MPI.",
            "name": "py-heat"
        },
        {
            "description": "Machine Learning for High Energy Physics",
            "name": "py-hep-ml"
        },
        {
            "description": "This Python 3 library provides support for converting Old HepData input\nformat (sample) to YAML as well as YAML to ROOT, YODA and CSV.",
            "name": "py-hepdata-converter"
        },
        {
            "description": "Library for getting your data into HEPData",
            "name": "py-hepdata-lib"
        },
        {
            "description": "Validation schema and code for HEPdata submissions.",
            "name": "py-hepdata-validator"
        },
        {
            "description": "hepstats is a library for statistical inference aiming to cover the\nneeds in High Energy Physics. It is part of the Scikit-HEP project.",
            "name": "py-hepstats"
        },
        {
            "description": "Units and constants in the HEP system of units.",
            "name": "py-hepunits"
        },
        {
            "description": "Speed up file transfers with the Hugging Face Hub.",
            "name": "py-hf-transfer"
        },
        {
            "description": "Hieroglyph is an extension for Sphinx which builds HTML presentations\nfrom ReStructured Text documents.",
            "name": "py-hieroglyph"
        },
        {
            "description": "Python extension that wraps protocol parsing code in hiredis. It\nprimarily speeds up parsing of multi bulk replies.",
            "name": "py-hiredis"
        },
        {
            "description": "Hist classes and utilities",
            "name": "py-hist"
        },
        {
            "description": "Versatile, high-performance histogram toolkit for Numpy.",
            "name": "py-histbook"
        },
        {
            "description": "Composable histogram primitives for distributed data reduction.",
            "name": "py-histogrammar"
        },
        {
            "description": "Pretty print of NumPy (and other) histograms to the console",
            "name": "py-histoprint"
        },
        {
            "description": "Hjson is an user interface for JSON. The Python implementation of Hjson\nis based on simplejson.",
            "name": "py-hjson"
        },
        {
            "description": "hmmlearn is a set of algorithms for unsupervised learning and inference\nof Hidden Markov Models.",
            "name": "py-hmmlearn"
        },
        {
            "description": "Holland is an Open Source backup framework originally developed by\nRackspace and written in Python. Its goal is to help facilitate backing\nup databases with greater configurability, consistency, and ease.\nHolland currently focuses on MySQL, however future development will\ninclude other database platforms and even non-database related\napplications. Because of its plugin structure, Holland can be used to\nbackup anything you want by whatever means you want.",
            "name": "py-holland-backup"
        },
        {
            "description": "A Python library designed to make data analysis and visualization\nseamless and simple.",
            "name": "py-holoviews"
        },
        {
            "description": "Horovod is a distributed deep learning training framework for\nTensorFlow, Keras, PyTorch, and Apache MXNet.",
            "name": "py-horovod"
        },
        {
            "description": "Pure-Python HPACK header compression",
            "name": "py-hpack"
        },
        {
            "description": "A distributed Hyperband implementation with lots of room for\nimprovement",
            "name": "py-hpbandster"
        },
        {
            "description": "HPC Container Maker (HPCCM - pronounced H-P-see-M) is an open source\ntool to make it easier to generate container specification files.",
            "name": "py-hpccm"
        },
        {
            "description": "Chromium HSTS Preload list as a Python package and updated daily",
            "name": "py-hstspreload"
        },
        {
            "description": "htgettoken gets OIDC authentication tokens for High Throughput Computing\nvia a Hashicorp vault server.",
            "name": "py-htgettoken"
        },
        {
            "description": "Turn HTML into equivalent Markdown-structured text.",
            "name": "py-html2text"
        },
        {
            "description": "HTML parser based on the WHATWG HTML specification.",
            "name": "py-html5lib"
        },
        {
            "description": "Library to generate HTML from classes.",
            "name": "py-htmlgen"
        },
        {
            "description": "HTSeq is a Python package that provides infrastructure to process data\nfrom high-throughput sequencing assays.",
            "name": "py-htseq"
        },
        {
            "description": "HTTP Request and Response Service",
            "name": "py-httpbin"
        },
        {
            "description": "The HTTP Core package provides a minimal low-level HTTP client, which\ndoes one thing only. Sending HTTP requests.",
            "name": "py-httpcore"
        },
        {
            "description": "A comprehensive HTTP client library.",
            "name": "py-httplib2"
        },
        {
            "description": "HTTP client mock for Python.",
            "name": "py-httpretty"
        },
        {
            "description": "HTTP-based REST interface to Stan, a package for Bayesian inference.",
            "name": "py-httpstan"
        },
        {
            "description": "httptools is a Python binding for the nodejs HTTP parser.",
            "name": "py-httptools"
        },
        {
            "description": "HTTPX is a fully featured HTTP client for Python 3, which provides sync\nand async APIs, and support for both HTTP/1.1 and HTTP/2.",
            "name": "py-httpx"
        },
        {
            "description": "Client library to download and publish models, datasets and other repos\non the huggingface.co hub.",
            "name": "py-huggingface-hub"
        },
        {
            "description": "Human friendly output for text interfaces using Python",
            "name": "py-humanfriendly"
        },
        {
            "description": "This modest package contains various common humanization utilities, like\nturning a number into a fuzzy human readable duration ('3 minutes ago')\nor into a human readable size or throughput. It works with python 2.7\nand 3.3 and is localized to Russian, French, Korean and Slovak.",
            "name": "py-humanize"
        },
        {
            "description": "HashiCorp Vault API client",
            "name": "py-hvac"
        },
        {
            "description": "A high-level plotting API for pandas, dask, xarray, and networkx built\non HoloViews.",
            "name": "py-hvplot"
        },
        {
            "description": "A framework for elegantly configuring complex applications.",
            "name": "py-hydra-core"
        },
        {
            "description": "A ASGI Server based on Hyper libraries and inspired by Gunicorn.",
            "name": "py-hypercorn"
        },
        {
            "description": "HTTP/2 framing layer for Python",
            "name": "py-hyperframe"
        },
        {
            "description": "A featureful, immutable, and correct URL for Python.",
            "name": "py-hyperlink"
        },
        {
            "description": "Hyperopt is a Python library for serial and parallel optimization over\nawkward search spaces, which may include real-valued, discrete, and\nconditional dimensions.",
            "name": "py-hyperopt"
        },
        {
            "description": "A library for property based testing.",
            "name": "py-hypothesis"
        },
        {
            "description": "This project contains core functionality required by Python code\ngenerated by the IBM Cloud OpenAPI SDK Generator (openapi-sdkgen).",
            "name": "py-ibm-cloud-sdk-core"
        },
        {
            "description": "Python client library to quickly get started with the various Watson\nAPIs services.",
            "name": "py-ibm-watson"
        },
        {
            "description": "Ics.py : iCalendar for Humans Ics.py is a pythonic and easy iCalendar\nlibrary. Its goals are to read and write ics data in a developer\nfriendly way. iCalendar is a widely-used and useful format but not user\nfriendly. Ics.py is there to give you the ability of creating and\nreading this format without any knowledge of it. It should be able to\nparse every calendar that respects the rfc5545 and maybe some more. It\nalso outputs rfc compliant calendars. iCalendar (file extension .ics) is\nused by Google Calendar, Apple Calendar, Android and many more. Ics.py\nis available for Python>=3.6 and is Apache2 Licensed.",
            "name": "py-ics"
        },
        {
            "description": "id is a Python tool for generating OIDC identities.",
            "name": "py-id"
        },
        {
            "description": "File identification library for Python. Given a file (or some\ninformation about a file), return a set of standardized tags identifying\nwhat the file is.",
            "name": "py-identify"
        },
        {
            "description": "Internationalized Domain Names for Python (IDNA 2008 and UTS #46)",
            "name": "py-idna"
        },
        {
            "description": "Patch ssl.match_hostname for Unicode(idna) domains support",
            "name": "py-idna-ssl"
        },
        {
            "description": "igor: interface for reading binary IGOR files.",
            "name": "py-igor"
        },
        {
            "description": "igor2: interface for reading binary IGOR files.",
            "name": "py-igor2"
        },
        {
            "description": "Python interface to the igraph high performance graph library, primarily\naimed at complex network research and analysis.",
            "name": "py-igraph"
        },
        {
            "description": "Module for embedding igv.js in an IPython notebook",
            "name": "py-igv-notebook"
        },
        {
            "description": "A library and collection of scripts to work with Illumina paired-end\ndata (for CASAVA 1.8+).",
            "name": "py-illumina-utils"
        },
        {
            "description": "Imagecodecs is a Python library that provides block-oriented, in-memory\nbuffer transformation, compression, and decompression functions for use\nin the tifffile, czifile, zarr, and other scientific image input/output\nmodules..",
            "name": "py-imagecodecs"
        },
        {
            "description": "A Python Perceptual Image Hashing Module",
            "name": "py-imagehash"
        },
        {
            "description": "Python library for reading and writing image data. Imageio is a Python\nlibrary that provides an easy interface to read and write a wide range\nof image data, including animated images, video, volumetric data, and\nscientific formats. It is cross-platform, runs on Python 2.7 and 3.4+,\nand is easy to install.",
            "name": "py-imageio"
        },
        {
            "description": "The purpose of this project is to provide a simple and reliable ffmpeg\nwrapper for working with video files. It implements two simple generator\nfunctions for reading and writing data from/to ffmpeg, which reliably\nterminate the ffmpeg process when done. It also takes care of publishing\nplatform-specific wheels that include the binary ffmpeg executables.",
            "name": "py-imageio-ffmpeg"
        },
        {
            "description": "Parses image file headers and returns image size. Supports PNG, JPEG,\nJPEG2000, and GIF image file formats.",
            "name": "py-imagesize"
        },
        {
            "description": "imbalanced-learn is a python package offering a number of re-sampling\ntechniques commonly used in datasets showing strong between-class\nimbalance. It is compatible with scikit-learn and is part of scikit-\nlearn-contrib projects.",
            "name": "py-imbalanced-learn"
        },
        {
            "description": "A library for image augmentation in machine learning experiments,\nparticularly convolutional neural networks. Supports the augmentation of\nimages, keypoints/landmarks, bounding boxes, heatmaps and segmentation\nmaps in a variety of different ways.",
            "name": "py-imgaug"
        },
        {
            "description": "Interactive IPython-Friendly Minimizer based on SEAL Minuit2.",
            "name": "py-iminuit"
        },
        {
            "description": "A fork of frozendict, an immutable wrapper around dictionaries. It\nimplements the complete mapping interface and can be used as a drop-in\nreplacement for dictionaries where immutability is desired. The\nimmutabledict constructor mimics dict, and all of the expected\ninterfaces (iter, len, repr, hash, getitem) are provided. Note that an\nimmutabledict does not guarantee the immutability of its values, so the\nutility of hash method is restricted by usage. The only difference is\nthat the copy() method of immutable takes variable keyword arguments,\nwhich will be present as key/value pairs in the new, immutable copy.",
            "name": "py-immutabledict"
        },
        {
            "description": "An immutable mapping type for Python.",
            "name": "py-immutables"
        },
        {
            "description": "Read metadata from Python packages.",
            "name": "py-importlib-metadata"
        },
        {
            "description": "Read resources from Python packages",
            "name": "py-importlib-resources"
        },
        {
            "description": "A small library that versions your Python projects.",
            "name": "py-incremental"
        },
        {
            "description": "inflect.py - Correctly generate plurals, singular nouns, ordinals,\nindefinite articles; convert numbers to words.",
            "name": "py-inflect"
        },
        {
            "description": "This module is a general-purpose framework for evaluating if a family\nexihibits, for example, and autosomal dominant pattern.",
            "name": "py-inheritance"
        },
        {
            "description": "iniconfig: brain-dead simple parsing of ini files",
            "name": "py-iniconfig"
        },
        {
            "description": "Accessing and Modifying INI files",
            "name": "py-iniparse"
        },
        {
            "description": "Collection of common interactive command line user interfaces, based on\nInquirer.js.",
            "name": "py-inquirer"
        },
        {
            "description": "Python port of Inquirer.js (A collection of common interactive command-\nline user interfaces).",
            "name": "py-inquirerpy"
        },
        {
            "description": "A library for installing Python wheels.",
            "name": "py-installer"
        },
        {
            "description": "inStrain is python program for analysis of co-occurring genome\npopulations from metagenomes that allows highly accurate genome\ncomparisons, analysis of coverage, microdiversity, and linkage, and\nsensitive SNP detection with gene localization and synonymous non-\nsynonymous identification.",
            "name": "py-instrain"
        },
        {
            "description": "The intbitset library provides a set implementation to store sorted\nunsigned integers either 32-bits integers or an infinite range with fast\nset operations implemented via bit vectors in a Python C extension for\nspeed and reduced memory usage.",
            "name": "py-intbitset"
        },
        {
            "description": "Intel OpenMP* Runtime Library x86_64 dynamic libraries for macOS*. Intel\nOpenMP* Runtime Library provides OpenMP API specification support in\nIntel C Compiler, Intel C++ Compiler and Intel Fortran Compiler. It\nhelps to improve performance by creating multithreaded software using\nshared memory and running on multi-core processor systems.",
            "name": "py-intel-openmp"
        },
        {
            "description": "Normalize intensities of images from various MRI modalities",
            "name": "py-intensity-normalization"
        },
        {
            "description": "A convenient way to expose an extensible API with enforced method\nsignatures and consistent documentation.",
            "name": "py-interface-meta"
        },
        {
            "description": "interlap: fast, simple interval overlap",
            "name": "py-interlap"
        },
        {
            "description": "Editable interval tree data structure for Python 2 and 3.",
            "name": "py-intervaltree"
        },
        {
            "description": "Pythonic task execution",
            "name": "py-invoke"
        },
        {
            "description": "Capture stdout, stderr easily.",
            "name": "py-iocapture"
        },
        {
            "description": "A library for providing I/O abstraction.",
            "name": "py-iopath"
        },
        {
            "description": "Python 3.3's ipaddress for older Python versions",
            "name": "py-ipaddress"
        },
        {
            "description": "ipdb is the iPython debugger and has many additional features, including\na better interactive debugging experience via colorized output.",
            "name": "py-ipdb"
        },
        {
            "description": "Interactive Canvas in Jupyter.",
            "name": "py-ipycanvas"
        },
        {
            "description": "A custom widget for returning mouse and keyboard events to Python.",
            "name": "py-ipyevents"
        },
        {
            "description": "Python file chooser widget for use in Jupyter/IPython in conjunction\nwith ipywidgets.",
            "name": "py-ipyfilechooser"
        },
        {
            "description": "IPython Kernel for Jupyter",
            "name": "py-ipykernel"
        },
        {
            "description": "A Jupyter widget for dynamic Leaflet maps.",
            "name": "py-ipyleaflet"
        },
        {
            "description": "Matplotlib Jupyter Extension.",
            "name": "py-ipympl"
        },
        {
            "description": "IPython's architecture for parallel and distributed computing.",
            "name": "py-ipyparallel"
        },
        {
            "description": "An interactive toolkit for assembly and analysis of restriction-site\nassociated genomic data sets (e.g., RAD, ddRAD, GBS) for population\ngenetic and phylogenetic studies.",
            "name": "py-ipyrad"
        },
        {
            "description": "IPython provides a rich toolkit to help you make the most out of using\nPython interactively.",
            "name": "py-ipython"
        },
        {
            "description": "Quickly and easily parallelize Python functions using IPython on a\ncluster, supporting multiple schedulers. Optimizes IPython defaults to\nhandle larger clusters and simultaneous processes.",
            "name": "py-ipython-cluster-helper"
        },
        {
            "description": "Vestigial utilities from IPython",
            "name": "py-ipython-genutils"
        },
        {
            "description": "A Tree Widget using jsTree.",
            "name": "py-ipytree"
        },
        {
            "description": "ipywidget for vtkRenderWindow.",
            "name": "py-ipyvtk-simple"
        },
        {
            "description": "Jupyter widgets base for Vue libraries.",
            "name": "py-ipyvue"
        },
        {
            "description": "Jupyter widgets based on vuetify UI components which implement Google's\nMaterial Design Spec with the Vue.js framework.",
            "name": "py-ipyvuetify"
        },
        {
            "description": "IPython widgets for the Jupyter Notebook",
            "name": "py-ipywidgets"
        },
        {
            "description": "IRPF90 is a Fortran90 preprocessor written in Python for programming\nusing the Implicit Reference to Parameters (IRP) method. It simplifies\nthe development of large fortran codes in the field of scientific high\nperformance computing.",
            "name": "py-irpf90"
        },
        {
            "description": "Metadata tracking tools help to manage an increasingly diverse set of\nlife science, environmental and biomedical experiments",
            "name": "py-isa-rwval"
        },
        {
            "description": "Faster zlib and gzip compatible compression and decompression by\nproviding Python bindings for the ISA-L library.",
            "name": "py-isal"
        },
        {
            "description": "Simple module to parse ISO 8601 dates",
            "name": "py-iso8601"
        },
        {
            "description": "This module implements ISO 8601 date, time and duration parsing. The\nimplementation follows ISO8601:2004 standard, and implements only\ndate/time representations mentioned in the standard. If something is not\nmentioned there, then it is treated as non existent, and not as an\nallowed option.",
            "name": "py-isodate"
        },
        {
            "description": "Operations with ISO 8601 durations.",
            "name": "py-isoduration"
        },
        {
            "description": "A Python utility / library to sort Python imports.",
            "name": "py-isort"
        },
        {
            "description": "Bacis iterative statistics implementation.",
            "name": "py-iterative-stats"
        },
        {
            "description": "ITK is an open-source toolkit for multidimensional image analysis",
            "name": "py-itk"
        },
        {
            "description": "API for interacting with itol.embl.de",
            "name": "py-itolapi"
        },
        {
            "description": "Various helpers to pass trusted data to untrusted environments.",
            "name": "py-itsdangerous"
        },
        {
            "description": "Fast numerical derivatives for analytic functions with arbitrary round-\noff error and error propagation.",
            "name": "py-jacobi"
        },
        {
            "description": "jaconv (Japanese Converter) is interconverter for Hiragana, Katakana,\nHankaku (half-width character) and Zenkaku (full-width character)",
            "name": "py-jaconv"
        },
        {
            "description": "Python-jamo is a Python Hangul syllable decomposition and synthesis\nlibrary for working with Hangul characters and jamo.",
            "name": "py-jamo"
        },
        {
            "description": "Thread-safe asyncio-aware queue for Python",
            "name": "py-janus"
        },
        {
            "description": "Utility functions for Python class constructs",
            "name": "py-jaraco-classes"
        },
        {
            "description": "Functools like those found in stdlib",
            "name": "py-jaraco-functools"
        },
        {
            "description": "library for fast approximate string matching using Jaro and Jaro-Winkler\nsimilarity.",
            "name": "py-jarowinkler"
        },
        {
            "description": "Jarvis-util is a library which contains various utilities to aid with\ncreating shell scripts within Python. This library contains wrappers for\nexecuting shell commands locally, SSH, SCP, MPI, argument parsing, and\nvarious other random utilities.",
            "name": "py-jarvis-util"
        },
        {
            "description": "Read & write Java .properties files.",
            "name": "py-javaproperties"
        },
        {
            "description": "Differentiate, compile, and transform Numpy code. JAX is a Python\nlibrary for accelerator-oriented array computation and program\ntransformation, designed for high-performance numerical computing and\nlarge-scale machine learning.",
            "name": "py-jax"
        },
        {
            "description": "XLA library for Jax. jaxlib is the support library for JAX. While JAX\nitself is a pure Python package, jaxlib contains the binary (C/C++)\nparts of the library, including Python bindings, the XLA compiler, the\nPJRT runtime, and a handful of handwritten kernels.",
            "name": "py-jaxlib"
        },
        {
            "description": "Type annotations and runtime checking for shape and dtype of JAX arrays,\nand PyTrees.",
            "name": "py-jaxtyping"
        },
        {
            "description": "JEDI Configuration Builder",
            "name": "py-jcb"
        },
        {
            "description": "jdatetime is Jalali implementation of Python's datetime module",
            "name": "py-jdatetime"
        },
        {
            "description": "Julian dates from proleptic Gregorian and Julian calendars",
            "name": "py-jdcal"
        },
        {
            "description": "An autocompletion tool for Python that can be used for text editors.",
            "name": "py-jedi"
        },
        {
            "description": "Low-level, pure Python DBus protocol wrapper.",
            "name": "py-jeepney"
        },
        {
            "description": "a library for doing approximate and phonetic matching of strings.",
            "name": "py-jellyfish"
        },
        {
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment.",
            "name": "py-jinja2"
        },
        {
            "description": "A CLI interface to Jinja2",
            "name": "py-jinja2-cli"
        },
        {
            "description": "Jinja2 Extension for Dates and Times",
            "name": "py-jinja2-time"
        },
        {
            "description": "Fast iterable JSON parser.",
            "name": "py-jiter"
        },
        {
            "description": "JSON Matching Expressions.",
            "name": "py-jmespath"
        },
        {
            "description": "JMP is a Mixed Precision library for JAX.",
            "name": "py-jmp"
        },
        {
            "description": "Lightweight pipelining with Python functions.",
            "name": "py-joblib"
        },
        {
            "description": "This package can load and use a Jet Propulsion Laboratory (JPL)\nephemeris for predicting the position and velocity of a planet or other\nSolar System body.",
            "name": "py-jplephem"
        },
        {
            "description": "Java Property file parser and writer for Python",
            "name": "py-jproperties"
        },
        {
            "description": "Java properties file parser for Python",
            "name": "py-jprops"
        },
        {
            "description": "JPype is an effort to allow python programs full access to java class\nlibraries.",
            "name": "py-jpype1"
        },
        {
            "description": "Jraph: A library for Graph Neural Networks in Jax.",
            "name": "py-jraph"
        },
        {
            "description": "JavaScript minifier.",
            "name": "py-jsmin"
        },
        {
            "description": "Get values from JSON objects usings a path expression.",
            "name": "py-json-get"
        },
        {
            "description": "Python wrapper to convert JSON into a human readable HTML Table\nrepresentation.",
            "name": "py-json2html"
        },
        {
            "description": "The JSON5 Data Interchange Format (JSON5) is a superset of JSON that\naims to alleviate some of the limitations of JSON by expanding its\nsyntax to include some productions from ECMAScript 5.1.",
            "name": "py-json5"
        },
        {
            "description": "An extension to python's argparse which simplifies parsing of\nconfiguration options from command line arguments, json configuration\nfiles (yaml or jsonnet supersets), environment variables and hard-coded\ndefaults.",
            "name": "py-jsonargparse"
        },
        {
            "description": "Diff JSON and JSON-like structures in Python.",
            "name": "py-jsondiff"
        },
        {
            "description": "Library with helpers for the jsonlines file format",
            "name": "py-jsonlines"
        },
        {
            "description": "Library to apply JSON Patches according to RFC 6902",
            "name": "py-jsonpatch"
        },
        {
            "description": "A final implementation of JSONPath for Python that aims to be standard\ncompliant, including arithmetic and binary comparison operators.",
            "name": "py-jsonpath-ng"
        },
        {
            "description": "Python library for serializing any arbitrary object graph into JSON.",
            "name": "py-jsonpickle"
        },
        {
            "description": "Library to resolve JSON Pointers according to RFC 6901",
            "name": "py-jsonpointer"
        },
        {
            "description": "An implementation of JSON Reference for Python",
            "name": "py-jsonref"
        },
        {
            "description": "Jsonschema: An(other) implementation of JSON Schema for Python.",
            "name": "py-jsonschema"
        },
        {
            "description": "The JSON Schema meta-schemas and vocabularies, exposed as a Registry.",
            "name": "py-jsonschema-specifications"
        },
        {
            "description": "Creates JUnit XML test result documents that can be read by tools such\nas Jenkins",
            "name": "py-junit-xml"
        },
        {
            "description": "Simple self-contained python tool to produce a single html file from a\nsingle junit xml file.",
            "name": "py-junit2html"
        },
        {
            "description": "Jupyter metapackage. Install all the Jupyter components in one go.",
            "name": "py-jupyter"
        },
        {
            "description": "Jupyter protocol client APIs",
            "name": "py-jupyter-client"
        },
        {
            "description": "Jupyter Terminal Console",
            "name": "py-jupyter-console"
        },
        {
            "description": "Core Jupyter functionality",
            "name": "py-jupyter-core"
        },
        {
            "description": "Jupyter Event System library.",
            "name": "py-jupyter-events"
        },
        {
            "description": "ipyleaflet extensions for JupyterLab and Jupyter Notebook.",
            "name": "py-jupyter-leaflet"
        },
        {
            "description": "Multi-Language Server WebSocket proxy for Jupyter Notebook/Lab server.",
            "name": "py-jupyter-lsp"
        },
        {
            "description": "Jupyter Packaging Utilities.",
            "name": "py-jupyter-packaging"
        },
        {
            "description": "The Jupyter Server provides the backend (i.e. the core services, APIs,\nand REST endpoints) for Jupyter web applications like Jupyter notebook,\nJupyterLab, and Voila.",
            "name": "py-jupyter-server"
        },
        {
            "description": "MathJax resources as a Jupyter Server Extension.",
            "name": "py-jupyter-server-mathjax"
        },
        {
            "description": "Jupyter Server Proxy lets you run arbitrary external processes (such as\nRStudio, Shiny Server, Syncthing, PostgreSQL, Code Server, etc)\nalongside your notebook server and provide authenticated web access to\nthem using a path like /rstudio next to others like /lab.",
            "name": "py-jupyter-server-proxy"
        },
        {
            "description": "A Jupyter Server Extension Providing Terminals.",
            "name": "py-jupyter-server-terminals"
        },
        {
            "description": "Jupyter Telemetry enables Jupyter Applications to record events and\ntransmit them to destinations as structured data",
            "name": "py-jupyter-telemetry"
        },
        {
            "description": "Multi-user server for Jupyter notebooks.",
            "name": "py-jupyterhub"
        },
        {
            "description": "JupyterLab is the next-generation web-based user interface for Project\nJupyter.",
            "name": "py-jupyterlab"
        },
        {
            "description": "Pygments theme using JupyterLab CSS variables.",
            "name": "py-jupyterlab-pygments"
        },
        {
            "description": "A set of server components for JupyterLab and JupyterLab like\napplications",
            "name": "py-jupyterlab-server"
        },
        {
            "description": "A JupyterLab extension.",
            "name": "py-jupyterlab-widgets"
        },
        {
            "description": "Jupyter Notebooks as Markdown Documents, Julia, Python or R scripts",
            "name": "py-jupytext"
        },
        {
            "description": "JWCrypto is an implementation of the Javascript Object Signing and\nEncryption (JOSE) Web Standards as they are being developed in the JOSE\nIETF Working Group and related technology. JWCrypto uses the\nCryptography package for all the crypto functions.",
            "name": "py-jwcrypto"
        },
        {
            "description": "Official API for https://www.kaggle.com, accessible using a command line\ntool implemented in Python. Beta release - Kaggle reserves the right to\nmodify the API functionality currently offered.",
            "name": "py-kaggle"
        },
        {
            "description": "A pure python module for reading and writing kaldi ark files",
            "name": "py-kaldiio"
        },
        {
            "description": "Static image export for web-based visualization libraries with zero\ndependencies",
            "name": "py-kaleido"
        },
        {
            "description": "Python wrapper around kallisto | bustools for scRNA-seq analysis.",
            "name": "py-kb-python"
        },
        {
            "description": "Multi-backend Keras. Keras 3 is a new multi-backend implementation of\nthe Keras API, with support for TensorFlow, JAX, and PyTorch.",
            "name": "py-keras"
        },
        {
            "description": "Sample Deep Learning application in Keras. Keras depends on this package\nto run properly.",
            "name": "py-keras-applications"
        },
        {
            "description": "Utilities for working with image data, text data, and sequence data.",
            "name": "py-keras-preprocessing"
        },
        {
            "description": "Converts Machine Learning models to ONNX for use in Windows ML",
            "name": "py-keras2onnx"
        },
        {
            "description": "This Python package is a high-level wrapper for Kerberos (GSSAPI)\noperations. The goal is to avoid having to build a module that wraps the\nentire Kerberos.framework, and instead offer a limited set of functions\nthat do what is needed for client/server Kerberos authentication based\non <https://www.ietf.org/rfc/rfc4559.txt>.",
            "name": "py-kerberos"
        },
        {
            "description": "Take full control of your keyboard with this small Python library. Hook\nglobal events, register hotkeys, simulate key presses and much more.",
            "name": "py-keyboard"
        },
        {
            "description": "The Python keyring library provides an easy way to access the system\nkeyring service from python. It can be used in any application that\nneeds safe password storage.",
            "name": "py-keyring"
        },
        {
            "description": "Alternate keyring implementations",
            "name": "py-keyrings-alt"
        },
        {
            "description": "This package contains tools for authenticating to an OpenStack-based\ncloud",
            "name": "py-keystoneauth1"
        },
        {
            "description": "Kitchen contains a cornucopia of useful code",
            "name": "py-kitchen"
        },
        {
            "description": "A fast implementation of the Cassowary constraint solver",
            "name": "py-kiwisolver"
        },
        {
            "description": "Python implementations of the k-modes and k-prototypes clustering\nalgorithms for clustering categorical data.",
            "name": "py-kmodes"
        },
        {
            "description": "A Command-Line Interface framework.",
            "name": "py-knack"
        },
        {
            "description": "Quality control tool on metagenomic and metatranscriptomic sequencing\ndata, especially data from microbiome experiments",
            "name": "py-kneaddata"
        },
        {
            "description": "Messaging library for Python.",
            "name": "py-kombu"
        },
        {
            "description": "Open Source Differentiable Computer Vision Library for PyTorch.",
            "name": "py-kornia"
        },
        {
            "description": "Low level implementations for computer vision in Rust.",
            "name": "py-kornia-rs"
        },
        {
            "description": "Kosh allows codes to store, query, share data via an easy-to-use Python\nAPI. Kosh lies on top of Sina and can use any database backend supported\nby Sina. In adition Kosh aims to make data access and sharing as simple\nas possible.",
            "name": "py-kosh"
        },
        {
            "description": "Kerberos API bindings for Python.",
            "name": "py-krb5"
        },
        {
            "description": "This repository is to support the deprecated import name of Keras Tuner.\nWith this repo, you can import Keras Tuner as kerastuner. In the main\nKeras Tuner repository the import name has been changed to keras_tuner.",
            "name": "py-kt-legacy"
        },
        {
            "description": "Official Python client library for kubernetes.",
            "name": "py-kubernetes"
        },
        {
            "description": "Wavelet scattering transforms in Python with GPU acceleration.",
            "name": "py-kymatio"
        },
        {
            "description": "Lagom is a dependency injection container designed to give you 'just\nenough' help with building your dependencies.",
            "name": "py-lagom"
        },
        {
            "description": "Tools for labeling human languages with IETF language tags",
            "name": "py-langcodes"
        },
        {
            "description": "Client library to connect to the LangSmith LLM Tracing and Evaluation\nPlatform.",
            "name": "py-langsmith"
        },
        {
            "description": "lap is a linear assignment problem solver using Jonker-Volgenant\nalgorithm for dense (LAPJV) or sparse (LAPMOD) matrices.",
            "name": "py-lap"
        },
        {
            "description": "laplace - Laplace approximations for deep learning.",
            "name": "py-laplace-torch"
        },
        {
            "description": "Lark is a modern general-purpose parsing library for Python.",
            "name": "py-lark"
        },
        {
            "description": "Lark is a modern general-purpose parsing library for Python.",
            "name": "py-lark-parser"
        },
        {
            "description": "Native Python ASPRS LAS read/write library.",
            "name": "py-laspy"
        },
        {
            "description": "A lexer and codec to work with LaTeX code in Python.",
            "name": "py-latexcodec"
        },
        {
            "description": "Build large-scale task workflows using luigi, remote job submission,\nremote targets, and environment",
            "name": "py-law"
        },
        {
            "description": "Lazy attributes for Python objects",
            "name": "py-lazy"
        },
        {
            "description": "lazy_loader makes it easy to load subpackages and functions on demand.",
            "name": "py-lazy-loader"
        },
        {
            "description": "A fast and thorough lazy object proxy.",
            "name": "py-lazy-object-proxy"
        },
        {
            "description": "A package for making properties lazy",
            "name": "py-lazy-property"
        },
        {
            "description": "a Python package that provides a lazily-evaluated numerical array class,\nlarray, based on and compatible with NumPy arrays.",
            "name": "py-lazyarray"
        },
        {
            "description": "Very small utility class for using Kerberos authentication with Python\nrequests.",
            "name": "py-lcls-krtc"
        },
        {
            "description": "A strictly RFC 4510 conforming LDAP V3 pure Python client library.",
            "name": "py-ldap3"
        },
        {
            "description": "Leather is the Python charting library for those who need charts now and\ndon't care if they're perfect.",
            "name": "py-leather"
        },
        {
            "description": "Limited Error Raster Compression.",
            "name": "py-lerc"
        },
        {
            "description": "This Python module contain freestanding implementations of electrostatic\nforward models incorporated in LFPy",
            "name": "py-lfpykit"
        },
        {
            "description": "Latin Hypercube Sampling with Multi-Dimensional Uniformity (LHS-MDU)\nfrom Deutsch and Deutsch, Latin hypercube sampling with multidimensional\nuniformity.",
            "name": "py-lhsmdu"
        },
        {
            "description": "The liac-arff module implements functions to read and write ARFF files\nin Python.",
            "name": "py-liac-arff"
        },
        {
            "description": "The repository contains code that taken from the LLVM project, to make\nit easier to install clang's python bindings.",
            "name": "py-libclang"
        },
        {
            "description": "A pure-Python libconfig reader/writer with permissive license",
            "name": "py-libconf"
        },
        {
            "description": "A Concrete Syntax Tree (CST) parser and serializer library for Python.",
            "name": "py-libcst"
        },
        {
            "description": "Library for managing ensemble-like collections of computations.",
            "name": "py-libensemble"
        },
        {
            "description": "libLAS is a C/C++ library for reading and writing the very common LAS\nLiDAR format.",
            "name": "py-liblas"
        },
        {
            "description": "A python package for music and audio analysis.",
            "name": "py-librosa"
        },
        {
            "description": "SONATA files reader",
            "name": "py-libsonata"
        },
        {
            "description": "Survival analysis was originally developed and applied heavily by the\nactuarial and medical community. Its purpose was to answer *why do\nevents occur now versus later* under uncertainty (where *events* might\nrefer to deaths, disease remission, etc.). *lifelines* is a pure Python\nimplementation of the best parts of survival analysis.",
            "name": "py-lifelines"
        },
        {
            "description": "LightGBM is a gradient boosting framework that uses tree based learning\nalgorithms.",
            "name": "py-lightgbm"
        },
        {
            "description": "A deep learning package for self-supervised learning.",
            "name": "py-lightly"
        },
        {
            "description": "A utility package for lightly.",
            "name": "py-lightly-utils"
        },
        {
            "description": "The deep learning framework to pretrain, finetune and deploy AI models.",
            "name": "py-lightning"
        },
        {
            "description": "Lightning Frontend Showing how a given API can be accessed.",
            "name": "py-lightning-api-access"
        },
        {
            "description": "Lightning AI Command Line Interface.",
            "name": "py-lightning-cloud"
        },
        {
            "description": "Fabric is the fast and lightweight way to scale PyTorch models without\nboilerplate.",
            "name": "py-lightning-fabric"
        },
        {
            "description": "LightningLite enables pure PyTorch users to scale their existing code on\nany kind of device while retaining full control over their own loops and\noptimization logic.",
            "name": "py-lightning-lite"
        },
        {
            "description": "Lighning-UQ-Box: A toolbox for uncertainty quantification in deep\nlearning.",
            "name": "py-lightning-uq-box"
        },
        {
            "description": "Common Python utilities and GitHub Actions in Lightning Ecosystem",
            "name": "py-lightning-utilities"
        },
        {
            "description": "Representations of semi-open intervals.",
            "name": "py-ligo-segments"
        },
        {
            "description": "Line-by-line profiler.",
            "name": "py-line-profiler"
        },
        {
            "description": "A linear operator implementation, primarily designed for finite-\ndimensional positive definite operators (i.e. kernel matrices).",
            "name": "py-linear-operator"
        },
        {
            "description": "A python library to build Model Trees with Linear Models at the leaves.",
            "name": "py-linear-tree"
        },
        {
            "description": "Backports of the linecache module",
            "name": "py-linecache2"
        },
        {
            "description": "The line enhancer is only used by crYOLO internally",
            "name": "py-lineenhancer"
        },
        {
            "description": "Check for broken links in web sites.",
            "name": "py-linkchecker"
        },
        {
            "description": "Links recognition library with FULL unicode support.",
            "name": "py-linkify-it-py"
        },
        {
            "description": "lit is a portable tool for executing LLVM and Clang style test suites,\nsummarizing their results, and providing indication of failures. lit is\ndesigned to be a lightweight testing tool with as simple a user\ninterface as possible.",
            "name": "py-lit"
        },
        {
            "description": "The Deep Learning framework to train, deploy, and ship AI products\nLightning fast.",
            "name": "py-litdata"
        },
        {
            "description": "Small personal collection of python utility functions, partly just for\nfun.",
            "name": "py-littleutils"
        },
        {
            "description": "A code analyzer without caring the C/C++ header files. It works with\nJava, C/C++, JavaScript, Python, Ruby, Swift, Objective C. Metrics\nincludes cyclomatic complexity number etc.",
            "name": "py-lizard"
        },
        {
            "description": "Sina allows codes to store, query, and visualize their data through an\neasy-to-use Python API. Data that fits its recognized schema can be\ningested into one or more supported backends. Sina's API is independent\nof backend and gives users the benefits of a database without requiring\nknowledge of one, allowing queries to be expressed in pure Python.\nVisualizations are also provided through Python. Sina is intended\nespecially for use with run metadata, allowing users to easily and\nefficiently find simulation runs that match some criteria.",
            "name": "py-llnl-sina"
        },
        {
            "description": "A lightweight LLVM python binding for writing JIT compilers",
            "name": "py-llvmlite"
        },
        {
            "description": "Universal Python binding for the LMDB 'Lightning' Database",
            "name": "py-lmdb"
        },
        {
            "description": "Least-Squares Minimization with Bounds and Constraints",
            "name": "py-lmfit"
        },
        {
            "description": "Lmodule is a Python API for Lmod module system. It's primary purpose is\nto help automate module testing. Lmodule uses Lmod spider tool to query\nall modules in-order to automate module testing. Lmodule can be used\nwith environment-modules to interact with module using the Module class.",
            "name": "py-lmodule"
        },
        {
            "description": "Tools for calculating sequence properties of disordered proteins",
            "name": "py-localcider"
        },
        {
            "description": "File-based locks for Python for Linux and Windows.",
            "name": "py-locket"
        },
        {
            "description": "The lockfile package exports a LockFile class which provides a simple\nAPI for locking files. Unlike the Windows msvcrt.locking function, the\nfcntl.lockf and flock functions, and the deprecated posixfile module,\nthe API is identical across both Unix (including Linux and Mac) and\nWindows platforms. The lock mechanism relies on the atomic nature of the\nlink (on Unix) and mkdir (on Windows) system calls. An implementation\nbased on SQLite is also provided, more as a demonstration of the\npossibilities it provides than as production-quality code.",
            "name": "py-lockfile"
        },
        {
            "description": "Common modules used by Logilab projects",
            "name": "py-logilab-common"
        },
        {
            "description": "A small logging setup package.",
            "name": "py-logmuse"
        },
        {
            "description": "Loguru is a library which aims to bring enjoyable logging in Python.",
            "name": "py-loguru"
        },
        {
            "description": "Reusable Process Pool Executor",
            "name": "py-loky"
        },
        {
            "description": "Work with Loom files for single-cell RNA-seq data.",
            "name": "py-loompy"
        },
        {
            "description": "Version numbering for anarchists and software realists.",
            "name": "py-looseversion"
        },
        {
            "description": "Louie provides Python programmers with a straightforward way to dispatch\nsignals between objects in a wide variety of contexts. It is based on\nPyDispatcher, which in turn was based on a highly-rated recipe in the\nPython Cookbook.",
            "name": "py-louie"
        },
        {
            "description": "LPIPS Similarity metric",
            "name": "py-lpips"
        },
        {
            "description": "A fast LRU cache",
            "name": "py-lru-dict"
        },
        {
            "description": "Glue (Grid LSC User Environment) is a suite of python modules and\nprograms to allow users to run LSC codes on the grid. It also provides\ncertain metadata services, such as the LSC segment database.",
            "name": "py-lscsoft-glue"
        },
        {
            "description": "Code generator and generated types for Language Server Protocol.",
            "name": "py-lsprotocol"
        },
        {
            "description": "Workflow mgmgt + task scheduling + dependency resolution",
            "name": "py-luigi"
        },
        {
            "description": "Python API for LVIS dataset.",
            "name": "py-lvis"
        },
        {
            "description": "Fast spectrogram phase recovery using Local Weighted Sums",
            "name": "py-lws"
        },
        {
            "description": "lxml is the most feature-rich and easy-to-use library for processing XML\nand HTML in the Python language.",
            "name": "py-lxml"
        },
        {
            "description": "lz4 (compression library) bindings for Python",
            "name": "py-lz4"
        },
        {
            "description": "lz-string for python.",
            "name": "py-lzstring"
        },
        {
            "description": "M2R converts a markdown file including reStructuredText (rst) markups to\na valid rst format.",
            "name": "py-m2r"
        },
        {
            "description": "Python package for Mach-O header analysis and editing",
            "name": "py-macholib"
        },
        {
            "description": "Python package for editing Mach-O headers using macholib",
            "name": "py-machotools"
        },
        {
            "description": "MACS2 Model-based Analysis of ChIP-Seq",
            "name": "py-macs2"
        },
        {
            "description": "MACS: Model-based Analysis for ChIP-Seq",
            "name": "py-macs3"
        },
        {
            "description": "A general purpose workflow conductor for running multi-step simulation\nstudies.",
            "name": "py-maestrowf"
        },
        {
            "description": "Mahotas: Computer Vision Library.",
            "name": "py-mahotas"
        },
        {
            "description": "Cross-language email validation. Backed by a database of thousands\nthrowable email providers",
            "name": "py-mailchecker"
        },
        {
            "description": "Create project layout from jinja2 templates",
            "name": "py-make"
        },
        {
            "description": "A super-fast templating language that borrows the best ideas from the\nexisting templating languages.",
            "name": "py-mako"
        },
        {
            "description": "Python bindings for the C++ implementation of the Mapbox Earcut library,\nwhich provides very fast and quite robust triangulation of 2D polygons.",
            "name": "py-mapbox-earcut"
        },
        {
            "description": "Classification Schemes for Choropleth Maps.",
            "name": "py-mapclassify"
        },
        {
            "description": "A module for connecting to mariaDB databases",
            "name": "py-mariadb"
        },
        {
            "description": "This is a Python implementation of John Gruber's Markdown. It is almost\ncompletely compliant with the reference implementation, though there are\na few very minor differences. See John's Syntax Documentation for the\nsyntax rules.",
            "name": "py-markdown"
        },
        {
            "description": "This is an extension to Python-Markdown which provides an \"include\"\nfunction, similar to that found in LaTeX (and also the C pre-processor\nand Fortran).",
            "name": "py-markdown-include"
        },
        {
            "description": "Markdown parser, done right. 100% CommonMark support, extensions, syntax\nplugins & high speed",
            "name": "py-markdown-it-py"
        },
        {
            "description": "A fast and complete Python implementation of Markdown.",
            "name": "py-markdown2"
        },
        {
            "description": "Implementation of the Markov clustering (MCL) algorithm in python",
            "name": "py-markov-clustering"
        },
        {
            "description": "Markovify is a simple, extensible Markov chain generator. Right now, its\nprimary use is for building Markov models of large corpora of text and\ngenerating random sentences from that.",
            "name": "py-markovify"
        },
        {
            "description": "MarkupSafe is a library for Python that implements a unicode string that\nis aware of HTML escaping rules and can be used to implement automatic\nstring escaping. It is used by Jinja 2, the Mako templating engine, the\nPylons web framework and many more.",
            "name": "py-markupsafe"
        },
        {
            "description": "marshmallow is an ORM/ODM/framework-agnostic library for converting\ncomplex datatypes, such as objects, to and from native Python datatypes.",
            "name": "py-marshmallow"
        },
        {
            "description": "Matminer is a library for performing data mining in the field of\nmaterials science.",
            "name": "py-matminer"
        },
        {
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.",
            "name": "py-matplotlib"
        },
        {
            "description": "Inline Matplotlib backend for Jupyter.",
            "name": "py-matplotlib-inline"
        },
        {
            "description": "Provides a new artist for matplotlib to display a scale bar, aka micron\nbar.",
            "name": "py-matplotlib-scalebar"
        },
        {
            "description": "Build and publish crates with pyo3, rust-cpython and cffi bindings as\nwell as rust binaries as python packages.",
            "name": "py-maturin"
        },
        {
            "description": "Mayavi: 3D visualization of scientific data in Python.",
            "name": "py-mayavi"
        },
        {
            "description": "Ned's script to check McCabe complexity.",
            "name": "py-mccabe"
        },
        {
            "description": "This is an extension to Python-Markdown which allows environment\nvariables to be used in the text.",
            "name": "py-md-environ"
        },
        {
            "description": "A stand-alone XDRLIB module extracted from CPython 3.10.8",
            "name": "py-mda-xdrlib"
        },
        {
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)",
            "name": "py-mdanalysis"
        },
        {
            "description": "Test suite for MDAnalysis",
            "name": "py-mdanalysistests"
        },
        {
            "description": "MolSSI Driver Interface (MDI) Library The MolSSI Driver Interface (MDI)\nproject provides a standardized API for fast, on-the-fly communication\nbetween computational chemistry codes. This greatly simplifies the\nprocess of implementing methods that require the cooperation of multiple\nsoftware packages and enables developers to write a single\nimplementation that works across many different codes.",
            "name": "py-mdi"
        },
        {
            "description": "Collection of core plugins for markdown-it-py",
            "name": "py-mdit-py-plugins"
        },
        {
            "description": "Markdown URL utilities.",
            "name": "py-mdurl"
        },
        {
            "description": "Python package for multi-electrode array (MEA) handling and stimulation.",
            "name": "py-meautility"
        },
        {
            "description": "Stateful programmatic web browsing.",
            "name": "py-mechanize"
        },
        {
            "description": "medaka is a tool to create consensus sequences and variant calls from\nnanopore sequencing data. This task is performed using neural networks\napplied a pileup of individual sequencing reads against a draft\nassembly. It provides state-of-the-art results outperforming sequence-\ngraph based methods and signal-based methods, whilst also being faster.",
            "name": "py-medaka"
        },
        {
            "description": "MELD is a tool for inferring the structure of biomolecules from sparse,\nambiguous, or noisy data.",
            "name": "py-meldmd"
        },
        {
            "description": "Melissa is a file-avoiding, adaptive, fault-tolerant and elastic\nframework, to run large-scale sensitivity analysis or deep-surrogate\ntraining on supercomputers. This package builds the launcher and server\nmodules.",
            "name": "py-melissa-core"
        },
        {
            "description": "A module for monitoring memory usage of a python program",
            "name": "py-memory-profiler"
        },
        {
            "description": "memprof logs and plots the memory usage of all the variables during the\nexecution of the decorated methods.",
            "name": "py-memprof"
        },
        {
            "description": "A memory profiler for Python applications.",
            "name": "py-memray"
        },
        {
            "description": "Web mercator XYZ tile utilities.",
            "name": "py-mercantile"
        },
        {
            "description": "A deep merge function for Python.",
            "name": "py-mergedeep"
        },
        {
            "description": "Merlin Workflow for HPC.",
            "name": "py-merlin"
        },
        {
            "description": "MeshIO is a Python library to read and write many mesh formats.",
            "name": "py-meshio"
        },
        {
            "description": "Simplicial Mesh Generation from Python",
            "name": "py-meshpy"
        },
        {
            "description": "Meson Python build backend (PEP 517).",
            "name": "py-meson-python"
        },
        {
            "description": "MetaPhlAn is a computational tool for profiling the composition of\nmicrobial communities (Bacteria, Archaea and Eukaryotes) from\nmetagenomic shotgun sequencing data (i.e. not 16S) with species-level.",
            "name": "py-metaphlan"
        },
        {
            "description": "An accurate and integrative structural-variant caller for next\ngeneration sequencing",
            "name": "py-metasv"
        },
        {
            "description": "Wrapper for the METIS library for partitioning graphs (and other stuff).",
            "name": "py-metis"
        },
        {
            "description": "Python ISO 8601 date time parser and data model/manipulation utilities.",
            "name": "py-metomi-isodatetime"
        },
        {
            "description": "Rose, a framework for meteorological suites.",
            "name": "py-metomi-rose"
        },
        {
            "description": "Collection of tools for reading, visualizing and performing calculations\nwith weather data.",
            "name": "py-metpy"
        },
        {
            "description": "metric-learn contains efficient Python implementations of several\npopular supervised and weakly-supervised metric learning algorithms. As\npart of scikit-learn-contrib, the API of metric-learn is compatible with\nscikit-learn, the leading library for machine learning in Python. This\nallows to use all the scikit-learn routines (for pipelining, model\nselection, etc) with metric learning algorithms through a unified\ninterface.",
            "name": "py-metric-learn"
        },
        {
            "description": "metrics for Python, C, C++, Go and Javascript code",
            "name": "py-metrics"
        },
        {
            "description": "Reader and Writer for Philips' MFF file format.",
            "name": "py-mffpy"
        },
        {
            "description": "Repository of scripts and libraries for using the MG-RAST API and MG-\nRAST data.",
            "name": "py-mg-rast-tools"
        },
        {
            "description": "METIS partitioner for mesh and graphMETIS partitioner for mesh and graph",
            "name": "py-mgmetis"
        },
        {
            "description": "Mido is a library for working with MIDI messages and ports. It's\ndesigned to be as straight forward and Pythonic as possible.",
            "name": "py-mido"
        },
        {
            "description": "Mikado is a lightweight Python3 pipeline whose purpose is to facilitate\nthe identification of expressed loci from RNA-Seq data * and to select\nthe best models in each locus.",
            "name": "py-mikado"
        },
        {
            "description": "mike is a Python utility to easily deploy multiple versions of your\nMkDocs-powered docs to a Git branch, suitable for deploying to Github\nvia gh-pages.",
            "name": "py-mike"
        },
        {
            "description": "MinIO Python SDK is Simple Storage Service (aka S3) client to perform\nbucket and object operations to any Amazon S3 compatible object storage\nservice.",
            "name": "py-minio"
        },
        {
            "description": "MiniSom is a minimalistic and Numpy based implementation of the Self\nOrganizing Maps (SOM). SOM is a type of Artificial Neural Network able\nto convert complex, nonlinear statistical relationships between high-\ndimensional data items into simple geometric relationships on a low-\ndimensional display. Minisom is designed to allow researchers to easily\nbuild on top of it and to give students the ability to quickly grasp its\ndetails. The project initially aimed for a minimalistic implementation\nof the Self-Organizing Map (SOM) algorithm, focusing on simplicity in\nfeatures, dependencies, and code style. Although it has expanded in\nterms of features, it remains minimalistic by relying only on the numpy\nlibrary and emphasizing vectorization in coding style.",
            "name": "py-minisom"
        },
        {
            "description": "The MinkowskiEngine is an auto-differentiation library for sparse\ntensors.",
            "name": "py-minkowskiengine"
        },
        {
            "description": "Minimalistic RPC utility (only used within cpymad and pytao).",
            "name": "py-minrpc"
        },
        {
            "description": "Miscellaneous useful bits for Python 3.",
            "name": "py-misk"
        },
        {
            "description": "MISO (Mixture of Isoforms) is a probabilistic framework that quantitates\nthe expression level of alternatively spliced genes from RNA-Seq data,\nand identifies differentially regulated isoforms or exons across\nsamples.",
            "name": "py-misopy"
        },
        {
            "description": "A fast, extensible Markdown parser in pure Python.",
            "name": "py-mistletoe"
        },
        {
            "description": "A sane Markdown parser with useful plugins and renderers.",
            "name": "py-mistune"
        },
        {
            "description": "Mizani is a scales package for graphics. It is based on Hadley Wickham's\nScales package.",
            "name": "py-mizani"
        },
        {
            "description": "MkDocs is a fast, simple and downright gorgeous static site generator\nthat's geared towards building project documentation.",
            "name": "py-mkdocs"
        },
        {
            "description": "Automatically link across pages in MkDocs.",
            "name": "py-mkdocs-autorefs"
        },
        {
            "description": "Use Jupyter in mkdocs websites.",
            "name": "py-mkdocs-jupyter"
        },
        {
            "description": "Write your documentation in Markdown and create a professional static\nsite for your Open Source or commercial project in minutes.",
            "name": "py-mkdocs-material"
        },
        {
            "description": "Markdown extension resources for MkDocs for Material.",
            "name": "py-mkdocs-material-extensions"
        },
        {
            "description": "Automatic documentation from sources, for MkDocs.",
            "name": "py-mkdocstrings"
        },
        {
            "description": "A Python handler for mkdocstrings.",
            "name": "py-mkdocstrings-python"
        },
        {
            "description": "ML Collections is a library of Python collections designed for ML\nusecases.",
            "name": "py-ml-collections"
        },
        {
            "description": "A stand-alone implementation of several NumPy dtype extensions used in\nmachine learning libraries.",
            "name": "py-ml-dtypes"
        },
        {
            "description": "MLflow: A Platform for ML Development and Productionization.",
            "name": "py-mlflow"
        },
        {
            "description": "MLPerf Compliance Logging Utilities and Helper Functions.",
            "name": "py-mlperf-logging"
        },
        {
            "description": "Mlxtend (machine learning extensions) is a Python library of useful\ntools for the day-to-day data science tasks.",
            "name": "py-mlxtend"
        },
        {
            "description": "MMCV is a foundational python library for computer vision research and\nsupports many research projects in MMLAB, such as MMDetection and\nMMAction.",
            "name": "py-mmcv"
        },
        {
            "description": "The macromolecular transmission format (MMTF) is a binary encoding of\nbiological structures.",
            "name": "py-mmtf-python"
        },
        {
            "description": "MNE python project for MEG and EEG data analysis.",
            "name": "py-mne"
        },
        {
            "description": "MNE-BIDS: Organizing MEG, EEG, and iEEG data according to the BIDS\nspecification and facilitating their analysis with MNE-Python.",
            "name": "py-mne-bids"
        },
        {
            "description": "Packing methods used to encode and decode the data payloads of Met\nOffice Unified Model 'fields'",
            "name": "py-mo-pack"
        },
        {
            "description": "Biobjective Archive class with hypervolume indicator and uncrowded\nhypervolume improvement computation.",
            "name": "py-moarchiving"
        },
        {
            "description": "mock is a library for testing in Python. It allows you to replace parts\nof your system under test with mock objects and make assertions about\nhow they have been used.",
            "name": "py-mock"
        },
        {
            "description": "Create a source of truth for ML model results and browse it on Papers\nwith Code",
            "name": "py-model-index"
        },
        {
            "description": "Basis Functions and Node Sets for Interpolation",
            "name": "py-modepy"
        },
        {
            "description": "Modin: Make your pandas code run faster by changing one line of code.",
            "name": "py-modin"
        },
        {
            "description": "Modred is a parallelized library for finding modal decompositions and\nreduced-order models.",
            "name": "py-modred"
        },
        {
            "description": "MoGui is a Graphical User Interface (GUI) for Environment Modules. It\nhelps users selecting modules to load and save module collections.",
            "name": "py-modules-gui"
        },
        {
            "description": "Moltemplate is a general cross-platform text-based molecule builder for\nLAMMPS.",
            "name": "py-moltemplate"
        },
        {
            "description": "AI Toolkit for Healthcare Imaging",
            "name": "py-monai"
        },
        {
            "description": "Generating type annotations from sampled production types.",
            "name": "py-monkeytype"
        },
        {
            "description": "An implementation of time.monotonic() for Python 2 & < 3.3",
            "name": "py-monotonic"
        },
        {
            "description": "Monty is the missing complement to Python.",
            "name": "py-monty"
        },
        {
            "description": "Additions to the standard Python itertools package.",
            "name": "py-more-itertools"
        },
        {
            "description": "Python morphology manipulation toolkit",
            "name": "py-morph-tool"
        },
        {
            "description": "Python library for reading / writing morphology files",
            "name": "py-morphio"
        },
        {
            "description": "The py-motmetrics library provides a Python implementation of metrics\nfor benchmarking multiple object trackers (MOT).",
            "name": "py-motmetrics"
        },
        {
            "description": "async Python driver for MongoDB and Tornado or asyncio",
            "name": "py-motor"
        },
        {
            "description": "An application to display XY position and RGB color information for the\npixel currently under the mouse. Works on Python 2 and 3. This is useful\nfor GUI automation planning.",
            "name": "py-mouseinfo"
        },
        {
            "description": "MoviePy is a Python module for video editing, which can be used for\nbasic operations (like cuts, concatenations, title insertions), video\ncompositing (a.k.a. non-linear editing), video processing, or to create\nadvanced effects. It can read and write the most common video formats,\nincluding GIF.",
            "name": "py-moviepy"
        },
        {
            "description": "Zero-copy MPI communication of JAX arrays, for turbo-charged HPC\napplications in Python.",
            "name": "py-mpi4jax"
        },
        {
            "description": "This package provides Python bindings for the Message Passing Interface\n(MPI) standard. It is implemented on top of the MPI-1/MPI-2\nspecification and exposes an API which grounds on the standard MPI-2 C++\nbindings.",
            "name": "py-mpi4py"
        },
        {
            "description": "An interactive D3js-based viewer which brings matplotlib graphics to the\nbrowser.",
            "name": "py-mpld3"
        },
        {
            "description": "Dock matplotlib figures and other widgets.",
            "name": "py-mpldock"
        },
        {
            "description": "Matplotlib styles for HEP",
            "name": "py-mplhep"
        },
        {
            "description": "Font (Data) sub-package for mplhep",
            "name": "py-mplhep-data"
        },
        {
            "description": "A Python library for arbitrary-precision floating-point arithmetic.",
            "name": "py-mpmath"
        },
        {
            "description": "Python implementation of the MRC2014 file format, which is used in\nstructural biology to store image and volume data.",
            "name": "py-mrcfile"
        },
        {
            "description": "The Microsoft Authentication Library (MSAL) for Python library enables\nyour app to access the Microsoft Cloud by supporting authentication of\nusers with Microsoft Azure Active Directory accounts (AAD) and Microsoft\nAccounts (MSA) using industry standard OAuth2 and OpenID Connect.",
            "name": "py-msal"
        },
        {
            "description": "The Microsoft Authentication Extensions for Python offers secure\nmechanisms for client applications to perform cross-platform token cache\nserialization and persistence. It gives additional support to the\nMicrosoft Authentication Library for Python (MSAL).",
            "name": "py-msal-extensions"
        },
        {
            "description": "MessagePack (de)serializer.",
            "name": "py-msgpack"
        },
        {
            "description": "This package provides encoding and decoding routines that enable the\nserialization and deserialization of numerical and array data types\nprovided by numpy using the highly efficient msgpack format.\nSerialization of Python's native complex data types is also supported.",
            "name": "py-msgpack-numpy"
        },
        {
            "description": "AutoRest swagger generator Python client runtime.",
            "name": "py-msrest"
        },
        {
            "description": "AutoRest swagger generator Python client runtime. Azure-specific module.",
            "name": "py-msrestazure"
        },
        {
            "description": "Multi-class imbalance is a common problem occurring in real-world\nsupervised classifications tasks. While there has already been some\nresearch on the specialized methods aiming to tackle that challenging\nproblem, most of them still lack coherent Python implementation that is\nsimple, intuitive and easy to use. multi-imbalance is a python package\ntackling the problem of multi-class imbalanced datasets in machine\nlearnin",
            "name": "py-multi-imbalance"
        },
        {
            "description": "Multi key dictionary implementation",
            "name": "py-multi-key-dict"
        },
        {
            "description": "Multidict is dict-like collection of key-value pairs where key might be\noccurred more than once in the container.",
            "name": "py-multidict"
        },
        {
            "description": "Combine multi-echoes from a multi-echo fMRI acquisition.",
            "name": "py-multiecho"
        },
        {
            "description": "A relatively sane approach to multiple dispatch in Python.",
            "name": "py-multipledispatch"
        },
        {
            "description": "Better multiprocessing and multithreading in Python",
            "name": "py-multiprocess"
        },
        {
            "description": "MultiQC is a tool to aggregate bioinformatics results across many\nsamples into a single report. It is written in Python and contains\nmodules for a large number of common bioinformatics tools.",
            "name": "py-multiqc"
        },
        {
            "description": "A package to download several URL as one, as well as supporting multi-\npart URLs.",
            "name": "py-multiurl"
        },
        {
            "description": "A Munch is a Python dictionary that provides attribute-style access (a\nla JavaScript objects).",
            "name": "py-munch"
        },
        {
            "description": "Python library for Munkres algorithm",
            "name": "py-munkres"
        },
        {
            "description": "Cython bindings for MurmurHash.",
            "name": "py-murmurhash"
        },
        {
            "description": "Read and write audio tags for many formats.",
            "name": "py-mutagen"
        },
        {
            "description": "The eGenix.com mx Base Distribution for Python is a collection of\nprofessional quality software tools which enhance Python's usability in\nmany important areas such as fast text searching, date/time processing\nand high speed data types.",
            "name": "py-mx"
        },
        {
            "description": "MXfold2: RNA secondary structure prediction using deep learning with\nthermodynamic integration",
            "name": "py-mxfold2"
        },
        {
            "description": "Python as a Hardware Description Language",
            "name": "py-myhdl"
        },
        {
            "description": "Optional static typing for Python.",
            "name": "py-mypy"
        },
        {
            "description": "Experimental type system extensions for programs checked with the mypy\ntypechecker.",
            "name": "py-mypy-extensions"
        },
        {
            "description": "MySQL Connector/Python is implementing the MySQL Client/Server protocol\ncompletely in Python. No MySQL libraries are needed, and no compilation\nis necessary to run this Python DB API v2.0 compliant driver.",
            "name": "py-mysql-connector-python"
        },
        {
            "description": "Python interface to MySQL",
            "name": "py-mysqlclient"
        },
        {
            "description": "Legacy mysql bindings for python",
            "name": "py-mysqldb1"
        },
        {
            "description": "A Sphinx and Docutils extension to parse MyST, a rich and extensible\nflavour of Markdown for authoring technical and scientific\ndocumentation.",
            "name": "py-myst-parser"
        },
        {
            "description": "A simple utility to separate the implementation of your Python package\nand its public API surface.",
            "name": "py-namex"
        },
        {
            "description": "nanobind is a small binding library that exposes C++ types in Python and\nvice versa. It is reminiscent of Boost.Python and pybind11 and uses\nnear-identical syntax. In contrast to these existing tools, nanobind is\nmore efficient: bindings compile in a shorter amount of time, produce\nsmaller binaries, and have better runtime performance.",
            "name": "py-nanobind"
        },
        {
            "description": "Functions to extract information from Oxford Nanopore sequencing data\nand alignments",
            "name": "py-nanoget"
        },
        {
            "description": "A few simple math function for other Oxford Nanopore processing scripts",
            "name": "py-nanomath"
        },
        {
            "description": "Plotting scripts for long read sequencing data",
            "name": "py-nanoplot"
        },
        {
            "description": "Calculate statistics for Oxford Nanopore sequencing data and alignments",
            "name": "py-nanostat"
        },
        {
            "description": "The nanotime module provides a time object that keeps time as the number\nof nanoseconds since the UNIX epoch. In other words, it is a 64bit UNIX\ntimestamp with nanosecond precision.",
            "name": "py-nanotime"
        },
        {
            "description": "Minimalistic large language model 3D-parallelism training.",
            "name": "py-nanotron"
        },
        {
            "description": "Background noise and signal reverberation due to reflections in an\nenclosure are the two main impairments in acoustic signal processing and\nfar-field speech recognition. This work addresses signal dereverberation\ntechniques based on WPE for speech recognition and other far-field\napplications. WPE is a compelling algorithm to blindly dereverberate\nacoustic signals based on long-term linear prediction.",
            "name": "py-nara-wpe"
        },
        {
            "description": "Extremely lightweight compatibility layer between dataframe libraries",
            "name": "py-narwhals"
        },
        {
            "description": "Simple yet flexible natural sorting in Python.",
            "name": "py-natsort"
        },
        {
            "description": "Jupyter Notebook as a Jupyter Server Extension.",
            "name": "py-nbclassic"
        },
        {
            "description": "A client library for executing notebooks. Formally nbconvert's\nExecutePreprocessor.",
            "name": "py-nbclient"
        },
        {
            "description": "Jupyter Notebook Conversion",
            "name": "py-nbconvert"
        },
        {
            "description": "Diff and merge of Jupyter Notebooks",
            "name": "py-nbdime"
        },
        {
            "description": "The Jupyter Notebook format",
            "name": "py-nbformat"
        },
        {
            "description": "Pytest plugin for testing notebooks.",
            "name": "py-nbmake"
        },
        {
            "description": "Run any standard Python code quality tool on a Jupyter Notebook.",
            "name": "py-nbqa"
        },
        {
            "description": "nbsphinx is a Sphinx extension that provides a source parser for *.ipynb\nfiles.",
            "name": "py-nbsphinx"
        },
        {
            "description": "Strips outputs from Jupyter and IPython notebooks.",
            "name": "py-nbstripout"
        },
        {
            "description": "Py.test plugin for validating Jupyter notebooks. The plugin adds\nfunctionality to py.test to recognise and collect Jupyter notebooks. The\nintended purpose of the tests is to determine whether execution of the\nstored inputs match the stored outputs of the .ipynb file. Whilst also\nensuring that the notebooks are running without errors.",
            "name": "py-nbval"
        },
        {
            "description": "cftime support for matplotlib axis.",
            "name": "py-nc-time-axis"
        },
        {
            "description": "Scripts to download genomes from the NCBI FTP servers",
            "name": "py-ncbi-genome-download"
        },
        {
            "description": "Provides enhanced HTTPS support for httplib and urllib2 using PyOpenSSL.",
            "name": "py-ndg-httpsclient"
        },
        {
            "description": "A Python library for manipulating indices of ndarrays.",
            "name": "py-ndindex"
        },
        {
            "description": "Neo is a package for representing electrophysiology data in Python,\ntogether with support for reading a wide range of neurophysiology file\nformats",
            "name": "py-neo"
        },
        {
            "description": "This is the neo4j bolt driver for python from the official repository",
            "name": "py-neo4j"
        },
        {
            "description": "Neo4j Bolt connector for Python",
            "name": "py-neobolt"
        },
        {
            "description": "Nanosecond resolution temporal types",
            "name": "py-neotime"
        },
        {
            "description": "Remote opening and control for neovim: nvr",
            "name": "py-neovim-remote"
        },
        {
            "description": "Flexible metadata store for MLOps, built for research and production\nteams that run a lot of experiments.",
            "name": "py-neptune-client"
        },
        {
            "description": "Patch asyncio to allow nested event loops.",
            "name": "py-nest-asyncio"
        },
        {
            "description": "Nested sampling algorithms for evaluating Bayesian evidence.",
            "name": "py-nestle"
        },
        {
            "description": "A system-independent network address manipulation library for Python",
            "name": "py-netaddr"
        },
        {
            "description": "Python interface to the netCDF Library.",
            "name": "py-netcdf4"
        },
        {
            "description": "Portable network interface information",
            "name": "py-netifaces"
        },
        {
            "description": "NetKet is an open-source project, delivering cutting-edge methods for\nthe study of many-body quantum systems with artificial neural networks\nand machine learning techniques.",
            "name": "py-netket"
        },
        {
            "description": "Netpyne: A python package to facilitate the development, parallel\nsimulation, optimization and analysis of multiscale biological neuronal\nnetworks in NEURON.",
            "name": "py-netpyne"
        },
        {
            "description": "NetworKit is a growing open-source toolkit for large-scale network\nanalysis. Its aim is to provide tools for the analysis of large networks\nin the size range from thousands to billions of edges. For this purpose,\nit implements efficient graph algorithms, many of them parallel to\nutilize multicore architectures. These are meant to compute standard\nmeasures of network analysis, such as degree sequences, clustering\ncoefficients, and centrality measures. In this respect, NetworKit is\ncomparable to packages such as NetworkX, albeit with a focus on\nparallelism and scalability.",
            "name": "py-networkit"
        },
        {
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks.",
            "name": "py-networkx"
        },
        {
            "description": "NeuralGCM: Hybrid ML + Physics model of Earth's atmosphere.",
            "name": "py-neuralgcm"
        },
        {
            "description": "The Python Toolbox for Neurophysiological Signal Processing. This\npackage is the continuation of NeuroKit 1. It's a user-friendly package\nproviding easy access to advanced biosignal processing routines.\nResearchers and clinicians without extensive knowledge of programming or\nbiomedical signal processing can analyze physiological data with only\ntwo lines of code.",
            "name": "py-neurokit2"
        },
        {
            "description": "Simple and powerfull neural network library for python",
            "name": "py-neurolab"
        },
        {
            "description": "Python library neuron morphology analysis",
            "name": "py-neurom"
        },
        {
            "description": "A Python Toolbox for Multimodal Neural Data Representation Analysis.",
            "name": "py-neurora"
        },
        {
            "description": "A collection of tools for representing and anlyzing neuroscientific\ndata.",
            "name": "py-neurotools"
        },
        {
            "description": "A Python API to interface with Blue Brain Nexus REST API.",
            "name": "py-nexus-sdk"
        },
        {
            "description": "Blue Brain Nexus Forge is a domain-agnostic, generic and extensible\nPython framework enabling non-expert users to create and manage\nknowledge graphs.",
            "name": "py-nexusforge"
        },
        {
            "description": "Jupyter widget to interactively view molecular structures and\ntrajectories.",
            "name": "py-nglview"
        },
        {
            "description": "Reusable tools for working with next-generation sequencing (NGS) data.",
            "name": "py-ngs-tools"
        },
        {
            "description": "Access a multitude of neuroimaging data formats",
            "name": "py-nibabel"
        },
        {
            "description": "BetaSeries Correlations implemented in Nipype.",
            "name": "py-nibetaseries"
        },
        {
            "description": "Statistical learning for neuroimaging in Python.",
            "name": "py-nilearn"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. Deprecated: use\nninja instead.",
            "name": "py-ninja"
        },
        {
            "description": "Neuroimaging in Python: Pipelines and Interfaces.",
            "name": "py-nipype"
        },
        {
            "description": "Modeling and Statistical analysis of fMRI data in Python.",
            "name": "py-nistats"
        },
        {
            "description": "NiTransforms -- Neuroimaging spatial transforms in Python.",
            "name": "py-nitransforms"
        },
        {
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)",
            "name": "py-niworkflows"
        },
        {
            "description": "The Natural Language Toolkit (NLTK) is a Python package for natural\nlanguage processing.",
            "name": "py-nltk"
        },
        {
            "description": "python version of node-semver (https://github.com/isaacs/node-semver)",
            "name": "py-node-semver"
        },
        {
            "description": "Node.js virtual environment",
            "name": "py-nodeenv"
        },
        {
            "description": "non regression test tools.",
            "name": "py-non-regression-test-tools"
        },
        {
            "description": "nose extends the test loading and running features of unittest, making\nit easier to write, find and run tests.",
            "name": "py-nose"
        },
        {
            "description": "This plugin produces coverage reports.",
            "name": "py-nose-cov"
        },
        {
            "description": "unittest2 with plugins, the succesor to nose",
            "name": "py-nose2"
        },
        {
            "description": "A companion to the built-in nose.plugins.cover, this plugin will write\nout an XML coverage report to a file named coverage.xml.",
            "name": "py-nosexcover"
        },
        {
            "description": "Jupyter Interactive Notebook",
            "name": "py-notebook"
        },
        {
            "description": "A shim layer for notebook traits and config.",
            "name": "py-notebook-shim"
        },
        {
            "description": "Type hints for numpy",
            "name": "py-nptyping"
        },
        {
            "description": "Some useful extensions for NumPy",
            "name": "py-npx"
        },
        {
            "description": "Creates NTLM authentication structures.",
            "name": "py-ntlm-auth"
        },
        {
            "description": "Simple interface to query NTP servers from Python.",
            "name": "py-ntplib"
        },
        {
            "description": "Graph Neural Network for neutrino physics event reconstruction",
            "name": "py-nugraph"
        },
        {
            "description": "Nuitka is the Python compiler. It is written in Python. It is a seamless\nreplacement or extension to the Python interpreter and compiles every\nconstruct that Python has, when itself run with that Python version.",
            "name": "py-nuitka"
        },
        {
            "description": "Modules to convert numbers to words. Easily extensible.",
            "name": "py-num2words"
        },
        {
            "description": "NumPy aware dynamic Python compiler using LLVM",
            "name": "py-numba"
        },
        {
            "description": "Use numba-compiled kernels from within Jax",
            "name": "py-numba4jax"
        },
        {
            "description": "Numcodecs is a Python package providing buffer compression and\ntransformation codecs for use in data storage and communication\napplications.",
            "name": "py-numcodecs"
        },
        {
            "description": "Solves automatic numerical differentiation problems in one or more\nvariables.",
            "name": "py-numdifftools"
        },
        {
            "description": "Fast numerical expression evaluator for NumPy",
            "name": "py-numexpr"
        },
        {
            "description": "Numexpr3 is a fast numerical expression evaluator for NumPy. With it,\nexpressions that operate on arrays (like \"3*a+4*b\") are accelerated and\nuse less memory than doing the same calculation in Python. In addition,\nits multi-threaded capabilities can make use of all your cores, which\nmay accelerate computations, most specially if they are not memory-\nbounded (e.g. those using transcendental functions). Compared to NumExpr\n2.6, functions have been re-written in a fashion such that gcc can auto-\nvectorize them with SIMD instruction sets such as SSE2 or AVX2, if your\nprocessor supports them. Use of a newer version of gcc such as 5.4 is\nstrongly recommended.",
            "name": "py-numexpr3"
        },
        {
            "description": "Standardised ML input processing for particle physics",
            "name": "py-numl"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "This package consists of a couple of optimised tools for doing things\nthat can roughly be considered \"group-indexing operations\". The most\nprominent tool is `aggregate`. `aggregate` takes an array of values, and\nan array giving the group number for each of those values. It then\nreturns the sum (or mean, or std, or any, ...etc.) of the values in each\ngroup. You have probably come across this idea before, using `matlab`\naccumarray, `pandas` groupby, or generally MapReduce algorithms and\nhistograms. There are different implementations of `aggregate` provided,\nbased on plain `numpy`, `numba` and `weave`. Performance is a main\nconcern, and so far we comfortably beat similar implementations in other\npackages (check the benchmarks).",
            "name": "py-numpy-groupies"
        },
        {
            "description": "This package creates a quaternion type in python, and further enables\nnumpy to create and manipulate arrays of quaternions. The usual\nalgebraic operations (addition and multiplication) are available, along\nwith numerous properties like norm and various types of distance\nmeasures between two quaternions. There are also additional functions\nlike \"squad\" and \"slerp\" interpolation, and conversions to and from\naxis-angle, matrix, and Euler-angle representations of rotations. The\ncore of the code is written in C for speed.",
            "name": "py-numpy-quaternion"
        },
        {
            "description": "Library to make reading, writing and modifying both binary and ascii STL\nfiles easy",
            "name": "py-numpy-stl"
        },
        {
            "description": "numpydoc - Numpy's Sphinx extensions",
            "name": "py-numpydoc"
        },
        {
            "description": "A GPU-accelerated library containing highly optimized building blocks\nand an execution engine for data processing to accelerate deep learning\ntraining and inference applications.",
            "name": "py-nvidia-dali"
        },
        {
            "description": "Python Bindings for the NVIDIA Management Library.",
            "name": "py-nvidia-ml-py"
        },
        {
            "description": "Python Bindings for the NVIDIA Management Library.",
            "name": "py-nvidia-ml-py3"
        },
        {
            "description": "A deep learning framework for AI-driven multi-physics systems.",
            "name": "py-nvidia-modulus"
        },
        {
            "description": "An interactive NVIDIA-GPU process viewer and beyond, the one-stop\nsolution for GPU process management.",
            "name": "py-nvitop"
        },
        {
            "description": "PyNVTX - Python code annotation library.",
            "name": "py-nvtx"
        },
        {
            "description": "OAuth 2.0 client library. Note: oauth2client is now deprecated. No more\nfeatures will be added to the libraries and the core team is turning\ndown support. We recommend you use google-auth and oauthlib.",
            "name": "py-oauth2client"
        },
        {
            "description": "A generic, spec-compliant, thorough implementation of the OAuth\nrequest-signing logic",
            "name": "py-oauthlib"
        },
        {
            "description": "ObsPy is an open-source project dedicated to provide a Python framework\nfor processing seismological data",
            "name": "py-obspy"
        },
        {
            "description": "O-CNN is an octree-based sparse convolutional neural network framework\nfor 3D deep learning.",
            "name": "py-ocnn"
        },
        {
            "description": "Reference implementation for the MLPerf HPC OpenCatalyst DimeNet++\nbenchmark",
            "name": "py-ocp-models"
        },
        {
            "description": "Geometry Classes and Operations (opendatacube).",
            "name": "py-odc-geo"
        },
        {
            "description": "Odfpy is a library to read and write OpenDocument v. 1.2 files.",
            "name": "py-odfpy"
        },
        {
            "description": "The Open Graph Benchmark (OGB) is a collection of benchmark datasets,\ndata loaders, and evaluators for graph machine learning. Datasets cover\na variety of graph machine learning tasks and real-world applications.\nThe OGB data loaders are fully compatible with popular graph deep\nlearning frameworks, including PyTorch Geometric and Deep Graph Library\n(DGL). They provide automatic dataset downloading, standardized dataset\nsplits, and unified performance evaluation.",
            "name": "py-ogb"
        },
        {
            "description": "Python and MATLAB wrappers for the Okada Green's function codes",
            "name": "py-okada-wrapper"
        },
        {
            "description": "A tool to help with the maintenance of container build scripts on\nmultiple systems, backends (e.g podman or apptainer) and distros.",
            "name": "py-olcf-velocity"
        },
        {
            "description": "Python package to parse, read and write Microsoft OLE2 files",
            "name": "py-olefile"
        },
        {
            "description": "A hierarchical configuration system, with support for merging\nconfigurations from multiple sources (YAML config files,\ndataclasses/objects and CLI arguments) providing a consistent API\nregardless of how the configuration was created.",
            "name": "py-omegaconf"
        },
        {
            "description": "Open Neural Network Exchange (ONNX) is an open ecosystem that empowers\nAI developers to choose the right tools as their project evolves. ONNX\nprovides an open source format for AI models, both deep learning and\ntraditional ML. It defines an extensible computation graph model, as\nwell as definitions of built-in operators and standard data types.\nCurrently we focus on the capabilities needed for inferencing (scoring).",
            "name": "py-onnx"
        },
        {
            "description": "ONNX flops / params counter.",
            "name": "py-onnx-opcounter"
        },
        {
            "description": "ONNX Converter and Optimization Tools",
            "name": "py-onnxconverter-common"
        },
        {
            "description": "Converts Machine Learning models to ONNX",
            "name": "py-onnxmltools"
        },
        {
            "description": "ONNX Runtime is a performance-focused complete scoring engine for Open\nNeural Network Exchange (ONNX) models, with an open extensible\narchitecture to continually address the latest developments in AI and\nDeep Learning. ONNX Runtime stays up to date with the ONNX standard with\ncomplete implementation of all ONNX operators, and supports all ONNX\nreleases (1.2+) with both future and backwards compatibility.",
            "name": "py-onnxruntime"
        },
        {
            "description": "This project provides classes and utility functions for working with\nread fast5 files. It provides an abstraction layer between the\nunderlying h5py library and the various concepts central to read fast5\nfiles, such as \"reads\", \"analyses\", \"analysis summaries\", and \"analysis\ndatasets\". Ideally all interaction with a read fast5 file should be\npossible via this API, without having to directly invoke the h5py\nlibrary.",
            "name": "py-ont-fast5-api"
        },
        {
            "description": "Database of Processor Instructions/Opcodes.",
            "name": "py-opcodes"
        },
        {
            "description": "Welcome to an open source implementation of OpenAI's CLIP (Contrastive\nLanguage-Image Pre-training).",
            "name": "py-open-clip-torch"
        },
        {
            "description": "The OpenAI Python library provides convenient access to the OpenAI API\nfrom applications written in the Python language. It includes a pre-\ndefined set of classes for API resources that initialize themselves\ndynamically from API responses which makes it compatible with a wide\nrange of versions of the OpenAI API.",
            "name": "py-openai"
        },
        {
            "description": "OpenAPI (v3) specification schema as pydantic class",
            "name": "py-openapi-schema-pydantic"
        },
        {
            "description": "A stats collection and distributed tracing framework.",
            "name": "py-opencensus"
        },
        {
            "description": "OpenCensus Runtime Context.",
            "name": "py-opencensus-context"
        },
        {
            "description": "OpenDataLab Python SDK",
            "name": "py-opendatalab"
        },
        {
            "description": "A python OpenID Connect client with token caching and management",
            "name": "py-openidc-client"
        },
        {
            "description": "OpenMC is a community-developed Monte Carlo neutron and photon transport\nsimulation code. It is capable of performing fixed source, k-eigenvalue,\nand subcritical multiplication calculations on models built using either\na constructive solid geometry or CAD representation. OpenMC supports\nboth continuous-energy and multigroup transport. The continuous-energy\nparticle interaction data is based on a native HDF5 format that can be\ngenerated from ACE files produced by NJOY. Parallelism is enabled via a\nhybrid MPI and OpenMP programming model.",
            "name": "py-openmc"
        },
        {
            "description": "A versatile halfedge-based data structure for representing and\nmanipulating polygon meshes",
            "name": "py-openmesh"
        },
        {
            "description": "MIM Installs OpenMMLab packages",
            "name": "py-openmim"
        },
        {
            "description": "Validator and Example Scripts for the openPMD markup. openPMD is an open\nstandard for particle-mesh data files.",
            "name": "py-openpmd-validator"
        },
        {
            "description": "Python visualization tools for openPMD files",
            "name": "py-openpmd-viewer"
        },
        {
            "description": "A Python library to read/write Excel 2010 xlsx/xlsm files",
            "name": "py-openpyxl"
        },
        {
            "description": "OpenSlide Python is a Python interface to the OpenSlide library.",
            "name": "py-openslide-python"
        },
        {
            "description": "Library for interacting with Open Tree of Life resources.",
            "name": "py-opentree"
        },
        {
            "description": "An extensible framework for program autotuning.",
            "name": "py-opentuner"
        },
        {
            "description": "The Output Parse-Plot Python (OPPPY) library is a python based data\nanalysis library designed to extract, store, and plot information from\noutput and dump files generated by scientific software packages.",
            "name": "py-opppy"
        },
        {
            "description": "The Python library behind great charms",
            "name": "py-ops"
        },
        {
            "description": "Optimized Einsum: A tensor contraction order optimizer.",
            "name": "py-opt-einsum"
        },
        {
            "description": "A gradient processing and optimisation library in JAX.",
            "name": "py-optax"
        },
        {
            "description": "Optimized PyTree Utilities.",
            "name": "py-optree"
        },
        {
            "description": "Optuna is an automatic hyperparameter optimization software framework,\nparticularly designed for machine learning. It features an imperative,\ndefine-by-run style user API. Thanks to our define-by-run API, the code\nwritten with Optuna enjoys high modularity, and the user of Optuna can\ndynamically construct the search spaces for the hyperparameters.",
            "name": "py-optuna"
        },
        {
            "description": "This project hosts operations research tools developed at Google and\nmade available as open source under the Apache 2.0 License.",
            "name": "py-or-tools"
        },
        {
            "description": "Python-oracledb is the new name for the Python cx_Oracle driver. The\npython-oracledb driver is an open source module that enables Python\nprograms to access Oracle Database.",
            "name": "py-oracledb"
        },
        {
            "description": "Orbax includes a checkpointing library oriented towards JAX users,\nsupporting a variety of different features required by different\nframeworks, including asynchronous checkpointing various types, and\nvarious storage formats. We aim to provide a highly customizable and\ncomposable API which maximizes flexibility for diverse use cases.",
            "name": "py-orbax-checkpoint"
        },
        {
            "description": "An OrderedSet is a mutable data structure that is a hybrid of a list and\na set. It remembers the order of its entries, and every entry has an\nindex number that can be looked up.",
            "name": "py-ordered-set"
        },
        {
            "description": "Orderly Set is a package containing multiple implementations of Ordered\nSet.",
            "name": "py-orderly-set"
        },
        {
            "description": "Fast, correct Python JSON library supporting dataclasses, datetimes, and\nnumpy.",
            "name": "py-orjson"
        },
        {
            "description": "Python library for consuming OpenStack sevice-types-authority data",
            "name": "py-os-service-types"
        },
        {
            "description": "Set that remembers original insertion order.",
            "name": "py-oset"
        },
        {
            "description": "The Oslo configuration API supports parsing command line arguments and\n.ini style configuration files.",
            "name": "py-oslo-config"
        },
        {
            "description": "The oslo.i18n library contain utilities for working with\ninternationalization (i18n) features, especially translation for text\nstrings in an application or library.",
            "name": "py-oslo-i18n"
        },
        {
            "description": "The oslo.serialization library provides support for representing\nobjects in transmittable and storable formats, such as Base64, JSON and\nMessagePack.",
            "name": "py-oslo-serialization"
        },
        {
            "description": "The oslo.utils library provides support for common utility type\nfunctions, such as encoding, exception handling, string manipulation,\nand time handling.",
            "name": "py-oslo-utils"
        },
        {
            "description": "OSQP: The Operator Splitting QP Solver",
            "name": "py-osqp"
        },
        {
            "description": "This is a mini-library which, given a package name and a version, checks\nif it's the latest version available on PyPI.",
            "name": "py-outdated"
        },
        {
            "description": "A Python Wrapper to access the Overpass API.",
            "name": "py-overpy"
        },
        {
            "description": "A decorator to automatically detect mismatch when overriding a method.",
            "name": "py-overrides"
        },
        {
            "description": "A simple implementation of the OWL2 RL Profile, as well as a basic RDFS\ninference, on top of RDFLib. Based mechanical forward chaining.",
            "name": "py-owlrl"
        },
        {
            "description": "OWSLib is a Python package for client programming with Open Geospatial\nConsortium (OGC) web service (hence OWS) interface standards, and their\nrelated content models.",
            "name": "py-owslib"
        },
        {
            "description": "Ordered YAML: a drop-in replacement for PyYAML which preserves dict\nordering.",
            "name": "py-oyaml"
        },
        {
            "description": "Python Pacifica Download Library",
            "name": "py-pacifica-downloader"
        },
        {
            "description": "Python Pacifica Namespace Library",
            "name": "py-pacifica-namespace"
        },
        {
            "description": "Python Pacifica Uploader Library",
            "name": "py-pacifica-uploader"
        },
        {
            "description": "Core utilities for Python packages.",
            "name": "py-packaging"
        },
        {
            "description": "Python module that pages output to the screen, reads keys and console\ndimensions without executing external utils.",
            "name": "py-pager"
        },
        {
            "description": "Color palettes for Python.",
            "name": "py-palettable"
        },
        {
            "description": "Python wrapper for PAM",
            "name": "py-pamela"
        },
        {
            "description": "A Bacterial Pangenome Analysis Pipeline",
            "name": "py-panaroo"
        },
        {
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage.",
            "name": "py-pandas"
        },
        {
            "description": "Up-to-date remote data access for pandas. Works for multiple versions of\npandas",
            "name": "py-pandas-datareader"
        },
        {
            "description": "These are public type stubs for pandas, following the convention of\nproviding stubs in a separate package, as specified in PEP 561. The\nstubs cover the most typical use cases of pandas. In general, these\nstubs are narrower than what is possibly allowed by pandas, but follow a\nconvention of suggesting best recommended practices for using pandas.",
            "name": "py-pandas-stubs"
        },
        {
            "description": "A python module for writing pandoc filters",
            "name": "py-pandocfilters"
        },
        {
            "description": "Panedr uses the Pyedr library to read a Gromacs EDR binary energy XDR\nfile and returns its contents as a pandas dataframe",
            "name": "py-panedr"
        },
        {
            "description": "A high level app and dashboarding solution for Python.",
            "name": "py-panel"
        },
        {
            "description": "Parametrize and run Jupyter and nteract Notebooks.",
            "name": "py-papermill"
        },
        {
            "description": "Paralleltask is a simple and lightweight parallel task engine. It can\nlaunch a given number of tasks from a batch of independent tasks, and\nkeep this number of running tasks until all tasks are completed.",
            "name": "py-paralleltask"
        },
        {
            "description": "Param is a library providing Parameters: Python attributes extended to\nhave features such as type and range checking, dynamically generated\nvalues, documentation strings, default values, etc., each of which is\ninherited from parent classes if not specified in a subclass.",
            "name": "py-param"
        },
        {
            "description": "Parameterized testing with any Python test framework.",
            "name": "py-parameterized"
        },
        {
            "description": "SSH2 protocol library",
            "name": "py-paramiko"
        },
        {
            "description": "The Parameterization Framework.",
            "name": "py-paramz"
        },
        {
            "description": "Python Bindings for the Parasail C Library. Parasail is a SIMD C (C99)\nlibrary containing implementations of the Smith-Waterman (local),\nNeedleman-Wunsch (global), and semi-global pairwise sequence alignment\nalgorithms.",
            "name": "py-parasail"
        },
        {
            "description": "ParmEd is a general tool for aiding in investigations of biomolecular\nsystems using popular molecular simulation packages, like Amber, CHARMM,\nand OpenMM written in Python.",
            "name": "py-parmed"
        },
        {
            "description": "parse() is the opposite of format()",
            "name": "py-parse"
        },
        {
            "description": "parse_type extends the parse module (opposite of string.format()).",
            "name": "py-parse-type"
        },
        {
            "description": "Parse human-readable date/time strings.",
            "name": "py-parsedatetime"
        },
        {
            "description": "(Soon to be) the fastest pure-Python PEG parser",
            "name": "py-parsimonious"
        },
        {
            "description": "Simple data dependent workflows in Python",
            "name": "py-parsl"
        },
        {
            "description": "Parsing and pattern matching made easy.",
            "name": "py-parsley"
        },
        {
            "description": "Parso is a Python parser that supports error recovery and round-trip\nparsing for different Python versions (in multiple Python versions).\nParso is also able to list multiple syntax errors in your python file.",
            "name": "py-parso"
        },
        {
            "description": "Key-value byte store with appendable values.",
            "name": "py-partd"
        },
        {
            "description": "Particle provides a pythonic interface to the Particle Data Group (PDG)\nparticle data tables and particle identification codes, with extended\nparticle information and extra goodies.",
            "name": "py-particle"
        },
        {
            "description": "Tools for using a Web Server Gateway Interface stack",
            "name": "py-paste"
        },
        {
            "description": "Load, configure, and compose WSGI applications and servers",
            "name": "py-pastedeploy"
        },
        {
            "description": "Bring colors to your terminal.",
            "name": "py-pastel"
        },
        {
            "description": "Ancestral character reconstruction and visualisation for rooted\nphylogenetic trees.",
            "name": "py-pastml"
        },
        {
            "description": "Library to parse and apply unified diffs.",
            "name": "py-patch"
        },
        {
            "description": "Library to parse and apply unified diffs.",
            "name": "py-patch-ng"
        },
        {
            "description": "A module wrapper for os.path",
            "name": "py-path-py"
        },
        {
            "description": "Backport of pathlib from python 3.4",
            "name": "py-pathlib2"
        },
        {
            "description": "An open-source toolkit for computational pathology and machine learning.",
            "name": "py-pathml"
        },
        {
            "description": "Parallel graph management and execution in heterogeneous computing",
            "name": "py-pathos"
        },
        {
            "description": "pathspec extends the test loading and running features of unittest,\nmaking it easier to write, find and run tests.",
            "name": "py-pathspec"
        },
        {
            "description": "Path utilities for Python",
            "name": "py-pathtools"
        },
        {
            "description": "pathlib.Path subclasses for local and cloud bucket storage",
            "name": "py-pathy"
        },
        {
            "description": "portable archive file manager",
            "name": "py-patool"
        },
        {
            "description": "A Python package for describing statistical models and for building\ndesign matrices.",
            "name": "py-patsy"
        },
        {
            "description": "pauvre: plotting package designed for nanopore and PacBio long reads",
            "name": "py-pauvre"
        },
        {
            "description": "PBR is a library that injects some useful and sensible default behaviors\ninto your setuptools run.",
            "name": "py-pbr"
        },
        {
            "description": "A swiss army knife for manipulating and editing PDB files.",
            "name": "py-pdb-tools"
        },
        {
            "description": "PDBFixer is an easy to use application for fixing problems in Protein\nData Bank files in preparation for simulating them.",
            "name": "py-pdbfixer"
        },
        {
            "description": "A python module that wraps the pdftoppm utility to convert PDF to PIL\nImage object",
            "name": "py-pdf2image"
        },
        {
            "description": "The build backend used by PDM that supports latest packaging standards",
            "name": "py-pdm-backend"
        },
        {
            "description": "A PEP 517 backend for PDM that supports PEP 621 metadata.",
            "name": "py-pdm-pep517"
        },
        {
            "description": "Auto-generate API documentation for Python projects.",
            "name": "py-pdoc3"
        },
        {
            "description": "Portable Efficient Assembly Codegen in Higher-level Python.",
            "name": "py-peachpy"
        },
        {
            "description": "Threading and multiprocessing eye-candy.",
            "name": "py-pebble"
        },
        {
            "description": "pem is an MIT-licensed Python module for parsing and splitting of PEM\nfiles, i.e. Base64 encoded DER keys and certificates.",
            "name": "py-pem"
        },
        {
            "description": "PennyLane is a Python quantum machine learning library by Xanadu Inc.",
            "name": "py-pennylane"
        },
        {
            "description": "The PennyLane-Lightning plugin provides a fast state-vector simulator\nwritten in C++.",
            "name": "py-pennylane-lightning"
        },
        {
            "description": "The PennyLane-Lightning-Kokkos plugin provides a fast state-vector\nsimulator with Kokkos kernels.",
            "name": "py-pennylane-lightning-kokkos"
        },
        {
            "description": "Wrappers to build Python packages using PEP 517 hooks.",
            "name": "py-pep517"
        },
        {
            "description": "Python style guide checker (deprecated, use py-pycodestyle instead).",
            "name": "py-pep8"
        },
        {
            "description": "Check PEP-8 naming conventions, plugin for flake8.",
            "name": "py-pep8-naming"
        },
        {
            "description": "The performance project is intended to be an authoritative source of\nbenchmarks for all Python implementations. The focus is on real-world\nbenchmarks, rather than synthetic benchmarks, using whole applications\nwhen possible.",
            "name": "py-performance"
        },
        {
            "description": "nose extends the test loading and running features of unittest, making\nit easier to write, find and run tests.",
            "name": "py-periodictable"
        },
        {
            "description": "Petastorm is a library enabling the use of Parquet storage from\nTensorflow, Pytorch, and other Python-based ML training frameworks.",
            "name": "py-petastorm"
        },
        {
            "description": "Generate human-readable, random object names.",
            "name": "py-petname"
        },
        {
            "description": "This package provides Python bindings for the PETSc package.",
            "name": "py-petsc4py"
        },
        {
            "description": "Pexpect allows easy control of interactive console applications.",
            "name": "py-pexpect"
        },
        {
            "description": "Python port of the fzy fuzzy string matching algorithm.",
            "name": "py-pfzy"
        },
        {
            "description": "A multi-threading implementation of Python gzip module",
            "name": "py-pgzip"
        },
        {
            "description": "PHANOTATE is a tool to annotate phage genomes. It uses the assumption\nthat non-coding bases in a phage genome is disadvantageous, and then\npopulates a weighted graph to find the optimal path through the six\nframes of the DNA where open reading frames are beneficial paths, while\ngaps and overlaps are penalized paths.",
            "name": "py-phanotate"
        },
        {
            "description": "Python version of Google's common library for parsing, formatting and\nvalidating international phone numbers.",
            "name": "py-phonenumbers"
        },
        {
            "description": "Phonopy is an open source package for phonon calculations at harmonic\nand quasi-harmonic levels.",
            "name": "py-phonopy"
        },
        {
            "description": "Photutils is an Astropy package for detection and photometry of\nastronomical sources.",
            "name": "py-photutils"
        },
        {
            "description": "phydms enables phylogenetic analyses using deep mutational scanning data\nto inform the substitution models. It implements Experimentally informed\ncodon models (ExpCM) for phylogenetic inference and the detection of\nbiologically interesting selection.",
            "name": "py-phydms"
        },
        {
            "description": "PhyloPhlAn 3.0 is an integrated pipeline for large-scale phylogenetic\nprofiling of genomes and metagenomes.",
            "name": "py-phylophlan"
        },
        {
            "description": "This package backports all features and APIs added in the pickle module\nin Python 3.8.3, including the PEP 574 additions. It should work with\nPython 3.5, 3.6 and 3.7.",
            "name": "py-pickle5"
        },
        {
            "description": "Tiny 'shelve'-like database with concurrency support",
            "name": "py-pickleshare"
        },
        {
            "description": "Standard input format for Particle-In-Cell codes",
            "name": "py-picmistandard"
        },
        {
            "description": "PICRUSt2 is a software for predicting functional abundances based only\non marker gene sequences.",
            "name": "py-picrust2"
        },
        {
            "description": "Pidfile featuring stale detection and file-locking, can also be used as\ncontext-manager or decorator.",
            "name": "py-pid"
        },
        {
            "description": "Pika is a RabbitMQ (AMQP 0-9-1) client library for Python.",
            "name": "py-pika"
        },
        {
            "description": "Pillow is a fork of the Python Imaging Library (PIL). It adds image\nprocessing capabilities to your Python interpreter. This library\nsupports many file formats, and provides powerful image processing and\ngraphics capabilities.",
            "name": "py-pillow"
        },
        {
            "description": "Pillow-SIMD is a SIMD-enabled fork of Pillow. It is usually 4-6x faster\nthan the original Pillow in image processing benchmarks.",
            "name": "py-pillow-simd"
        },
        {
            "description": "Pint is a Python package to define, operate and manipulate physical\nquantities: the product of a numerical value and a unit of measurement.\nIt allows arithmetic operations between them and conversions from and to\ndifferent units.",
            "name": "py-pint"
        },
        {
            "description": "A convenience wrapper for using pint with xarray",
            "name": "py-pint-xarray"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Command line utility to show dependency tree of packages.",
            "name": "py-pipdeptree"
        },
        {
            "description": "A lightweight python toolkit for gluing together restartable, robust\nshell pipelines.",
            "name": "py-piper"
        },
        {
            "description": "Automated pipeline for analyses of fungal ITS from the Illumina",
            "name": "py-pipits"
        },
        {
            "description": "PISPINO (PIpits SPIN-Off tools).",
            "name": "py-pispino"
        },
        {
            "description": "Python bindings to coin3d",
            "name": "py-pivy"
        },
        {
            "description": "Interface Python with pkg-config.",
            "name": "py-pkgconfig"
        },
        {
            "description": "Query metadatdata from sdists / bdists / installed packages.",
            "name": "py-pkginfo"
        },
        {
            "description": "Resolve a name to an object. A backport of Python 3.9\n`pkgutil.resolve_name`",
            "name": "py-pkgutil-resolve-name"
        },
        {
            "description": "The smartest command line arguments parser in the world.",
            "name": "py-plac"
        },
        {
            "description": "2D planar geometry library for Python.",
            "name": "py-planar"
        },
        {
            "description": "Python client library and CLI for Planet's public API",
            "name": "py-planet"
        },
        {
            "description": "Python library for interacting with the Microsoft Planetary Computer.",
            "name": "py-planetary-computer"
        },
        {
            "description": "A small Python module for determining appropriate platform-specific\ndirs, e.g. a \"user data dir\"",
            "name": "py-platformdirs"
        },
        {
            "description": "Plotext plots directly on terminal.",
            "name": "py-plotext"
        },
        {
            "description": "Plot in the terminal using braille dots.",
            "name": "py-plotille"
        },
        {
            "description": "An interactive, browser-based graphing library for Python",
            "name": "py-plotly"
        },
        {
            "description": "plotnine is an implementation of a grammar of graphics in Python, it is\nbased on ggplot2. The grammar allows users to compose plots by\nexplicitly mapping data to the visual objects that make up the plot.",
            "name": "py-plotnine"
        },
        {
            "description": "Plugin and hook calling mechanisms for python.",
            "name": "py-pluggy"
        },
        {
            "description": "Multiple dispatch in Python.",
            "name": "py-plum-dispatch"
        },
        {
            "description": "Python Lex & Yacc.",
            "name": "py-ply"
        },
        {
            "description": "Pmw is a toolkit for building high-level compound widgets, or\nmegawidgets, constructed using other widgets as component parts.",
            "name": "py-pmw"
        },
        {
            "description": "Schrodinger's Fork of Python megawidgets with essential patches applied.\nPmw is a toolkit for building high-level compound widgets, or\nmegawidgets, constructed using other widgets as component parts.",
            "name": "py-pmw-patched"
        },
        {
            "description": "A collection of helpful Python tools.",
            "name": "py-pockets"
        },
        {
            "description": "Python dependency management and packaging made easy.",
            "name": "py-poetry"
        },
        {
            "description": "Poetry PEP 517 Build Backend.",
            "name": "py-poetry-core"
        },
        {
            "description": "Plugin for Poetry to enable dynamic versioning based on VCS tags.",
            "name": "py-poetry-dynamic-versioning"
        },
        {
            "description": "Poetry plugin to export the dependencies to various formats",
            "name": "py-poetry-plugin-export"
        },
        {
            "description": "Poetry plugin used to tweak dependency versions.",
            "name": "py-poetry-plugin-tweak-dependencies-version"
        },
        {
            "description": "Blazingly fast DataFrame library.",
            "name": "py-polars"
        },
        {
            "description": "Fast, flexible and easy to use probabilistic modelling in Python.",
            "name": "py-pomegranate"
        },
        {
            "description": "Pooch manages your Python library's sample data files: it automatically\ndownloads and stores them in a local directory, with support for\nversioning and corruption checks.",
            "name": "py-pooch"
        },
        {
            "description": "Portalocker is a library to provide an easy API to file locking.",
            "name": "py-portalocker"
        },
        {
            "description": "TCP port monitoring and discovery",
            "name": "py-portend"
        },
        {
            "description": "A library to choose unique available network ports.",
            "name": "py-portpicker"
        },
        {
            "description": "This repository contains a Python package named PostCactus for\npostprocessing data from numerical simulations performed with the\nEinstein Toolkit.",
            "name": "py-postcactus"
        },
        {
            "description": "Streaming HTTP uploads and multipart/form-data encoding.",
            "name": "py-poster"
        },
        {
            "description": "This open source Python library provide several solvers for\noptimization problems related to Optimal Transport for signal, image\nprocessing and machine learning.",
            "name": "py-pot"
        },
        {
            "description": "Utilities for filesystem exploration and automated builds.",
            "name": "py-pox"
        },
        {
            "description": "Documentation generator for C++",
            "name": "py-poxy"
        },
        {
            "description": "A lightweight YAML Parser for Python",
            "name": "py-poyo"
        },
        {
            "description": "Distributed and parallel python",
            "name": "py-ppft"
        },
        {
            "description": "A drop-in replacement for pprint that's actually pretty",
            "name": "py-pprintpp"
        },
        {
            "description": "A framework for managing and maintaining multi-language pre-commit\nhooks.",
            "name": "py-pre-commit"
        },
        {
            "description": "preshed: Cython Hash Table for Pre-Hashed Keys.",
            "name": "py-preshed"
        },
        {
            "description": "Pretrained models for Pytorch.",
            "name": "py-pretrainedmodels"
        },
        {
            "description": "Prettifies Python exception output to make it legible.",
            "name": "py-pretty-errors"
        },
        {
            "description": "PrettyTable is a simple Python library designed to make it quick and\neasy to represent tabular data in visually appealing ASCII tables.",
            "name": "py-prettytable"
        },
        {
            "description": "Priority is a pure-Python implementation of the priority logic for\nHTTP/2, set out in RFC 7540 Section 5.3 (Stream Priority). This logic\nallows for clients to express a preference for how the server allocates\nits (limited) resources to the many outstanding HTTP requests that may\nbe running over a single HTTP/2 connection.",
            "name": "py-priority"
        },
        {
            "description": "Python decorators for profiling/tracing/timing a single function",
            "name": "py-profilehooks"
        },
        {
            "description": "Proglog is a progress logging system for Python. It allows to build\ncomplex libraries while giving the user control on the management of\nlogs, callbacks and progress bars.",
            "name": "py-proglog"
        },
        {
            "description": "Easy progress reporting for Python",
            "name": "py-progress"
        },
        {
            "description": "A progress bar for Python 2 and Python 3",
            "name": "py-progressbar2"
        },
        {
            "description": "Text progress bar library for Python",
            "name": "py-progressbar33"
        },
        {
            "description": "ProjectQ is an open-source software framework for quantum computing\nstarted at ETH Zurich. It allows users to implement their quantum\nprograms in Python using a powerful and intuitive syntax. ProjectQ can\nthen translate these programs to any type of back-end, be it a simulator\nrun on a classical computer of an actual quantum chip.",
            "name": "py-projectq"
        },
        {
            "description": "CellProfiler's Java dependencies.",
            "name": "py-prokaryote"
        },
        {
            "description": "Prometheus instrumentation library for Python applications.",
            "name": "py-prometheus-client"
        },
        {
            "description": "Prometheus metrics exporter for Flask.",
            "name": "py-prometheus-flask-exporter"
        },
        {
            "description": "This is a implementation of Promises in Python. It is a super set of\nPromises/A+ designed to have readable, performant code and to provide\njust the extensions that are absolutely necessary for using promises in\nPython.",
            "name": "py-promise"
        },
        {
            "description": "Library for building powerful interactive command lines in Python",
            "name": "py-prompt-toolkit"
        },
        {
            "description": "Fast property caching",
            "name": "py-propcache"
        },
        {
            "description": "Proper scoring rules in Python.",
            "name": "py-properscoring"
        },
        {
            "description": "Beautiful, Pythonic protocol buffers.",
            "name": "py-proto-plus"
        },
        {
            "description": "Protocol buffers are Google's language-neutral, platform-neutral,\nextensible mechanism for serializing structured data - think XML, but\nsmaller, faster, and simpler. You define how you want your data to be\nstructured once, then you can use special generated source code to\neasily write and read your structured data to and from a variety of data\nstreams and using a variety of languages.",
            "name": "py-protobuf"
        },
        {
            "description": "A python package for swagger annotation proto files.",
            "name": "py-protoc-gen-swagger"
        },
        {
            "description": "A Python library for W3C Provenance Data Model (PROV). A library for W3C\nProvenance Data Model supporting PROV-JSON, PROV-XML and PROV-O (RDF)",
            "name": "py-prov"
        },
        {
            "description": "Native process-shared rwlock support for Python",
            "name": "py-prwlock"
        },
        {
            "description": "LCLS II Developement: PSAlg Python.",
            "name": "py-psalg"
        },
        {
            "description": "LCLS II Developement: PSAna Python.",
            "name": "py-psana"
        },
        {
            "description": "PSI/J is an abstraction layer over cluster schedulers to write scheduler\nagnostic HPC applications.",
            "name": "py-psij-python"
        },
        {
            "description": "Monitors and limits process resource.",
            "name": "py-psmon"
        },
        {
            "description": "Code Generator for Small Sparse Matrix Multiplication",
            "name": "py-pspamm"
        },
        {
            "description": "psutil is a cross-platform library for retrieving information on running\nprocesses and system utilization (CPU, memory, disks, network) in\nPython.",
            "name": "py-psutil"
        },
        {
            "description": "A source-to-source Fortran compiler designed to programmatically\noptimise, parallelise and instrument HPC applications (written in\nFortran) via user- provided transformation scripts. Additionally,\nPSyclone supports the development of kernel-based, Fortran-embedded DSLs\nand is used in the UK Met Office's next-generation modelling system,\nLFRic.",
            "name": "py-psyclone"
        },
        {
            "description": "Python interface to PostgreSQL databases",
            "name": "py-psycopg2"
        },
        {
            "description": "Run a subprocess in a pseudo terminal",
            "name": "py-ptyprocess"
        },
        {
            "description": "PubChemPy provides a way to interact with PubChem in Python. It allows\nchemical searches by name, substructure and similarity, chemical\nstandardization, conversion between chemical file formats, depiction and\nretrieval of chemical properties.",
            "name": "py-pubchempy"
        },
        {
            "description": "Full-screen console debugger for Python",
            "name": "py-pudb"
        },
        {
            "description": "PuLP is an LP modeler written in Python. PuLP can generate MPS or LP\nfiles and call GLPK, COIN-OR CLP/CBC, CPLEX, GUROBI, MOSEK, XPRESS,\nCHOCO, MIPCL, SCIP to solve linear problems.",
            "name": "py-pulp"
        },
        {
            "description": "Distributed job execution application built for Galaxy\n(http://galaxyproject.org/).",
            "name": "py-pulsar-galaxy-lib"
        },
        {
            "description": "Safely evaluate AST nodes without side effects.",
            "name": "py-pure-eval"
        },
        {
            "description": "This package provides a reasonably high-level SASL client written in\npure Python. New mechanisms may be integrated easily, but by default,\nsupport for PLAIN, ANONYMOUS, EXTERNAL, CRAM-MD5, DIGEST-MD5, and GSSAPI\nare provided.",
            "name": "py-pure-sasl"
        },
        {
            "description": "puremagic is a pure python module that will identify a file based off\nits magic numbers.",
            "name": "py-puremagic"
        },
        {
            "description": "Library with cross-python path, ini-parsing, io, code, log facilities",
            "name": "py-py"
        },
        {
            "description": "Get CPU info with pure Python 2 & 3",
            "name": "py-py-cpuinfo"
        },
        {
            "description": "Library for communicating with the GA4GH Task Execution API.",
            "name": "py-py-tes"
        },
        {
            "description": "A package for accessing 2bit files using lib2bit.",
            "name": "py-py2bit"
        },
        {
            "description": "Py2neo is a client library and toolkit for working with Neo4j from\nwithin Python applications and from the command line.",
            "name": "py-py2neo"
        },
        {
            "description": "Enables Python programs to dynamically access arbitrary Java objects.",
            "name": "py-py4j"
        },
        {
            "description": "A wrapper for the 6S Radiative Transfer Model to make it easy to run\nsimulations with a variety of input parameters, and to produce outputs\nin an easily processable form.",
            "name": "py-py6s"
        },
        {
            "description": "A Python package for forward and inverse Abel transforms.",
            "name": "py-pyabel"
        },
        {
            "description": "A collection of data classes, data structures, and other utility classes\nthat are aimed for use in workflow",
            "name": "py-pyaestro"
        },
        {
            "description": "PyAMG is a library of Algebraic Multigrid (AMG) solvers with a\nconvenient Python interface.",
            "name": "py-pyamg"
        },
        {
            "description": "PyYAML-based python module to produce pretty and readable YAML-\nserialized data.",
            "name": "py-pyaml"
        },
        {
            "description": "Provides yaml file parsing with environment variable resolution",
            "name": "py-pyaml-env"
        },
        {
            "description": "pyani is a Python3 module that provides support for calculating average\nnucleotide identity (ANI) and related measures for whole genome\ncomparisons, and rendering relevant graphical summary output. Where\navailable, it takes advantage of multicore systems, and can integrate\nwith SGE/OGE-type job schedulers for the sequence comparisons.",
            "name": "py-pyani"
        },
        {
            "description": "A cross-language development platform for in-memory data. This package\ncontains the Python bindings.",
            "name": "py-pyarrow"
        },
        {
            "description": "Pure-Python implementation of ASN.1 types and DER/BER/CER codecs\n(X.208).",
            "name": "py-pyasn1"
        },
        {
            "description": "A collection of ASN.1 modules expressed in form of pyasn1 classes.\nIncludes protocols PDUs definition (SNMP, LDAP etc.) and various data\nstructures (X.509, PKCS etc.).",
            "name": "py-pyasn1-modules"
        },
        {
            "description": "Python bindings for the Open Asset Import Library (ASSIMP)",
            "name": "py-pyassimp"
        },
        {
            "description": "PyAutoGUI lets your Python scripts control the mouse and keyboard to\nautomate interactions with other applications.",
            "name": "py-pyautogui"
        },
        {
            "description": "Python wrapper -- and more -- for Aaron Quinlan's BEDTools",
            "name": "py-pybedtools"
        },
        {
            "description": "bids: interface with datasets conforming to BIDS",
            "name": "py-pybids"
        },
        {
            "description": "A package for accessing bigWig files using libBigWig.",
            "name": "py-pybigwig"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "Generates stubs for pybind11-wrapped python modules",
            "name": "py-pybind11-stubgen"
        },
        {
            "description": "pybktree: pure-Python BK-tree data structure to allow fast querying of\nclose matches",
            "name": "py-pybktree"
        },
        {
            "description": "Py-BOBYQA is a flexible package for solving bound-constrained general\nobjective minimization, without requiring derivatives of the objective.",
            "name": "py-pybobyqa"
        },
        {
            "description": "PyBrain is the Swiss army knife for neural networking.",
            "name": "py-pybrain"
        },
        {
            "description": "Pybtex is a BibTeX-compatible bibliography processor written in Python.",
            "name": "py-pybtex"
        },
        {
            "description": "A docutils backend for pybtex.",
            "name": "py-pybtex-docutils"
        },
        {
            "description": "A lightweight I/O utility for the BrainVision data format.",
            "name": "py-pybv"
        },
        {
            "description": "Pycairo is a set of Python bindings for the cairo graphics library.",
            "name": "py-pycairo"
        },
        {
            "description": "pycares is a Python module which provides an interface to c-ares. c-ares\nis a C library that performs DNS requests and name resolutions\nasynchronously.",
            "name": "py-pycares"
        },
        {
            "description": "PyCBC is a software package used to explore astrophysical sources of\ngravitational waves. It contains algorithms to analyze gravitational-\nwave data from the LIGO and Virgo detectors, detect coalescing compact\nbinaries, and measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational waves and\nis used in the flagship analysis of LIGO and Virgo data.",
            "name": "py-pycbc"
        },
        {
            "description": "Python source code checking tool.",
            "name": "py-pychecker"
        },
        {
            "description": "Python library for interacting with Crystallographic Information\nFramework (CIF) files.",
            "name": "py-pycifrw"
        },
        {
            "description": "Multi-class confusion matrix library in Python.",
            "name": "py-pycm"
        },
        {
            "description": "pycmd is a collection of command line tools for helping with Python\ndevelopment.",
            "name": "py-pycmd"
        },
        {
            "description": "Official APIs for the MS-COCO dataset.",
            "name": "py-pycocotools"
        },
        {
            "description": "pycodestyle is a tool to check your Python code against some of the\nstyle conventions in PEP 8. Note: formerly called pep8.",
            "name": "py-pycodestyle"
        },
        {
            "description": "Python library for reading and writing collada documents",
            "name": "py-pycollada"
        },
        {
            "description": "The Compadre Toolkit provides a performance portable solution for the\nparallel evaluation of computationally dense kernels. The toolkit\nspecifically targets the Generalized Moving Least Squares (GMLS)\napproach, which requires the inversion of small dense matrices. The\nresult is a set of weights that provide the information needed for remap\nor entries that constitute the rows of some globally sparse matrix.",
            "name": "py-pycompadre"
        },
        {
            "description": "Python wrapper for Stanford CoreNLP. This simply wraps the API from the\nserver included with CoreNLP.",
            "name": "py-pycorenlp"
        },
        {
            "description": "Python Cortical mapping software for fMRI data.",
            "name": "py-pycortex"
        },
        {
            "description": "PicoSAT is a popular SAT solver written by Armin Biere in pure C. This\npackage provides efficient Python bindings to picosat on the C level,\ni.e. when importing pycosat, the picosat solver becomes part of the\nPython process itself. For ease of deployment, the picosat source\n(namely picosat.c and picosat.h) is included in this project. These\nfiles have been extracted from the picosat source (picosat-965.tar.gz).",
            "name": "py-pycosat"
        },
        {
            "description": "A complete parser of the C language, written in pure python.",
            "name": "py-pycparser"
        },
        {
            "description": "The Python Cryptography Toolkit",
            "name": "py-pycrypto"
        },
        {
            "description": "Cryptographic library for Python",
            "name": "py-pycryptodome"
        },
        {
            "description": "Python package common tasks for users (e.g. copy examples, fetch data,\n...)",
            "name": "py-pyct"
        },
        {
            "description": "pyCubexR is a Python package for reading the Cube4 file format.",
            "name": "py-pycubexr"
        },
        {
            "description": "PyCUDA gives you easy, Pythonic access to Nvidia's CUDA parallel\ncomputation API",
            "name": "py-pycuda"
        },
        {
            "description": "PycURL is a Python interface to libcurl. PycURL can be used to fetch\nobjects identified by a URL from a Python program.",
            "name": "py-pycurl"
        },
        {
            "description": "Data validation and settings management using Python type hinting.",
            "name": "py-pydantic"
        },
        {
            "description": "Core functionality for Pydantic validation and serialization",
            "name": "py-pydantic-core"
        },
        {
            "description": "A place for pydantic types that probably shouldn't exist in the main\npydantic lib.",
            "name": "py-pydantic-extra-types"
        },
        {
            "description": "Settings management using Pydantic.",
            "name": "py-pydantic-settings"
        },
        {
            "description": "Pydantic Models for the GA4GH Task Execution Service",
            "name": "py-pydantic-tes"
        },
        {
            "description": "An implementation of the Data Access Protocol.",
            "name": "py-pydap"
        },
        {
            "description": "A clean, three-column, Bootstrap-based Sphinx theme by and for the\nPyData community.",
            "name": "py-pydata-sphinx-theme"
        },
        {
            "description": "pyDatalog adds logic programming to Python.",
            "name": "py-pydatalog"
        },
        {
            "description": "A script to remove facial structure from MRI images.",
            "name": "py-pydeface"
        },
        {
            "description": "Simple tooling for marking deprecated functions or classes and re-\nrouting to the new successors' instance.",
            "name": "py-pydeprecate"
        },
        {
            "description": "Python module dependency visualization.",
            "name": "py-pydeps"
        },
        {
            "description": "CLI dev tools powered by pydoit.",
            "name": "py-pydevtool"
        },
        {
            "description": "A low-level profiler for capture I/O calls from deep learning\napplications.",
            "name": "py-pydftracer"
        },
        {
            "description": "Pure python package for DICOM medical file reading and writing pydicom\nis a pure Python package for working with DICOM files. It lets you read,\nmodify and write DICOM data in an easy \"pythonic\" way.",
            "name": "py-pydicom"
        },
        {
            "description": "Multi-producer-multi-consumer signal dispatching mechanism.",
            "name": "py-pydispatcher"
        },
        {
            "description": "PyDMD is a Python package that uses Dynamic Mode Decomposition for a\ndata-driven model simplification based on spatiotemporal coherent\nstructures.",
            "name": "py-pydmd"
        },
        {
            "description": "Python docstring style checker.",
            "name": "py-pydocstyle"
        },
        {
            "description": "The pyDOE package is designed to help the scientist, engineer,\nstatistician, etc., to construct appropriate experimental designs",
            "name": "py-pydoe"
        },
        {
            "description": "pyDOE2 is a fork of the pyDOE package that is designed to help the\nscientist, engineer, statistician, etc., to construct appropriate\nexperimental designs.",
            "name": "py-pydoe2"
        },
        {
            "description": "Python interface to Graphviz's Dot language",
            "name": "py-pydot"
        },
        {
            "description": "Python interface to Graphviz's Dot",
            "name": "py-pydot2"
        },
        {
            "description": "Python interface to Graphviz's Dot language",
            "name": "py-pydotplus"
        },
        {
            "description": "Manipulate audio with an simple and easy high level interface",
            "name": "py-pydub"
        },
        {
            "description": "PDV is a 1D graphics and data analysis tool, heavily based on the ULTRA\nplotting tool",
            "name": "py-pydv"
        },
        {
            "description": "PyEDA is a Python library for electronic design automation.",
            "name": "py-pyeda"
        },
        {
            "description": "Pyedr provides a means of reading a Gromacs EDR binary XDR file and\nreturn its contents as a dictionary of NumPy arrays",
            "name": "py-pyedr"
        },
        {
            "description": "A rough port of Node.js's EventEmitter to Python with a few tricks of\nits own.",
            "name": "py-pyee"
        },
        {
            "description": "A pure-Python library for parsing and analyzing ELF files and DWARF\ndebugging information",
            "name": "py-pyelftools"
        },
        {
            "description": "Project-level Python virtual environment management tool. PyEM manages\nmultiple virtual environments local to projects. It provides shortcuts\nto create, remove, switch between, and run commands against virtual\nenvironments created against various Python interpreters.",
            "name": "py-pyem"
        },
        {
            "description": "Sphinx Documentation Generator.",
            "name": "py-pyenchant"
        },
        {
            "description": "Provides simple access to https://epsg.io/.",
            "name": "py-pyepsg"
        },
        {
            "description": "PyERFA is the Python wrapper for the ERFA library (Essential Routines\nfor Fundamental Astronomy), a C library containing key algorithms for\nastronomy, which is based on the SOFA library published by the\nInternational Astronomical Union (IAU). All C routines are wrapped as\nNumpy universal functions, so that they can be called with scalar or\narray inputs.",
            "name": "py-pyerfa"
        },
        {
            "description": "An event driven middleware library for Python.",
            "name": "py-pyeventsystem"
        },
        {
            "description": "The pyface project contains a toolkit-independent GUI abstraction layer,\nwhich is used to support the \"visualization\" features of the Traits\npackage. Thus, you can write code in terms of the Traits API (views,\nitems, editors, etc.), and let pyface and your selected toolkit and\nback-end take care of the details of displaying them.",
            "name": "py-pyface"
        },
        {
            "description": "pyfaidx: efficient pythonic random access to fasta subsequences",
            "name": "py-pyfaidx"
        },
        {
            "description": "Pyfasta: fast, memory-efficient, pythonic (and command-line) access to\nfasta sequence files",
            "name": "py-pyfasta"
        },
        {
            "description": "Manipulate FASTA and FASTQ files.",
            "name": "py-pyfastaq"
        },
        {
            "description": "A pythonic wrapper around FFTW, the FFT library, presenting a unified\ninterface for all the supported transforms.",
            "name": "py-pyfftw"
        },
        {
            "description": "pyfiglet is a full port of FIGlet (http://www.figlet.org/) into\npurepython. It takes ASCII text and renders it in ASCII art font.",
            "name": "py-pyfiglet"
        },
        {
            "description": "The PyFITS module is a Python library providing access to FITS(Flexible\nImage Transport System) files.",
            "name": "py-pyfits"
        },
        {
            "description": "A simple program which checks Python source files for errors.",
            "name": "py-pyflakes"
        },
        {
            "description": "PyFR is an open-source Python based framework for solving advection-\ndiffusion type problems on streaming architectures using the Flux\nReconstruction approach of Huynh.",
            "name": "py-pyfr"
        },
        {
            "description": "Pygame is a free and open-source cross-platform library for the\ndevelopment of multimedia applications like video games using Python. It\nuses the Simple DirectMedia Layer library and several other popular\nlibraries to abstract the most common functions, making writing these\nprograms a more intuitive task.",
            "name": "py-pygame"
        },
        {
            "description": "Virtualenv and setuptools friendly version of standard GDAL python\nbindings. This package is for you if you had problems installing GDAL in\nyour virtualenv. You can install GDAL into your virtualenv using this\npackage but you still need to install GDAL library and its header files\non your system.",
            "name": "py-pygdal"
        },
        {
            "description": "Parse gdb machine interface output with Python",
            "name": "py-pygdbmi"
        },
        {
            "description": "Python logging handlers with GELF (Graylog Extended Log Format) support.",
            "name": "py-pygelf"
        },
        {
            "description": "PyGEOS is a C/Python library with vectorized geometry functions. The\ngeometry operations are done in the open-source geometry library GEOS.\nPyGEOS wraps these operations in NumPy ufuncs providing a performance\nimprovement when operating on arrays of geometries.",
            "name": "py-pygeos"
        },
        {
            "description": "A simple, cross-platform module for obtaining GUI information on and\ncontrolling application's windows.",
            "name": "py-pygetwindow"
        },
        {
            "description": "Pygit2 is a set of Python bindings to the libgit2 shared library,\nlibgit2 implements the core of Git.",
            "name": "py-pygit2"
        },
        {
            "description": "Typed interactions with the GitHub API v3",
            "name": "py-pygithub"
        },
        {
            "description": "pyglet is a cross-platform windowing and multimedia library for Python\nfor developing games and other visually rich applications.",
            "name": "py-pyglet"
        },
        {
            "description": "Pygments is a syntax highlighting package written in Python.",
            "name": "py-pygments"
        },
        {
            "description": "A pygments lexer for pytest output.",
            "name": "py-pygments-pytest"
        },
        {
            "description": "Easier Pythonic interface to GMSH.",
            "name": "py-pygmsh"
        },
        {
            "description": "A Python interface for the Generic Mapping Tools.",
            "name": "py-pygmt"
        },
        {
            "description": "bindings for the GLib, and GObject, to be used in Python.",
            "name": "py-pygobject"
        },
        {
            "description": "pyGPs is a Python library for Gaussian Process (GP) Regression and\nClassification.",
            "name": "py-pygps"
        },
        {
            "description": "Python packge for the libgpuarray C library.",
            "name": "py-pygpu"
        },
        {
            "description": "Python interface to Graphviz",
            "name": "py-pygraphviz"
        },
        {
            "description": "PyGreSQL is an open-source Python module that interfaces to a PostgreSQL\ndatabase",
            "name": "py-pygresql"
        },
        {
            "description": "A pure Python implementation of a trie data structure.",
            "name": "py-pygtrie"
        },
        {
            "description": "Read and write H5MD files.",
            "name": "py-pyh5md"
        },
        {
            "description": "pyhdf is a python wrapper around the NCSA HDF version 4 library. The SD\n(Scientific Dataset), VS (Vdata) and V (Vgroup) APIs are currently\nimplemented. NetCDF files can also be read and modified.",
            "name": "py-pyhdf"
        },
        {
            "description": "CERN PyHEADTAIL numerical n-body simulation code for simulating macro-\nparticle beam dynamics with collective effects.",
            "name": "py-pyheadtail"
        },
        {
            "description": "HMMER is a biological sequence analysis tool that uses profile hidden\nMarkov models to search for sequence homologs. HMMER3 is developed and\nmaintained by the Eddy/Rivas Laboratory at Harvard University. pyhmmer\nis a Python package, implemented using the Cython language, that\nprovides bindings to HMMER3.",
            "name": "py-pyhmmer"
        },
        {
            "description": "Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the\ncomputation of the convex hull, Delaunay triangulation and Voronoi\ndiagram. It is written as a Python C extension, with both high-level and\nlow-level interfaces to qhull.",
            "name": "py-pyhull"
        },
        {
            "description": "Python extension wrapping the ICU C++ API",
            "name": "py-pyicu"
        },
        {
            "description": "Call stack profiler for Python. Shows you why your code is slow!",
            "name": "py-pyinstrument"
        },
        {
            "description": "A CPython extension supporting pyinstrument.",
            "name": "py-pyinstrument-cext"
        },
        {
            "description": "pyIsEmail is a no-nonsense approach for checking whether that user-\nsupplied email address could be real.",
            "name": "py-pyisemail"
        },
        {
            "description": "Pyjnius is a Python library for accessing Java classes.",
            "name": "py-pyjnius"
        },
        {
            "description": "JSON Web Token implementation in Python",
            "name": "py-pyjwt"
        },
        {
            "description": "Pyke introduces a form of Logic Programming (inspired by Prolog) to the\nPython community by providing a knowledge-based inference engine (expert\nsystem) written in 100% Python.",
            "name": "py-pyke"
        },
        {
            "description": "This Python package is a high-level wrapper for Kerberos (GSSAPI)\noperations.",
            "name": "py-pykerberos"
        },
        {
            "description": "pyKML is a Python package for parsing and authoring KML documents. It is\nbased on the lxml.objectify API which provides Pythonic access to XML\ndocuments.",
            "name": "py-pykml"
        },
        {
            "description": "Minimal set of bindings for Kokkos interoperability with Python\n(initialize, finalize, View, DynRankView, Kokkos-tools)",
            "name": "py-pykokkos-base"
        },
        {
            "description": "Python lib/cli for JSON/YAML schema validation",
            "name": "py-pykwalify"
        },
        {
            "description": "A development kit that collects simple utilities.",
            "name": "py-pylab-sdk"
        },
        {
            "description": "A Python library for creating LaTeX files and snippets",
            "name": "py-pylatex"
        },
        {
            "description": "This library is an implementation of the JSON-LD specification in\nPython.",
            "name": "py-pyld"
        },
        {
            "description": "A pure Python Levenshtein implementation that's not freaking GPL'd.",
            "name": "py-pylev"
        },
        {
            "description": "scikit-build project with CMake for compiling libmagic",
            "name": "py-pylibmagic"
        },
        {
            "description": "Python interface to the LIKWID tools library with calls for system\ntopology, process/thread affinity, hardware performance monitoring and\nthe manipulation of system features like frequencies and prefetchers.",
            "name": "py-pylikwid"
        },
        {
            "description": "python code static checker",
            "name": "py-pylint"
        },
        {
            "description": "This project provides pylint formatters for a nice integration with\nGitLab CI.",
            "name": "py-pylint-gitlab"
        },
        {
            "description": "Many useful operators, however, do not lend themselves to an explicit\nmatrix representation when used to solve large-scale problems. PyLops\noperators, on the other hand, still represent a matrix and can be\ntreated in a similar way, but do not rely on the explicit creation of a\ndense (or sparse) matrix itself. Conversely, the forward and adjoint\noperators are represented by small pieces of codes that mimic the effect\nof the matrix on a vector or another matrix.",
            "name": "py-pylops"
        },
        {
            "description": "Python Materials Genomics is a robust materials analysis code that\ndefines core object representations for structures and molecules with\nsupport for many electronic structure codes. It is currently the core\nanalysis code powering the Materials Project.",
            "name": "py-pymatgen"
        },
        {
            "description": "Convenient reader for Matlab mat files.",
            "name": "py-pymatreader"
        },
        {
            "description": "A simple package to do symbolic math (focus on code gen and DSLs)",
            "name": "py-pymbolic"
        },
        {
            "description": "PyMC3 is a Python package for Bayesian statistical modeling and\nProbabilistic Machine Learning focusing on advanced Markov chain Monte\nCarlo (MCMC) and variational inference (VI) algorithms. Its flexibility\nand extensibility make it applicable to a large suite of problems.",
            "name": "py-pymc3"
        },
        {
            "description": "Extensions for Python Markdown.",
            "name": "py-pymdown-extensions"
        },
        {
            "description": "Library of astronomical algorithms in Python.",
            "name": "py-pymeeus"
        },
        {
            "description": "Pyminifier is a Python code minifier, obfuscator, and compressor.",
            "name": "py-pyminifier"
        },
        {
            "description": "PyMOL is a Python-enhanced molecular graphics tool. It excels at 3D\nvisualization of proteins, small molecules, density, surfaces, and\ntrajectories. It also includes molecular editing, ray tracing, and\nmovies. Open Source PyMOL is free to everyone!",
            "name": "py-pymol"
        },
        {
            "description": "The PyMongo distribution contains tools for interacting with MongoDB\ndatabase from Python. The bson package is an implementation of the BSON\nformat for Python. The pymongo package is a native Python driver for\nMongoDB. The gridfs package is a gridfs implementation on top of\npymongo.",
            "name": "py-pymongo"
        },
        {
            "description": "Multi-Objective Optimization in Python",
            "name": "py-pymoo"
        },
        {
            "description": "Pymorph is a collection of pure python implementations of many image\nmorphology functions.",
            "name": "py-pymorph"
        },
        {
            "description": "Development tool to measure, monitor and analyze the memory behavior of\nPython objects in a running Python application.",
            "name": "py-pympler"
        },
        {
            "description": "A simple, cross-platform, pure Python module for JavaScript-like message\nboxes.",
            "name": "py-pymsgbox"
        },
        {
            "description": "Python3 module for running MUMmer and reading the output",
            "name": "py-pymummer"
        },
        {
            "description": "Python bindings for MUMPS, a parallel sparse direct solver",
            "name": "py-pymumps"
        },
        {
            "description": "Pure-Python MySQL client library",
            "name": "py-pymysql"
        },
        {
            "description": "Python binding to the Networking and Cryptography (NaCl) library.",
            "name": "py-pynacl"
        },
        {
            "description": "PyNIO (\"pie-nee-oh\") is a Python module that allows read and/or write\naccess to a variety of scientific data formats popular in climate and\nweather",
            "name": "py-pynio"
        },
        {
            "description": "A small Python library to limit the resources used by a function by\nexecuting it inside a subprocess.",
            "name": "py-pynisher"
        },
        {
            "description": "A Python package for simulator-independent specification of neuronal\nnetwork models",
            "name": "py-pynn"
        },
        {
            "description": "PyNNDescent is a Python nearest neighbor descent for approximate nearest\nneighbors.",
            "name": "py-pynndescent"
        },
        {
            "description": "Python interface to your NPM and package.json.",
            "name": "py-pynpm"
        },
        {
            "description": "Python library for reading and writing NRRD files into and from numpy\narrays",
            "name": "py-pynrrd"
        },
        {
            "description": "PyNucleus is a finite element code that specifically targets nonlocal\noperators.",
            "name": "py-pynucleus"
        },
        {
            "description": "Neovim python client",
            "name": "py-pynvim"
        },
        {
            "description": "Provides a Python interface to GPU management and monitoring functions.\nThis is a wrapper around the NVML library. For information about the\nNVML library, see the NVML developer page\nhttps://developer.nvidia.com/nvidia-management-library-nvml",
            "name": "py-pynvml"
        },
        {
            "description": "A thin python wrapper for the nvToolsExt (NVTX) library, using pybind11.\nThis wrapper is meant to be as thin as possible -- so only provides\nminimal support. Currently supported features are: NVTX annotations:\nnvtxRangePushA and nvtxRangePop Function decorator: PyNVTX.annotate\nAutomatic decorator generation PyNVTX.annotate_all_methods()",
            "name": "py-pynvtx"
        },
        {
            "description": "A Python DB API 2 module for ODBC. This project provides an up-to-date,\nconvenient interface to ODBC using native data types like datetime and\ndecimal.",
            "name": "py-pyodbc"
        },
        {
            "description": "Vectorized spatial vector file format I/O using GDAL/OGR",
            "name": "py-pyogrio"
        },
        {
            "description": "Pyomo is a Python-based open-source software package that supports a\ndiverse set of optimization capabilities for formulating and analyzing\noptimization models.",
            "name": "py-pyomo"
        },
        {
            "description": "Python wrapper for OpenCL.",
            "name": "py-pyopencl"
        },
        {
            "description": "PyOpenGL is the most common cross platform Python binding to OpenGL and\nrelated APIs.",
            "name": "py-pyopengl"
        },
        {
            "description": "High-level wrapper around a subset of the OpenSSL library. Note: The\nPython Cryptographic Authority strongly suggests the use of\npyca/cryptography where possible. If you are using pyOpenSSL for\nanything other than making a TLS connection you should move to\ncryptography and drop your pyOpenSSL dependency.",
            "name": "py-pyopenssl"
        },
        {
            "description": "Pypar is an efficient but easy-to-use module that allows programs\nwritten in Python to run in parallel on multiple processors and\ncommunicate using MPI.",
            "name": "py-pypar"
        },
        {
            "description": "A Python Parsing Module.",
            "name": "py-pyparsing"
        },
        {
            "description": "A pure-python PDF library capable of splitting, merging, cropping, and\ntransforming PDF files",
            "name": "py-pypdf"
        },
        {
            "description": "PyPDF2 is a free and open source pure-python PDF library capable of\nsplitting, merging, cropping, and transforming the pages of PDF files.\nIt can also add custom data, viewing options, and passwords to PDF\nfiles. PyPDF2 can retrieve text and metadata from PDFs as well.",
            "name": "py-pypdf2"
        },
        {
            "description": "pypeFLOW is light weight and reusable make / flow data process library\nwritten in Python.",
            "name": "py-pypeflow"
        },
        {
            "description": "A PEG Parser-Interpreter in Python",
            "name": "py-pypeg2"
        },
        {
            "description": "A cross-platform clipboard module for Python.",
            "name": "py-pyperclip"
        },
        {
            "description": "The Python perf module is a toolkit to write, run and analyze\nbenchmarks.",
            "name": "py-pyperf"
        },
        {
            "description": "Chinese Pinyin conversion module/tool.",
            "name": "py-pypinyin"
        },
        {
            "description": "PyPNG allows PNG image files to be read and written using pure Python.",
            "name": "py-pypng"
        },
        {
            "description": "Headless chrome/chromium automation library (unofficial port of\npuppeteer).",
            "name": "py-pyppeteer"
        },
        {
            "description": "This package provides python language bindings for the C++ library\npreCICE.",
            "name": "py-pyprecice"
        },
        {
            "description": "Python cProfile and hotshot profile's data to HTML Converter",
            "name": "py-pyprof2html"
        },
        {
            "description": "Python interface to PROJ (cartographic projections and coordinate\ntransformations library).",
            "name": "py-pyproj"
        },
        {
            "description": "Wrappers to call pyproject.toml-based build backend hooks.",
            "name": "py-pyproject-hooks"
        },
        {
            "description": "PEP 621 metadata parsing.",
            "name": "py-pyproject-metadata"
        },
        {
            "description": "Parser for 'pyproject.toml'",
            "name": "py-pyproject-parser"
        },
        {
            "description": "Pulse is a package used to handle PSRFITS files and perform subsequent\nanalyses on pulse profiles.",
            "name": "py-pypulse"
        },
        {
            "description": "pyqi (canonically pronounced pie chee) is a Python framework designed to\nsupport wrapping general commands in multiple types of interfaces,\nincluding at the command line, HTML, and API levels.",
            "name": "py-pyqi"
        },
        {
            "description": "The PEP 517 compliant PyQt build system.",
            "name": "py-pyqt-builder"
        },
        {
            "description": "PyQt is a set of Python v2 and v3 bindings for The Qt Company's Qt\napplication framework and runs on all platforms supported by Qt\nincluding Windows, OS X, Linux, iOS and Android. PyQt4 supports Qt v4\nand will build against Qt v5.",
            "name": "py-pyqt4"
        },
        {
            "description": "PyQt is a set of Python v2 and v3 bindings for The Qt Company's Qt\napplication framework and runs on all platforms supported by Qt\nincluding Windows, OS X, Linux, iOS and Android. PyQt5 supports Qt v5.",
            "name": "py-pyqt5"
        },
        {
            "description": "The sip module support for PyQt5.",
            "name": "py-pyqt5-sip"
        },
        {
            "description": "PyQt6 is a comprehensive set of Python bindings for Qt v6.",
            "name": "py-pyqt6"
        },
        {
            "description": "The sip module support for PyQt6.",
            "name": "py-pyqt6-sip"
        },
        {
            "description": "PyQtGraph is a pure-python graphics and GUI library intended for use in\nmathematics, scientific, and engineering applications",
            "name": "py-pyqtgraph"
        },
        {
            "description": "Python morphology manipulation toolkit",
            "name": "py-pyquaternion"
        },
        {
            "description": "A Python implementation of GNU readline functionality.",
            "name": "py-pyreadline"
        },
        {
            "description": "PyRect is a simple module with a Rect class for Pygame-like rectangular\nareas.",
            "name": "py-pyrect"
        },
        {
            "description": "PyRevolve. Python wrapper for Revolve:\nhttps://dl.acm.org/doi/10.1145/347837.347846",
            "name": "py-pyrevolve"
        },
        {
            "description": "This package serves as the python interface to RFR, an extensible C++\nlibrarry for random forests.",
            "name": "py-pyrfr"
        },
        {
            "description": "Generic API for dispatch to Pyro backends.",
            "name": "py-pyro-api"
        },
        {
            "description": "A Python library for probabilistic modeling and inference.",
            "name": "py-pyro-ppl"
        },
        {
            "description": "distributed object middleware for Python (RPC)",
            "name": "py-pyro4"
        },
        {
            "description": "Pyrocko is an open source seismology toolbox and library, written in the\nPython programming language",
            "name": "py-pyrocko"
        },
        {
            "description": "Cython bindings and Python interface to Prodigal, an ORF finder for\ngenomes and metagenomes",
            "name": "py-pyrodigal"
        },
        {
            "description": "3D mathematical functions using NumPy.",
            "name": "py-pyrr"
        },
        {
            "description": "Pyrsistent is a number of persistent collections (by some referred to as\nfunctional data structures). Persistent in the sense that they are\nimmutable.",
            "name": "py-pyrsistent"
        },
        {
            "description": "A python module for reading, manipulating and writing genomic data sets.",
            "name": "py-pysam"
        },
        {
            "description": "pyScaf orders contigs from genome assemblies utilising several types of\ninformation",
            "name": "py-pyscaf"
        },
        {
            "description": "PySCF is a collection of electronic structure programs powered by\nPython.",
            "name": "py-pyscf"
        },
        {
            "description": "Python interface for the SCIP Optimization Suite",
            "name": "py-pyscipopt"
        },
        {
            "description": "PyScreeze can take screenshots, save them to files, and locate images\nwithin the screen. This is useful if you have a small image of, say, a\nbutton that needs to be clicked and want to locate it on the screen.",
            "name": "py-pyscreeze"
        },
        {
            "description": "Sequence Elements Enrichment Analysis (SEER), python implementation",
            "name": "py-pyseer"
        },
        {
            "description": "Python Serial Port Extension",
            "name": "py-pyserial"
        },
        {
            "description": "A simple interface to SFTP.",
            "name": "py-pysftp"
        },
        {
            "description": "A Python validator for SHACL.",
            "name": "py-pyshacl"
        },
        {
            "description": "The Python Shapefile Library (pyshp) reads and writes ESRI Shapefiles in\npure Python.",
            "name": "py-pyshp"
        },
        {
            "description": "Python bindings for Qt.",
            "name": "py-pyside"
        },
        {
            "description": "Python bindings for Qt.",
            "name": "py-pyside2"
        },
        {
            "description": "Python bindings for the simdjson project, a SIMD-accelerated JSON\nparser. If SIMD instructions are unavailable a fallback parser is used,\nmaking pysimdjson safe to use anywhere.",
            "name": "py-pysimdjson"
        },
        {
            "description": "A Smart Download Manager for Python.",
            "name": "py-pysmartdl"
        },
        {
            "description": "A Python SOCKS client module.",
            "name": "py-pysocks"
        },
        {
            "description": "Pysolar is a collection of Python libraries for simulating the\nirradiation of any point on earth by the sun. It includes code for\nextremely precise ephemeris calculations, and more.",
            "name": "py-pysolar"
        },
        {
            "description": "Python bindings for Apache Spark",
            "name": "py-pyspark"
        },
        {
            "description": "Pure python spell checker based on work by Peter Norvig",
            "name": "py-pyspellchecker"
        },
        {
            "description": "Simulate electronic circuit using Python and the Ngspice / Xyce\nsimulators",
            "name": "py-pyspice"
        },
        {
            "description": "Python SPNEGO authentication library.",
            "name": "py-pyspnego"
        },
        {
            "description": "Python bindings to spoa",
            "name": "py-pyspoa"
        },
        {
            "description": "DB-API 2.0 interface for Sqlite 3.x",
            "name": "py-pysqlite3"
        },
        {
            "description": "Python library for working with Spatiotemporal Asset Catalog (STAC).",
            "name": "py-pystac"
        },
        {
            "description": "Python library for working with Spatiotemporal Asset Catalog (STAC).",
            "name": "py-pystac-client"
        },
        {
            "description": "Pystache is a Python implementation of Mustache. Mustache is a\nframework-agnostic, logic-free templating system inspired by ctemplate\nand et.",
            "name": "py-pystache"
        },
        {
            "description": "PyStan is a Python interface to Stan, a package for Bayesian inference.",
            "name": "py-pystan"
        },
        {
            "description": "Cortical neuroimaging visualization in Python.",
            "name": "py-pysurfer"
        },
        {
            "description": "Simple python tail -f wrapper",
            "name": "py-pytailf"
        },
        {
            "description": "Python module/library for creating and maintaining a rapidly searchable\nindex for a tar-file. This allows \"direct access\" of members (files) in\nthe tar archive.",
            "name": "py-pytaridx"
        },
        {
            "description": "The pytecplot library is a high level API that connects your Python\nscript to the power of the Tecplot 360 visualization engine. It offers\nline plotting, 2D and 3D surface plots in a variety of formats, and 3D\nvolumetric visualization. Familiarity with Tecplot 360 and the Tecplot\n360 macro language is helpful, but not required.",
            "name": "py-pytecplot"
        },
        {
            "description": "Python-tesseract is an Optical Character Recognition (OCR) Tool for\npython.",
            "name": "py-pytesseract"
        },
        {
            "description": "pytest: simple powerful testing with Python.",
            "name": "py-pytest"
        },
        {
            "description": "Pytest plugin for aiohttp support.",
            "name": "py-pytest-aiohttp"
        },
        {
            "description": "Pytest fixture extending Numpy's allclose function.",
            "name": "py-pytest-allclose"
        },
        {
            "description": "pytest plugin to help with comparing array output from tests",
            "name": "py-pytest-arraydiff"
        },
        {
            "description": "Meta-package containing dependencies for testing.",
            "name": "py-pytest-astropy"
        },
        {
            "description": "pytest plugin to add diagnostic information to the header of the test\noutput.",
            "name": "py-pytest-astropy-header"
        },
        {
            "description": "pytest-asyncio is an Apache2 licensed library, written in Python, for\ntesting asyncio code with pytest.",
            "name": "py-pytest-asyncio"
        },
        {
            "description": "A pytest fixture for benchmarking code.",
            "name": "py-pytest-benchmark"
        },
        {
            "description": "pytest plugin to provide cross-test run caching functionality to plugins\nand test runs.",
            "name": "py-pytest-cache"
        },
        {
            "description": "pytest plugin that checks URLs for HTML-containing files.",
            "name": "py-pytest-check-links"
        },
        {
            "description": "Pytest plugin for measuring coverage.",
            "name": "py-pytest-cov"
        },
        {
            "description": "Use pytest runner to discover and execute C++ tests.",
            "name": "py-pytest-cpp"
        },
        {
            "description": "Pytest plugin for manipulating test data directories and files.",
            "name": "py-pytest-datadir"
        },
        {
            "description": "Pytest plugin with advanced doctest features.",
            "name": "py-pytest-doctestplus"
        },
        {
            "description": "Fail tests that take too long to run.",
            "name": "py-pytest-fail-slow"
        },
        {
            "description": "Pytest plugin for filtering based on sub-packages.",
            "name": "py-pytest-filter-subpackage"
        },
        {
            "description": "pytest plugin to check FLAKE8 requirements.",
            "name": "py-pytest-flake8"
        },
        {
            "description": "py.test plugin for efficiently checking python source with pyflakes.",
            "name": "py-pytest-flakes"
        },
        {
            "description": "Run tests in isolated forked subprocesses.",
            "name": "py-pytest-forked"
        },
        {
            "description": "pytest-html is a plugin for pytest that generates a HTML report for test\nresults",
            "name": "py-pytest-html"
        },
        {
            "description": "Easily test your HTTP library against a local copy of httpbin",
            "name": "py-pytest-httpbin"
        },
        {
            "description": "py.test plugin to check import ordering using isort",
            "name": "py-pytest-isort"
        },
        {
            "description": "It helps to use fixtures in pytest.mark.parametrize.",
            "name": "py-pytest-lazy-fixture"
        },
        {
            "description": "pytest plugin for test session metadata",
            "name": "py-pytest-metadata"
        },
        {
            "description": "Thin-wrapper around the mock package for easier use with py.test",
            "name": "py-pytest-mock"
        },
        {
            "description": "Pytest plugin to collect information from tests.",
            "name": "py-pytest-mpi"
        },
        {
            "description": "Mypy static type checker plugin for Pytest.",
            "name": "py-pytest-mypy"
        },
        {
            "description": "A plugin for the pytest framework that allows developers to detect\nwhether any file handles or other file-like objects were inadvertently\nleft open at the end of a unit test",
            "name": "py-pytest-openfiles"
        },
        {
            "description": "A pytest plugin for parallel and concurrent testing.",
            "name": "py-pytest-parallel"
        },
        {
            "description": "pytest plugin for efficiently checking PEP8 compliance",
            "name": "py-pytest-pep8"
        },
        {
            "description": "Run pylint with pytest and have configurable rule types (i.e.\nConvention, Warn, and Error) fail the build. You can also specify a\npylintrc file.",
            "name": "py-pytest-pylint"
        },
        {
            "description": "A pytest plugin that allows programmers to write tests for PySide,\nPySide2 and PyQt applications.",
            "name": "py-pytest-qt"
        },
        {
            "description": "Randomise the order in which pytest tests are run.",
            "name": "py-pytest-random-order"
        },
        {
            "description": "pytest plugin for snapshot regression testing.",
            "name": "py-pytest-regtest"
        },
        {
            "description": "Pytest plugin for controlling remote data access.",
            "name": "py-pytest-remotedata"
        },
        {
            "description": "Invoke py.test as distutils command with dependency resolution.",
            "name": "py-pytest-runner"
        },
        {
            "description": "A plugin to fake subprocess for pytest.",
            "name": "py-pytest-subprocess"
        },
        {
            "description": "A plugin which will terminate tests after a certain timeout, assuming\nthe test session isn't being debugged.",
            "name": "py-pytest-timeout"
        },
        {
            "description": "A workflow-system agnostic testing framework that aims to make\npipeline/workflow testing easy by using YAML files for the test\nconfiguration.",
            "name": "py-pytest-workflow"
        },
        {
            "description": "py.test xdist plugin for distributed testing and loop-on-failing mode",
            "name": "py-pytest-xdist"
        },
        {
            "description": "A dict subclass with keylist/keypath support, I/O shortcuts and many\nutilities.",
            "name": "py-python-benedict"
        },
        {
            "description": "Python-bioformats is a Python wrapper for Bio-Formats, a standalone Java\nlibrary for reading and writing life sciences image file formats. Bio-\nFormats is capable of parsing both pixels and metadata for a large\nnumber of formats, as well as writing to several formats.",
            "name": "py-python-bioformats"
        },
        {
            "description": "Advanced Python dictionaries with dot notation access Box will\nautomatically make otherwise inaccessible keys safe to access as an\nattribute. You can always pass conversion_box=False to Box to disable\nthat behavior. Also, all new dict and lists added to a Box or BoxList\nobject are converted automatically.",
            "name": "py-python-box"
        },
        {
            "description": "Python binding for Rust's library for reading excel and odf file -\ncalamine.",
            "name": "py-python-calamine"
        },
        {
            "description": "This package patches certifi at runtime to also include certificates\nfrom the windows certificate store.",
            "name": "py-python-certifi-win32"
        },
        {
            "description": "Constraint Solving Problem resolver for Python",
            "name": "py-python-constraint"
        },
        {
            "description": "python-crfsuite is a python binding to CRFsuite.",
            "name": "py-python-crfsuite"
        },
        {
            "description": "Library to implement a well-behaved Unix daemon process. This library\nimplements the well-behaved daemon specification of PEP Standard daemon\nprocess. A well-behaved Unix daemon process is tricky to get right, but\nthe required steps are much the same for every daemon program. A\nDaemonContext instance holds the behaviour and configured process\nenvironment for the program; use the instance as a context manager to\nenter a daemon state.",
            "name": "py-python-daemon"
        },
        {
            "description": "Extensions to the standard Python datetime module.",
            "name": "py-python-dateutil"
        },
        {
            "description": "Python @deprecated decorator to deprecate old python classes, functions\nor methods.",
            "name": "py-python-deprecated"
        },
        {
            "description": "This is the theme for the Python documentation.",
            "name": "py-python-docs-theme"
        },
        {
            "description": "Read key-value pairs from a .env file and set them as environment\nvariables",
            "name": "py-python-dotenv"
        },
        {
            "description": "python-editor is a library that provides the editor module for\nprogrammatically interfacing with your system's EDITOR variable.",
            "name": "py-python-editor"
        },
        {
            "description": "Engine.IO is the implementation of transport-based cross-browser/cross-\ndevice bi-directional communication layer for Socket.IO.",
            "name": "py-python-engineio"
        },
        {
            "description": "A set of command line utilities and Python modules that implement the\nFMASK algorithm for Landsat and Sentinel-2",
            "name": "py-python-fmask"
        },
        {
            "description": "file-system utilities for lazy devs.",
            "name": "py-python-fsutil"
        },
        {
            "description": "Python wrapper for the GitLab API",
            "name": "py-python-gitlab"
        },
        {
            "description": "The hostlist.py module knows how to expand and collect hostlist\nexpressions.",
            "name": "py-python-hostlist"
        },
        {
            "description": "igraph is a collection of network analysis tools with the emphasis on\nefficiency, portability and ease of use.",
            "name": "py-python-igraph"
        },
        {
            "description": "The python-javabridge package makes it easy to start a Java virtual\nmachine (JVM) from Python and interact with it.",
            "name": "py-python-javabridge"
        },
        {
            "description": "Python bindings for the remote Jenkins API",
            "name": "py-python-jenkins"
        },
        {
            "description": "JOSE implementation in Python",
            "name": "py-python-jose"
        },
        {
            "description": "\"A python library adding a json log formatter.",
            "name": "py-python-json-logger"
        },
        {
            "description": "This is a client for the OpenStack Identity API, implemented by the\nKeystone team",
            "name": "py-python-keystoneclient"
        },
        {
            "description": "python-ldap provides an object-oriented API to access LDAP directory\nservers from Python programs.",
            "name": "py-python-ldap"
        },
        {
            "description": "Python extension for computing string edit distances and similarities.",
            "name": "py-python-levenshtein"
        },
        {
            "description": "LibSBML is a library for reading, writing and manipulating the Systems\nBiology Markup Language (SBML).",
            "name": "py-python-libsbml"
        },
        {
            "description": "Python logging handler for Logstash.",
            "name": "py-python-logstash"
        },
        {
            "description": "This module implements community detection. It uses the louvain method\ndescribed in Fast unfolding of communities in large networks, Vincent D\nBlondel, Jean-Loup Guillaume, Renaud Lambiotte, Renaud Lefebvre, Journal\nof Statistical Mechanics: Theory and Experiment 2008(10), P10008 (12pp)",
            "name": "py-python-louvain"
        },
        {
            "description": "A Python 3.7+ server implementation of the JSON RPC 2.0 protocol.",
            "name": "py-python-lsp-jsonrpc"
        },
        {
            "description": "A plugin for python-lsp-server that adds linting, code action and\nformatting capabilities that are provided by ruff, an extremely fast\nPython linter and formatter written in Rust.",
            "name": "py-python-lsp-ruff"
        },
        {
            "description": "A Python 3.7+ implementation of the Language Server Protocol.",
            "name": "py-python-lsp-server"
        },
        {
            "description": "This module provides Python bindings for the LZO data compression\nlibrary.",
            "name": "py-python-lzo"
        },
        {
            "description": "A python wrapper for libmagic. This project is named python-magic but\nimports as the module name \"magic\".",
            "name": "py-python-magic"
        },
        {
            "description": "Python bindings for mapnik",
            "name": "py-python-mapnik"
        },
        {
            "description": "Math extension for Python-Markdown",
            "name": "py-python-markdown-math"
        },
        {
            "description": "This software is a 100% Python interface to the memcached memory cache\ndaemon. It is the client side software which allows storing values in\none or more, possibly remote, memcached servers. Search google for\nmemcached for more information.",
            "name": "py-python-memcached"
        },
        {
            "description": "A streaming multipart parser for Python",
            "name": "py-python-multipart"
        },
        {
            "description": "python-oauth2 is a framework that aims at making it easy to provide\nauthentication via OAuth 2.0 within an application stack.",
            "name": "py-python-oauth2"
        },
        {
            "description": "Preconditoned ICA for Real Data.",
            "name": "py-python-picard"
        },
        {
            "description": "Generate and manipulate Open XML PowerPoint (.pptx) files.",
            "name": "py-python-pptx"
        },
        {
            "description": "python-ptrace is a debugger using ptrace (Linux, BSD and Darwin system\ncall to trace processes) written in Python.",
            "name": "py-python-ptrace"
        },
        {
            "description": "Python wrapper around rapidjson.",
            "name": "py-python-rapidjson"
        },
        {
            "description": "A Python Slugify application that handles Unicode",
            "name": "py-python-slugify"
        },
        {
            "description": "Python implementation of the Socket.IO realtime server.",
            "name": "py-python-socketio"
        },
        {
            "description": "python-sotools is a collection of tools to work with ELF shared objects",
            "name": "py-python-sotools"
        },
        {
            "description": "Python implementation of subunit test streaming protocol.",
            "name": "py-python-subunit"
        },
        {
            "description": "This is a python client for the Swift API.",
            "name": "py-python-swiftclient"
        },
        {
            "description": "Python Utils is a collection of small Python functions and classes which\nmake common patterns shorter and easier.",
            "name": "py-python-utils"
        },
        {
            "description": "The Python X Library is intended to be a fully functional X client\nlibrary for Python programs. It is written entirely in Python, in\ncontrast to earlier X libraries for Python (the ancient X extension and\nthe newer plxlib) which were interfaces to the C Xlib.",
            "name": "py-python-xlib"
        },
        {
            "description": "Python XMP Toolkit for working with metadata.",
            "name": "py-python-xmp-toolkit"
        },
        {
            "description": "OpenID support for modern servers and consumers.",
            "name": "py-python3-openid"
        },
        {
            "description": "python3-xlib is python3 version of python-xlib.",
            "name": "py-python3-xlib"
        },
        {
            "description": "Qt plotting widgets for Python",
            "name": "py-pythonqwt"
        },
        {
            "description": "Python wrapper for the Sollya library",
            "name": "py-pythonsollya"
        },
        {
            "description": "Ahead of Time compiler for numeric kernels.",
            "name": "py-pythran"
        },
        {
            "description": "A small Python library to parse various kinds of time expressions.",
            "name": "py-pytimeparse"
        },
        {
            "description": "Provides the TNGFileIterator object to allow simple Pythonic access to\ndata contained within TNG files.",
            "name": "py-pytng"
        },
        {
            "description": "A parser for TOML-0.4.0. Deprecated: use py-toml instead.",
            "name": "py-pytoml"
        },
        {
            "description": "A collection of tools for Python",
            "name": "py-pytools"
        },
        {
            "description": "Gradually warm-up (increasing) learning rate for pytorch's optimizer.",
            "name": "py-pytorch-gradual-warmup-lr"
        },
        {
            "description": "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers.",
            "name": "py-pytorch-lightning"
        },
        {
            "description": "PyTorch Sphinx Theme.",
            "name": "py-pytorch-sphinx-theme"
        },
        {
            "description": "This library contains PyTorch implementations of the warmup schedules\ndescribed in On the adequacy of untuned warmup for adaptive\noptimization.",
            "name": "py-pytorch-warmup"
        },
        {
            "description": "pyts is a Python package for time series classification. It aims to make\ntime series classification easily accessible by providing preprocessing\nand utility tools, and implementations of state-of-the-art algorithms.\nMost of these algorithms transform time series, thus pyts provides\nseveral tools to perform these transformations.",
            "name": "py-pyts"
        },
        {
            "description": "A collection of tweening / easing functions implemented in Python.",
            "name": "py-pytweening"
        },
        {
            "description": "World timezone definitions, modern and historical.",
            "name": "py-pytz"
        },
        {
            "description": "U2F host library for interacting with a U2F device over USB.",
            "name": "py-pyu2f"
        },
        {
            "description": "Pure Python libudev binding",
            "name": "py-pyudev"
        },
        {
            "description": "Work with triangular unstructured grids and the data on them.",
            "name": "py-pyugrid"
        },
        {
            "description": "A tool to automatically upgrade syntax for newer versions.",
            "name": "py-pyupgrade"
        },
        {
            "description": "Easy USB access from Python.",
            "name": "py-pyusb"
        },
        {
            "description": "The PyUtilib project supports a collection of Python utilities,\nincluding a well-developed component architecture and extensions to the\nPyUnit testing framework. PyUtilib has been developed to support several\nPython-centric projects, especially Pyomo. PyUtilib is available under\nthe BSD License.",
            "name": "py-pyutilib"
        },
        {
            "description": "The uWSGI server",
            "name": "py-pyuwsgi"
        },
        {
            "description": "A Variant Call Format reader for Python",
            "name": "py-pyvcf"
        },
        {
            "description": "Easier Pythonic interface to VTK.",
            "name": "py-pyvista"
        },
        {
            "description": "PyQT support for PyVista.",
            "name": "py-pyvistaqt"
        },
        {
            "description": "Bidirectional communication for the HoloViz ecosystem.",
            "name": "py-pyviz-comms"
        },
        {
            "description": "Pyvolve is an open-source Python module for simulating sequences along a\nphylogenetic tree according to continuous-time Markov models of sequence\nevolution",
            "name": "py-pyvolve"
        },
        {
            "description": "PyWavelets is a free Open Source library for wavelet transforms in\nPython",
            "name": "py-pywavelets"
        },
        {
            "description": "pywcs is a set of routines for handling the FITS World Coordinate System\n(WCS) standard.",
            "name": "py-pywcs"
        },
        {
            "description": "Python for Window Extensions.",
            "name": "py-pywin32"
        },
        {
            "description": "PyWorld wrappers WORLD, which is a free software for high-quality speech\nanalysis, manipulation and synthesis. It can estimate fundamental\nfrequency (F0), aperiodicity and spectral envelope and also generate the\nspeech like input speech with only estimated parameters.i",
            "name": "py-pyworld"
        },
        {
            "description": "Excel 2007-2010 Binary Workbook (xlsb) parser",
            "name": "py-pyxlsb"
        },
        {
            "description": "PyYAML is a YAML parser and emitter for Python.",
            "name": "py-pyyaml"
        },
        {
            "description": "A custom YAML tag for referencing environment variables in YAML files.",
            "name": "py-pyyaml-env-tag"
        },
        {
            "description": "PyZMQ: Python bindings for zeromq.",
            "name": "py-pyzmq"
        },
        {
            "description": "Python interface to the QDLDL free LDL factorization routine for quasi-\ndefinite linear systems: Ax = b.",
            "name": "py-qdldl"
        },
        {
            "description": "Aer is a high performance simulator for quantum circuits that includes\nnoise models",
            "name": "py-qiskit-aer"
        },
        {
            "description": "Qiskit IBM Quantum Provider for accessing the quantum devices and\nsimulators at IBM",
            "name": "py-qiskit-ibm-provider"
        },
        {
            "description": "Qiskit Nature is an open-source framework which supports solving quantum\nmechanical natural science problems using quantum computing algorithms",
            "name": "py-qiskit-nature"
        },
        {
            "description": "Qiskit is an open-source SDK for working with quantum computers at the\nlevel of extended quantum circuits, operators, and algorithms.",
            "name": "py-qiskit-terra"
        },
        {
            "description": "A general purpose testing framework",
            "name": "py-qmtest"
        },
        {
            "description": "Unified interface to convex Quadratic Programming (QP) solvers available\nin Python.",
            "name": "py-qpsolvers"
        },
        {
            "description": "A fast and differentiable QP solver for PyTorch",
            "name": "py-qpth"
        },
        {
            "description": "Generate QR codes",
            "name": "py-qrcode"
        },
        {
            "description": "Qsymm is a symmetry finder and symmetric Hamiltonian generator. It\nautomatically generates model Hamiltonians from symmetry constraints and\nfinds the full symmetry group of your Hamiltonian.",
            "name": "py-qsymm"
        },
        {
            "description": "FontAwesome icons in PyQt and PySide applications",
            "name": "py-qtawesome"
        },
        {
            "description": "Jupyter Qt console",
            "name": "py-qtconsole"
        },
        {
            "description": "QtPy: Abtraction layer for PyQt5/PyQt4/PySide/PySide2",
            "name": "py-qtpy"
        },
        {
            "description": "physical quantities (numbers with units)",
            "name": "py-quantiphy"
        },
        {
            "description": "Support for physical quantities with units, based on numpy",
            "name": "py-quantities"
        },
        {
            "description": "Blackbird is a quantum assembly language for continuous-variable quantum\ncomputation, that can be used to program Xanadu\u2019s quantum photonics\nhardware and Strawberry Fields simulator.",
            "name": "py-quantum-blackbird"
        },
        {
            "description": "XIR is an intermediate representation language for quantum circuits.",
            "name": "py-quantum-xir"
        },
        {
            "description": "A Python ASGI web microframework with the same API as Flask.",
            "name": "py-quart"
        },
        {
            "description": "Quality Assessment Tool for Genome Assemblies",
            "name": "py-quast"
        },
        {
            "description": "Interpret numpy arrays as quaternionic arrays with numba acceleration",
            "name": "py-quaternionic"
        },
        {
            "description": "QuDiDA is a micro library for very naive though quick pixel level image\ndomain adaptation via scikit-learn transformers.",
            "name": "py-qudida"
        },
        {
            "description": "Python module to add support for ORM-style filtering to any list of\nitems",
            "name": "py-queryablelist"
        },
        {
            "description": "QueryString parser that correctly handles nested dictionaries.",
            "name": "py-querystring-parser"
        },
        {
            "description": "Questionary is a Python library for effortlessly building pretty command\nline interfaces.",
            "name": "py-questionary"
        },
        {
            "description": "QuTiP: The Quantum Toolbox in Python",
            "name": "py-qutip"
        },
        {
            "description": "The QuTiP quantum information processing package",
            "name": "py-qutip-qip"
        },
        {
            "description": "A Python client for Radiant MLHub.",
            "name": "py-radiant-mlhub"
        },
        {
            "description": "RADICAL Ensemble Toolkit is used for developing and executing large-\nscale ensemble-based workflows.",
            "name": "py-radical-entk"
        },
        {
            "description": "RADICAL-GTOD provides a single method, gtod, which returns the current\ntime in seconds since epoch (01.01.1970) with sub-second resolution and\na binary tool, radical-gtod, which is a compiled binary and does not\nrequire the invocation of the Python interpreter.",
            "name": "py-radical-gtod"
        },
        {
            "description": "RADICAL-Pilot is a Pilot system specialized in executing applications\ncomposed of many computational tasks on high performance computing (HPC)\nplatforms.",
            "name": "py-radical-pilot"
        },
        {
            "description": "RADICAL-SAGA (RS) implements the interface specification of the Open\nGrid Forum (OGF) Simple API for Grid Applications (SAGA) standard. RS\nworks as a light-weight access layer for distributed computing\ninfrastructures, providing adaptors for different middleware systems and\nservices.",
            "name": "py-radical-saga"
        },
        {
            "description": "RADICAL-Utils contains shared code and tools for various RADICAL-\nCybertools packages.",
            "name": "py-radical-utils"
        },
        {
            "description": "A VIM-inspired filemanager for the console",
            "name": "py-ranger-fm"
        },
        {
            "description": "Rapid fuzzy string matching in Python and C++ using the Levenshtein\nDistance.",
            "name": "py-rapidfuzz"
        },
        {
            "description": "C-API of RapidFuzz, which can be used to extend RapidFuzz from separate\npackages.",
            "name": "py-rapidfuzz-capi"
        },
        {
            "description": "RAR archive reader for Python.",
            "name": "py-rarfile"
        },
        {
            "description": "Rasterio reads and writes geospatial raster data. Geographic information\nsystems use GeoTIFF and other formats to organize and store gridded, or\nraster, datasets. Rasterio reads and writes these formats and provides a\nPython API based on N-D arrays.",
            "name": "py-rasterio"
        },
        {
            "description": "rasterstats is a Python module for summarizing geospatial raster\ndatasets based on vector geometries. It includes functions for zonal\nstatistics and interpolated point queries. The command-line interface\nallows for easy interperability with other GeoJSON tools.",
            "name": "py-rasterstats"
        },
        {
            "description": "Makes it easy to respect rate limits.",
            "name": "py-ratelim"
        },
        {
            "description": "Simple Python module providing rate limiting.",
            "name": "py-ratelimiter"
        },
        {
            "description": "Raven is a client for Sentry.",
            "name": "py-raven"
        },
        {
            "description": "Ray provides a simple, universal API for building distributed\napplications.",
            "name": "py-ray"
        },
        {
            "description": "RBTools is a set of command line tools and a rich Python API for use\nwith Review Board.",
            "name": "py-rbtools"
        },
        {
            "description": "RDFLib is a pure Python package for working with RDF. RDFLib contains\nmost things you need to work with RDF, including: parsers and\nserializers for RDF/XML, N3, NTriples, N-Quads, Turtle, TriX, Trig and\nJSON-LD (via a plugin). a Graph interface which can be backed by any one\nof a number of Store implementations store implementations for in-memory\nstorage and persistent storage on top of the Berkeley DB a SPARQL 1.1\nimplementation - supporting SPARQL 1.1 Queries and Update statements",
            "name": "py-rdflib"
        },
        {
            "description": "rdflib extension adding JSON-LD parser and serializer",
            "name": "py-rdflib-jsonld"
        },
        {
            "description": "RDT is a Python library used to transform data for data science\nlibraries and preserve the transformations in order to revert them as\nneeded.",
            "name": "py-rdt"
        },
        {
            "description": "A way to write reusable components in a React-like way, to make Python-\nbased UI's using the ipywidgets ecosystem (ipywidgets, ipyvolume,\nbqplot, threejs, leaflet, ipyvuetify, ...).",
            "name": "py-reacton"
        },
        {
            "description": "Library to easily read single chars and key strokes.",
            "name": "py-readchar"
        },
        {
            "description": "readme_renderer is a library for rendering \"readme\" descriptions for\nWarehouse.",
            "name": "py-readme-renderer"
        },
        {
            "description": "A docutils-compatibility bridge to CommonMark. This allows you to write\nCommonMark inside of Docutils & Sphinx projects. Documentation is\navailable on Read the Docs: http://recommonmark.readthedocs.org",
            "name": "py-recommonmark"
        },
        {
            "description": "The Python interface to the Redis key-value store.",
            "name": "py-redis"
        },
        {
            "description": "JSON Referencing + Python.",
            "name": "py-referencing"
        },
        {
            "description": "A Python object for standardized reference genome assets.",
            "name": "py-refgenconf"
        },
        {
            "description": "Refgenie manages storage, access, and transfer of reference genome\nresources.",
            "name": "py-refgenie"
        },
        {
            "description": "Alternative regular expression module, to replace re.",
            "name": "py-regex"
        },
        {
            "description": "Create masks of geospatial regions for arbitrary grids",
            "name": "py-regionmask"
        },
        {
            "description": "An Astropy coordinated package for region handling",
            "name": "py-regions"
        },
        {
            "description": "Change Python (.py) files to use 4-space indents and no hard tab\ncharacters. Also trim excess spaces and tabs from ends of lines, and\nremove empty lines at the end of files. Also ensure the last line ends\nwith a newline.",
            "name": "py-reindent"
        },
        {
            "description": "A Git client for mirroring multiple remotes without storing state.",
            "name": "py-repligit"
        },
        {
            "description": "The ReportLab Toolkit. An Open Source Python library for generating PDFs\nand graphics.",
            "name": "py-reportlab"
        },
        {
            "description": "A python script for tabular display of slurm efficiency information.",
            "name": "py-reportseff"
        },
        {
            "description": "A tiny LRU cache implementation and decorator",
            "name": "py-repoze-lru"
        },
        {
            "description": "The reproject package is a Python package to reproject astronomical\nimages using various techniques via a uniform interface. By\nreprojection, we mean the re-gridding of images from one world\ncoordinate system to another (for example changing the pixel resolution,\norientation, coordinate system). Currently, we have implemented\nreprojection of celestial images by interpolation (like SWARP), as well\nas by finding the exact overlap between pixels on the celestial sphere\n(like Montage). It can also reproject to/from HEALPIX projections by\nrelying on the astropy-healpix package.",
            "name": "py-reproject"
        },
        {
            "description": "Python HTTP for Humans.",
            "name": "py-requests"
        },
        {
            "description": "A persistent HTTP cache that provides an easy way to get better\nperformance with the python requests library.",
            "name": "py-requests-cache"
        },
        {
            "description": "File transport adapter for Requests.",
            "name": "py-requests-file"
        },
        {
            "description": "FTP Transport Adapter for Requests..",
            "name": "py-requests-ftp"
        },
        {
            "description": "Asynchronous Python HTTP Requests for Humans using Futures",
            "name": "py-requests-futures"
        },
        {
            "description": "An authentication handler for using Kerberos with Python Requests.",
            "name": "py-requests-kerberos"
        },
        {
            "description": "Mock out responses from the requests package.",
            "name": "py-requests-mock"
        },
        {
            "description": "This package allows for HTTP NTLM authentication using the requests\nlibrary.",
            "name": "py-requests-ntlm"
        },
        {
            "description": "This project provides first-class OAuth library support for Requests.",
            "name": "py-requests-oauthlib"
        },
        {
            "description": "A toolbelt of useful classes and functions to be used with python-\nrequests",
            "name": "py-requests-toolbelt"
        },
        {
            "description": "Use requests to talk HTTP via a UNIX domain socket.",
            "name": "py-requests-unixsocket"
        },
        {
            "description": "This is a small Python module for parsing Pip requirement files. The\ngoal is to parse everything in the Pip requirement file format spec.",
            "name": "py-requirements-parser"
        },
        {
            "description": "Easy to use retry decorator.",
            "name": "py-reretry"
        },
        {
            "description": "Efficient sample rate conversion in python",
            "name": "py-resampy"
        },
        {
            "description": "This is a resizing packge for images or tensors, that supports both\nNumpy and PyTorch (fully differentiable) seamlessly. The main motivation\nfor creating this is to address some crucial incorrectness issues (see\nitem 3 in the list below) that exist in all other resizing packages I am\naware of. As far as I know, it is the only one that performs correctly\nin all cases. ResizeRight is specially made for machine learning, image\nenhancement and restoration challenges.",
            "name": "py-resize-right"
        },
        {
            "description": "Resolve abstract dependencies into concrete ones.",
            "name": "py-resolvelib"
        },
        {
            "description": "A utility library for mocking out the `requests` Python library.",
            "name": "py-responses"
        },
        {
            "description": "Python module to read output files of quantum chemistry programs",
            "name": "py-resultsfile"
        },
        {
            "description": "Easy to use retry decorator.",
            "name": "py-retry"
        },
        {
            "description": "Decorator for retrying when exceptions occur",
            "name": "py-retry-decorator"
        },
        {
            "description": "Retrying is an Apache 2.0 licensed general-purpose retrying library,\nwritten in Python, to simplify the task of adding retry behavior to just\nabout anything.",
            "name": "py-retrying"
        },
        {
            "description": "A high performance Python graph library implemented in Rust.",
            "name": "py-retworkx"
        },
        {
            "description": "A pure python RFC3339 validator.",
            "name": "py-rfc3339-validator"
        },
        {
            "description": "A Python implementation of RFC 3986 including validation and authority\nparsing.",
            "name": "py-rfc3986"
        },
        {
            "description": "Pure python rfc3986 validator.",
            "name": "py-rfc3986-validator"
        },
        {
            "description": "Rich is a Python library for rich text and beautiful formatting in the\nterminal.",
            "name": "py-rich"
        },
        {
            "description": "rich-argparse improves the look and readability of argparse's help while\nrequiring minimal changes to the code.",
            "name": "py-rich-argparse"
        },
        {
            "description": "The intention of rich-click is to provide attractive help output from\nclick, formatted with rich, with minimal customisation required.",
            "name": "py-rich-click"
        },
        {
            "description": "Raster I/O Simplification. A set of python modules which makes it easy\nto write raster processing code in Python. Built on top of GDAL, it\nhandles the details of opening and closing files, checking alignment of\nprojection and raster grid, stepping through the raster in small blocks,\netc., allowing the programmer to concentrate on the processing involved.",
            "name": "py-rios"
        },
        {
            "description": "rasterio xarray extension.",
            "name": "py-rioxarray"
        },
        {
            "description": "Reveal.js - Jupyter/IPython Slideshow Extension",
            "name": "py-rise"
        },
        {
            "description": "River is a Python library for online machine learning. It aims to be the\nmost user-friendly library for doing machine learning on streaming data.\nRiver is the result of a merge between creme and scikit-multiflow.",
            "name": "py-river"
        },
        {
            "description": "RMM: RAPIDS Memory Manager. Achieving optimal performance in GPU-centric\nworkflows frequently requires customizing how host and device memory are\nallocated.",
            "name": "py-rmm"
        },
        {
            "description": "RELAX NG Compact to regular syntax conversion library.",
            "name": "py-rnc2rng"
        },
        {
            "description": "Robocrystallographer is a tool to generate text descriptions of crystal\nstructures. Similar to how a real-life crystallographer would analyse a\nstructure, robocrystallographer looks at the symmetry, local\nenvironment, and extended connectivity when generating a description.\nThe package includes utilities for identifying molecule names, component\norientations, heterostructure information, and more.",
            "name": "py-robocrys"
        },
        {
            "description": "Cross-platform lib for process and system monitoring in Python.",
            "name": "py-robotframework"
        },
        {
            "description": "RO-Crate metadata generator/parser",
            "name": "py-rocrate"
        },
        {
            "description": "Roifile is a Python library to read, write, create, and plot ImageJ ROIs",
            "name": "py-roifile"
        },
        {
            "description": "Manipulate well-formed Roman numerals.",
            "name": "py-roman-numerals-py"
        },
        {
            "description": "a python refactoring library.",
            "name": "py-rope"
        },
        {
            "description": "rosdep package manager abstraction tool for ROS.",
            "name": "py-rosdep"
        },
        {
            "description": "A tool to work with rosdistro files.",
            "name": "py-rosdistro"
        },
        {
            "description": "The installer for ROS.",
            "name": "py-rosinstall"
        },
        {
            "description": "A tool for generating rosinstall files.",
            "name": "py-rosinstall-generator"
        },
        {
            "description": "Library for retrieving information about ROS packages and stacks.",
            "name": "py-rospkg"
        },
        {
            "description": "A standalone library for adding rotary embeddings to transformers in\nPytorch, following its success as relative positional encoding.\nSpecifically it will make rotating information into any axis of a tensor\neasy and efficient, whether they be fixed positional or learned. This\nlibrary will give you state of the art results for positional embedding,\nat little costs.",
            "name": "py-rotary-embedding-torch"
        },
        {
            "description": "Routing Recognition and Generation Tools",
            "name": "py-routes"
        },
        {
            "description": "Python bindings to the Rust rpds crate for persistent data structures.",
            "name": "py-rpds-py"
        },
        {
            "description": "A pure Python Lex/Yacc that works with RPython.",
            "name": "py-rply"
        },
        {
            "description": "rpy2 is a redesign and rewrite of rpy. It is providing a low-level\ninterface to R from Python, a proposed high-level interface, including\nwrappers to graphical libraries, as well as R-like structures and\nfunctions.",
            "name": "py-rpy2"
        },
        {
            "description": "RQ (Redis Queue) is a simple Python library for queueing jobs and\nprocessing them in the background with workers.",
            "name": "py-rq"
        },
        {
            "description": "Pure-Python RSA implementation",
            "name": "py-rsa"
        },
        {
            "description": "Representational Similarity Analysis (RSA) in Python.",
            "name": "py-rsatoolbox"
        },
        {
            "description": "RSeQC package provides a number of useful modules that can\ncomprehensively evaluate high throughput sequence data especially RNA-\nseq data.",
            "name": "py-rseqc"
        },
        {
            "description": "Convert reStructured Text to PDF via ReportLab. The usual way of\ncreating PDF from reStructuredText is by going through LaTeX. This tool\nprovides an alternative by producing PDF directly using the ReportLab\nlibrary.",
            "name": "py-rst2pdf"
        },
        {
            "description": "A better TOML library for python implemented in rust.",
            "name": "py-rtoml"
        },
        {
            "description": "R-Tree spatial index for Python GIS.",
            "name": "py-rtree"
        },
        {
            "description": "This is an implementation of an ordered dictionary with Key Insertion\nOrder (KIO: updates of values do not affect the position of the key),\nKey Value Insertion Order (KVIO, an existing key's position is removed\nand put at the back). The standard library module OrderedDict,\nimplemented later, implements a subset of ordereddict functionality.",
            "name": "py-ruamel-ordereddict"
        },
        {
            "description": "a YAML parser/emitter that supports roundtrip preservation of comments,\nseq/map flow style, and map key order",
            "name": "py-ruamel-yaml"
        },
        {
            "description": "C version of reader, parser and emitter for ruamel.yaml derived from\nlibyaml.",
            "name": "py-ruamel-yaml-clib"
        },
        {
            "description": "jinja2 pre and post-processor to update with YAML.",
            "name": "py-ruamel-yaml-jinja2"
        },
        {
            "description": "Rucio Client Lite Package",
            "name": "py-rucio-clients"
        },
        {
            "description": "An extremely fast Python linter and code formatter, written in Rust.",
            "name": "py-ruff"
        },
        {
            "description": "Rustworkx was originally called retworkx and was was created initially\nto be a replacement for qiskit's previous (and current) networkx usage\n(hence the original name). The project was originally started to build a\nfaster directed graph to use as the underlying data structure for the\nDAG at the center of qiskit-terra's transpiler. However, since it's\ninitial introduction the project has grown substantially and now covers\nall applications that need to work with graphs which includes Qiskit.",
            "name": "py-rustworkx"
        },
        {
            "description": "Reactive Extensions (Rx) for Python",
            "name": "py-rx"
        },
        {
            "description": "S3cmd (s3cmd) is a free command line tool and client for uploading,\nretrieving and managing data in Amazon S3 and other cloud storage\nservice providers that use the S3 protocol, such as Google Cloud Storage\nor DreamHost DreamObjects. It is best suited for power users who are\nfamiliar with command line programs.",
            "name": "py-s3cmd"
        },
        {
            "description": "S3FS builds on aiobotocore to provide a convenient Python filesystem\ninterface for S3.",
            "name": "py-s3fs"
        },
        {
            "description": "S3transfer is a Python library for managing Amazon S3 transfers.",
            "name": "py-s3transfer"
        },
        {
            "description": "SacreBLEU is a standard BLEU implementation that downloads and manages\nWMT datasets, produces scores on detokenized outputs, and reports a\nstring encapsulating BLEU parameters, facilitating the production of\nshareable, comparable BLEU scores.",
            "name": "py-sacrebleu"
        },
        {
            "description": "LGPL MosesTokenizer in Python.",
            "name": "py-sacremoses"
        },
        {
            "description": "Fast and Safe Tensor serialization.",
            "name": "py-safetensors"
        },
        {
            "description": "Python implementations of commonly used sensitivity analysis methods.",
            "name": "py-salib"
        },
        {
            "description": "Sanic is a Flask-like Python 3.5+ web server that is written to go fast.\nIt is based on the work done by the amazing folks at magicstack",
            "name": "py-sanic"
        },
        {
            "description": "scandir, a better directory iterator and faster os.walk().",
            "name": "py-scandir"
        },
        {
            "description": "Scanpy is a scalable toolkit for analyzing single-cell gene expression\ndata built jointly with anndata.",
            "name": "py-scanpy"
        },
        {
            "description": "Simple data validation library",
            "name": "py-schema"
        },
        {
            "description": "Schema Annotations for Linked Avro Data (SALAD)",
            "name": "py-schema-salad"
        },
        {
            "description": "ScientificPython is a collection of Python modules for scientific\ncomputing. It contains support for geometry, mathematical functions,\nstatistics, physical units, IO, visualization, and parallelization.",
            "name": "py-scientificpython"
        },
        {
            "description": "scikit-build is an improved build system generator for CPython\nC/C++/Fortran/Cython extensions. It provides better support for\nadditional compilers, build systems, cross compilation, and locating\ndependencies and their associated build requirements. The scikit-build\npackage is fundamentally just glue between the setuptools Python module\nand CMake.",
            "name": "py-scikit-build"
        },
        {
            "description": "scikit-build-core is a doubly improved build system generator for\nCPython C/C++/Fortran/Cython extensions. It features several\nimprovements over the classic scikit-build build system generator.",
            "name": "py-scikit-build-core"
        },
        {
            "description": "scikit-fmm is a Python extension module which implements the fast\nmarching method.",
            "name": "py-scikit-fmm"
        },
        {
            "description": "Fuzzy logic toolkit for SciPy",
            "name": "py-scikit-fuzzy"
        },
        {
            "description": "Image processing algorithms for SciPy, including IO, morphology,\nfiltering, warping, color manipulation, object detection, etc.",
            "name": "py-scikit-image"
        },
        {
            "description": "A set of python modules for machine learning and data mining.",
            "name": "py-scikit-learn"
        },
        {
            "description": "A set of useful tools compatible with scikit-learn scikit-learn-extra is\na Python module for machine learning that extends scikit-learn. It\nincludes algorithms that are useful but do not satisfy the scikit-learn\ninclusion criteria, for instance due to their novelty or lower citation\nnumber.",
            "name": "py-scikit-learn-extra"
        },
        {
            "description": "Scikit-Optimize, or skopt, is a simple and efficient library to minimize\n(very) expensive and noisy black-box functions. It implements several\nmethods for sequential model-based optimization. skopt aims to be\naccessible and easy to use in many contexts. The library is built on top\nof NumPy, SciPy and Scikit-Learn.",
            "name": "py-scikit-optimize"
        },
        {
            "description": "Sparse matrix tools extending scipy.sparse, but with incompatible\nlicenses",
            "name": "py-scikit-sparse"
        },
        {
            "description": "Odes is a scikit toolkit for scipy to add extra ode solvers.\nSpecifically it interfaces the Sundials solvers cvode, cvodes, ida and\nidas. It this way it provides extra modern ode and dae solvers you can\nuse, extending the capabilities offered in scipy.integrade.ode.",
            "name": "py-scikits-odes"
        },
        {
            "description": "Software driving the automated exploration of chemical reaction networks",
            "name": "py-scine-chemoton"
        },
        {
            "description": "Calculation handler for SCINE Chemoton",
            "name": "py-scine-puffin"
        },
        {
            "description": "Scientific numbers with multiple uncertainties and correlation-aware,\ngaussian propagation and numpy",
            "name": "py-scinum"
        },
        {
            "description": "Fundamental algorithms for scientific computing in Python.",
            "name": "py-scipy"
        },
        {
            "description": "A Great Dane turned Python environment detective.",
            "name": "py-scooby"
        },
        {
            "description": "SCOOP (Scalable COncurrent Operations in Python) is a distributed task\nmodule allowing concurrent parallel programming on various environments,\nfrom heterogeneous grids to supercomputers.",
            "name": "py-scoop"
        },
        {
            "description": "scp module for paramiko",
            "name": "py-scp"
        },
        {
            "description": "screed: a Python library for loading FASTA and FASTQ sequences.",
            "name": "py-screed"
        },
        {
            "description": "SCS: splitting conic solver",
            "name": "py-scs"
        },
        {
            "description": "The SDMetrics library provides a set of dataset-agnostic tools for\nevaluating the quality of a synthetic database by comparing it to the\nreal database that it is modeled after.",
            "name": "py-sdmetrics"
        },
        {
            "description": "The Synthetic Data Vault (SDV) is a Synthetic Data Generation ecosystem\nof libraries that allows users to easily learn single-table, multi-table\nand timeseries datasets to later on generate new Synthetic Data that has\nthe same format and statistical properties as the original dataset.",
            "name": "py-sdv"
        },
        {
            "description": "Seaborn: statistical data visualization. Seaborn is a library for making\nattractive and informative statistical graphics in Python. It is built\non top of matplotlib and tightly integrated with the PyData stack,\nincluding support for numpy and pandas data structures and statistical\nroutines from scipy and statsmodels.",
            "name": "py-seaborn"
        },
        {
            "description": "Python bindings to FreeDesktop.org Secret Service API.",
            "name": "py-secretstorage"
        },
        {
            "description": "SeeK-path is a python module to obtain band paths in the Brillouin zone\nof crystal structures.",
            "name": "py-seekpath"
        },
        {
            "description": "Python library with Neural Networks for Image Segmentation based on\nPyTorch.",
            "name": "py-segmentation-models-pytorch"
        },
        {
            "description": "Python language bindings for Selenium WebDriver. The selenium package is\nused to automate web browser interaction from Python.",
            "name": "py-selenium"
        },
        {
            "description": "This small python library provides a few tools to handle SemVer in\nPython. It follows strictly the 2.0.0 version of the SemVer scheme.",
            "name": "py-semantic-version"
        },
        {
            "description": "A Python module for semantic versioning. Simplifies comparing versions.",
            "name": "py-semver"
        },
        {
            "description": "Python library to send files to Trash/Recycle on all platforms.",
            "name": "py-send2trash"
        },
        {
            "description": "Unsupervised text tokenizer for Neural Network-based text generation.\nThese are the Python bindings.",
            "name": "py-sentencepiece"
        },
        {
            "description": "The new Python SDK for Sentry.io",
            "name": "py-sentry-sdk"
        },
        {
            "description": "seqeval is a Python framework for sequence labeling evaluation. seqeval\ncan evaluate the performance of chunking tasks such as named-entity\nrecognition, part-of-speech tagging, semantic role labeling and so on.",
            "name": "py-seqeval"
        },
        {
            "description": "Pytorch modules and utilities for modeling biological sequence data.",
            "name": "py-sequence-models"
        },
        {
            "description": "This is a Python implementation of Seriation algorithm. Seriation is an\napproach for ordering elements in a set so that the sum of the\nsequential pairwise distances is minimal. We state this task as a\nTravelling Salesman Problem (TSP) and leverage the powerful Google's or-\ntools to do heavy-lifting. Since TSP is NP-hard, it is not possible to\ncalculate the precise solution for a big number of elements. However,\nthe or-tools' heuristics work very well in practice, and they are used\nin e.g. Google Maps.",
            "name": "py-seriate"
        },
        {
            "description": "Serialization based on ast.literal_eval",
            "name": "py-serpent"
        },
        {
            "description": "session_info outputs version information for modules loaded in the\ncurrent session, Python, and the OS.",
            "name": "py-session-info"
        },
        {
            "description": "The setproctitle module allows a process to change its title (as\ndisplayed by system tools such as ps and top).",
            "name": "py-setproctitle"
        },
        {
            "description": "Simplify your setup.py.",
            "name": "py-setupmeta"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Simplified packaging for pybind11-based C++ extensions",
            "name": "py-setuptools-cpp"
        },
        {
            "description": "Setuptools revision control system plugin for Git",
            "name": "py-setuptools-git"
        },
        {
            "description": "Use git repo data for building a version number according PEP-440",
            "name": "py-setuptools-git-versioning"
        },
        {
            "description": "Setuptools rust extension plugin.",
            "name": "py-setuptools-rust"
        },
        {
            "description": "The blessed package to manage your versions by scm tags.",
            "name": "py-setuptools-scm"
        },
        {
            "description": "This is a setuptools_scm plugin that adds support for git archives (for\nexample the ones GitHub automatically generates).",
            "name": "py-setuptools-scm-git-archive"
        },
        {
            "description": "SfePy (https://sfepy.org/) is a software for solving systems of coupled\npartial differential equations (PDEs) by the finite element method in\n1D, 2D and 3D. It can be viewed both as black-box PDE solver, and as a\nPython package which can be used for building custom applications.",
            "name": "py-sfepy"
        },
        {
            "description": "Track earth satellite TLE orbits using up-to-date 2010 version of SGP4",
            "name": "py-sgp4"
        },
        {
            "description": "Python subprocess interface",
            "name": "py-sh"
        },
        {
            "description": "SHAP (SHapley Additive exPlanations): a unified approach to explain the\noutput of any machine learning model.",
            "name": "py-shap"
        },
        {
            "description": "Manipulation and analysis of geometric objects in the Cartesian plane.",
            "name": "py-shapely"
        },
        {
            "description": "Shell escape a string to safely use it as a token in a shell command",
            "name": "py-shellescape"
        },
        {
            "description": "Tool to Detect Surrounding Shell",
            "name": "py-shellingham"
        },
        {
            "description": "Shiboken generates bindings for C++ libraries using CPython.",
            "name": "py-shiboken"
        },
        {
            "description": "Python / C++ bindings helper module.",
            "name": "py-shiboken2"
        },
        {
            "description": "Utilities for handling packages.",
            "name": "py-shippinglabel"
        },
        {
            "description": "ShortBRED is a system for profiling protein families of interest at very\nhigh specificity in shotgun meta'omic sequencing data.",
            "name": "py-shortbred"
        },
        {
            "description": "A generator library for concise, unambiguous and URL-safe UUIDs.",
            "name": "py-shortuuid"
        },
        {
            "description": "Create Fortran wrappers for a C++ library.",
            "name": "py-shroud"
        },
        {
            "description": "Automatically generate shell tab completion scripts for python CLI apps.",
            "name": "py-shtab"
        },
        {
            "description": "A Client of HIVdb Sierra GraphQL Webservice",
            "name": "py-sierrapy"
        },
        {
            "description": "simpervisor provides the SupervisedProcess class that provides async\nmethods start, ready, terminate, and kill to manage it.",
            "name": "py-simpervisor"
        },
        {
            "description": "A quick single file library for easily adding evaluatable expressions\ninto python projects.",
            "name": "py-simpleeval"
        },
        {
            "description": "Simple generic functions (similar to Python's own len(), pickle.dump(),\netc.)",
            "name": "py-simplegeneric"
        },
        {
            "description": "Simplejson is a simple, fast, extensible JSON encoder/decoder for Python",
            "name": "py-simplejson"
        },
        {
            "description": "simplekml is a python package which enables you to generate KML with as\nlittle effort as possible.",
            "name": "py-simplekml"
        },
        {
            "description": "Lightweight coordinate-only trajectory reader based on code from\nGROMACS, MDAnalysis and VMD.",
            "name": "py-simpletraj"
        },
        {
            "description": "SimPy is a process-based discrete-event simulation framework based on\nstandard Python.",
            "name": "py-simpy"
        },
        {
            "description": "Backport of functools.singledispatchmethod to Python 2.7-3.7.",
            "name": "py-singledispatchmethod"
        },
        {
            "description": "A Python bindings generator for C/C++ libraries.",
            "name": "py-sip"
        },
        {
            "description": "Python 2 and 3 compatibility utilities.",
            "name": "py-six"
        },
        {
            "description": "Convert scikit-learn models to ONNX",
            "name": "py-skl2onnx"
        },
        {
            "description": "This package provides Python bindings for the SLEPc package.",
            "name": "py-slepc4py"
        },
        {
            "description": "slicer wraps tensor-like objects and provides a uniform slicing\ninterface via __getitem__",
            "name": "py-slicer"
        },
        {
            "description": "A Python class for scheduling SLURM jobs",
            "name": "py-slurm-pipeline"
        },
        {
            "description": "SMAC is a tool for algorithm configuration to optimize the parameters of\narbitrary algorithms, including hyperparameter optimization of Machine\nLearning algorithms.",
            "name": "py-smac"
        },
        {
            "description": "smart_open is a Python 2 & Python 3 library for efficient streaming of\nvery large files from/to S3, HDFS, WebHDFS, HTTP, or local storage. It\nsupports transparent, on-the-fly (de-)compression for a variety of\ndifferent formats.",
            "name": "py-smart-open"
        },
        {
            "description": "A Python Interface for the SmartRedis Library Client",
            "name": "py-smartredis"
        },
        {
            "description": "A workflow library to easily integrate machine learning libraries with\nhigh performance computing simulations and applications",
            "name": "py-smartsim"
        },
        {
            "description": "smartypants is a Python fork of SmartyPants.",
            "name": "py-smartypants"
        },
        {
            "description": "A pure Python implementation of a sliding window memory map manager",
            "name": "py-smmap"
        },
        {
            "description": "Variants of the synthetic minority oversampling technique (SMOTE) for\nimbalanced learning",
            "name": "py-smote-variants"
        },
        {
            "description": "A Snakemake executor plugin for submitting jobs to Microsoft Azure\nBatch.",
            "name": "py-snakemake-executor-plugin-azure-batch"
        },
        {
            "description": "A Snakemake executor plugin for submitting jobs to a cluster.",
            "name": "py-snakemake-executor-plugin-cluster-generic"
        },
        {
            "description": "A Snakemake executor plugin for cluster jobs that are executed\nsynchronously.",
            "name": "py-snakemake-executor-plugin-cluster-sync"
        },
        {
            "description": "A snakemake executor plugin for submission of jobs via DRMAA.",
            "name": "py-snakemake-executor-plugin-drmaa"
        },
        {
            "description": "A Snakemake executor plugin for the Flux scheduler.",
            "name": "py-snakemake-executor-plugin-flux"
        },
        {
            "description": "A Snakemake executor plugin.",
            "name": "py-snakemake-executor-plugin-googlebatch"
        },
        {
            "description": "A Snakemake executor plugin for submission of jobs to Kubernetes.",
            "name": "py-snakemake-executor-plugin-kubernetes"
        },
        {
            "description": "A Snakemake executor plugin for submitting jobs to a SLURM cluster.",
            "name": "py-snakemake-executor-plugin-slurm"
        },
        {
            "description": "A Snakemake executor plugin for running srun jobs inside of SLURM jobs\n(meant for internal use by snakemake-executor-plugin-slurm).",
            "name": "py-snakemake-executor-plugin-slurm-jobstep"
        },
        {
            "description": "A Snakemake executor plugin for submitting jobs via GA4GH TES.",
            "name": "py-snakemake-executor-plugin-tes"
        },
        {
            "description": "Common functions and classes for Snakemake and its plugins.",
            "name": "py-snakemake-interface-common"
        },
        {
            "description": "This package provides a stable interface for interactions between\nSnakemake and its executor plugins.",
            "name": "py-snakemake-interface-executor-plugins"
        },
        {
            "description": "The interface for Snakemake report plugins.",
            "name": "py-snakemake-interface-report-plugins"
        },
        {
            "description": "This package provides a stable interface for interactions between\nSnakemake and its storage plugins.",
            "name": "py-snakemake-interface-storage-plugins"
        },
        {
            "description": "A Snakemake storage plugin to read and write from Azure Blob Storage.",
            "name": "py-snakemake-storage-plugin-azure"
        },
        {
            "description": "A Snakemake storage plugin that reads and writes from a locally mounted\nfilesystem using rsync.",
            "name": "py-snakemake-storage-plugin-fs"
        },
        {
            "description": "A Snakemake plugin for handling input and output via FTP.",
            "name": "py-snakemake-storage-plugin-ftp"
        },
        {
            "description": "A Snakemake storage plugin for Google Cloud Storage.",
            "name": "py-snakemake-storage-plugin-gcs"
        },
        {
            "description": "Snakemake storage plugin for downloading input files from HTTP(s).",
            "name": "py-snakemake-storage-plugin-http"
        },
        {
            "description": "A Snakemake storage plugin for S3 API storage (AWS S3, MinIO, etc.).",
            "name": "py-snakemake-storage-plugin-s3"
        },
        {
            "description": "A Snakemake storage plugin that handles files on an SFTP server.",
            "name": "py-snakemake-storage-plugin-sftp"
        },
        {
            "description": "A Snakemake storage plugin for reading from and writing to zenodo.org.",
            "name": "py-snakemake-storage-plugin-zenodo"
        },
        {
            "description": "A pure python implementation of the Snappy compression algorithm.",
            "name": "py-snappy"
        },
        {
            "description": "SNCosmo is a Python library for high-level supernova cosmology analysis.",
            "name": "py-sncosmo"
        },
        {
            "description": "This is a tiny package whose only purpose is to let you detect which\nasync library your code is running under.",
            "name": "py-sniffio"
        },
        {
            "description": "snoop is a powerful set of Python debugging tools. It's primarily meant\nto be a more featureful and refined version of PySnooper. It also\nincludes its own version of icecream and some other nifty stuff.",
            "name": "py-snoop"
        },
        {
            "description": "This package provides 29 stemmers for 28 languages generated from\nSnowball algorithms.",
            "name": "py-snowballstemmer"
        },
        {
            "description": "Snuggs are s-expressions for Numpy",
            "name": "py-snuggs"
        },
        {
            "description": "Sobol sequence implementation in python",
            "name": "py-sobol-seq"
        },
        {
            "description": "Python social authentication made simple.",
            "name": "py-social-auth-core"
        },
        {
            "description": "Small general purpose library for C and Python with focus on\nbioinformatics.",
            "name": "py-sonlib"
        },
        {
            "description": "Sorted Collections is an Apache2 licensed Python sorted collections\nlibrary.",
            "name": "py-sortedcollections"
        },
        {
            "description": "Sorted Containers is an Apache2 licensed sorted collections library,\nwritten in pure-Python, and fast as C-extensions.",
            "name": "py-sortedcontainers"
        },
        {
            "description": "SoundFile is an audio library based on libsndfile, CFFI and NumPy.",
            "name": "py-soundfile"
        },
        {
            "description": "A modern CSS selector implementation for Beautiful Soup.",
            "name": "py-soupsieve"
        },
        {
            "description": "This package is implementation of Improving spherical k-means for\ndocument clustering. Fast initialization, sparse centroid projection,\nand efficient cluster labeling (Kim et al., 2020).",
            "name": "py-soyclustering"
        },
        {
            "description": "spaCy is a library for advanced Natural Language Processing in Python\nand Cython.",
            "name": "py-spacy"
        },
        {
            "description": "Legacy registered functions for spaCy backwards compatibility",
            "name": "py-spacy-legacy"
        },
        {
            "description": "Logging utilities for SpaCy",
            "name": "py-spacy-loggers"
        },
        {
            "description": "English multi-task CNN trained on OntoNotes. Assigns context-specific\ntoken vectors, POS tags, dependency parse and named entities.",
            "name": "py-spacy-models-en-core-web-sm"
        },
        {
            "description": "1.2m 300d vectors trained on Common Crawl with GloVe",
            "name": "py-spacy-models-en-vectors-web-lg"
        },
        {
            "description": "This library provides multi-dimensional sparse arrays.",
            "name": "py-sparse"
        },
        {
            "description": "This package offers functionalities for user-friendly geo data\nprocessing using GDAL and OGR.",
            "name": "py-spatialist"
        },
        {
            "description": "Wrapper for standard Python module \"sqlite3\" which adds SpatiaLite\nsupport.",
            "name": "py-spatialite"
        },
        {
            "description": "Pandas extension arrays for spatial/geometric operations.",
            "name": "py-spatialpandas"
        },
        {
            "description": "The py-spdlog package provides a Python wrapper to the C++ spdlog\nlibrary.",
            "name": "py-spdlog"
        },
        {
            "description": "Color scales and color conversion made easy for Python.",
            "name": "py-spectra"
        },
        {
            "description": "Spectral Python (SPy) is a pure Python module for processing\nhyperspectral image data (imaging spectroscopy data). It has functions\nfor reading, displaying, manipulating, and classifying hyperspectral\nimagery. SPy is Free, Open Source Software (FOSS) distributed under the\nMIT License.",
            "name": "py-spectral"
        },
        {
            "description": "Library for performing speech recognition, with support for several\nengines and APIs, online and offline.",
            "name": "py-speech-recognition"
        },
        {
            "description": "Reader for SPE files part of pyspec a set of python routines for data\nanalysis of x-ray scattering experiments",
            "name": "py-spefile"
        },
        {
            "description": "SPGL1 is a solver for large-scale one-norm regularized least squares. It\nis designed to solve any of the following three problems: Basis pursuit\ndenoise (BPDN): minimize ||x||_1 subject to ||Ax - b||_2 <= sigma, Basis\npursuit (BP): minimize ||x||_1 subject to Ax = b Lasso: minimize ||Ax -\nb||_2 subject to ||x||_1 <= tau, The matrix A can be defined explicitly,\nor as an operator that returns both both Ax and A'b. SPGL1 can solve\nthese three problems in both the real and complex domains.",
            "name": "py-spgl1"
        },
        {
            "description": "Python bindings for C library for finding and handling crystal\nsymmetries.",
            "name": "py-spglib"
        },
        {
            "description": "Evaluate and transform D matrices, 3-j symbols, and (scalar or spin-\nweighted) spherical harmonics",
            "name": "py-spherical"
        },
        {
            "description": "Sphinx Documentation Generator.",
            "name": "py-sphinx"
        },
        {
            "description": "Sphinx extension to automatically document argparse-based commands.",
            "name": "py-sphinx-argparse"
        },
        {
            "description": "Type hints (PEP 484) support for the Sphinx autodoc extension",
            "name": "py-sphinx-autodoc-typehints"
        },
        {
            "description": "A modern skeleton for Sphinx themes.",
            "name": "py-sphinx-basic-ng"
        },
        {
            "description": "Lightweight Sphinx theme designed to mimic the look-and-feel of an\ninteractive book.",
            "name": "py-sphinx-book-theme"
        },
        {
            "description": "Sphinx Bootstrap Theme.",
            "name": "py-sphinx-bootstrap-theme"
        },
        {
            "description": "Sphinx plugin that allows you to automatically extract documentation\nfrom a Click-based application and include it in your docs",
            "name": "py-sphinx-click"
        },
        {
            "description": "A small sphinx extension to add a \"copy\" button to code blocks.",
            "name": "py-sphinx-copybutton"
        },
        {
            "description": "A sphinx extension for designing beautiful, screen-size responsive web\ncomponents.",
            "name": "py-sphinx-design"
        },
        {
            "description": "Fortran domain and autodoc extensions to Sphinx",
            "name": "py-sphinx-fortran"
        },
        {
            "description": "A `Sphinx` extension that builds an HTML version of any Python script\nand puts it into an examples gallery.",
            "name": "py-sphinx-gallery"
        },
        {
            "description": "An adaptation of the popular mkdocs-material theme for the Sphinx\ndocumentation tool.",
            "name": "py-sphinx-immaterial"
        },
        {
            "description": "Patches Jinja2 v3 to restore compatibility with earlier Sphinx versions.",
            "name": "py-sphinx-jinja2-compat"
        },
        {
            "description": "A Sphinx extension for building self-hosted versioned documentation.",
            "name": "py-sphinx-multiversion"
        },
        {
            "description": "Sphinx directive to add unselectable prompt.",
            "name": "py-sphinx-prompt"
        },
        {
            "description": "versionremoved and removed-in directives for Sphinx.",
            "name": "py-sphinx-removed-in"
        },
        {
            "description": "A Sphinx extension for adding a toggleable dark mode to the Read the\nDocs theme.",
            "name": "py-sphinx-rtd-dark-mode"
        },
        {
            "description": "ReadTheDocs.org theme for Sphinx.",
            "name": "py-sphinx-rtd-theme"
        },
        {
            "description": "Create tabbed content in Sphinx documentation when building HTML.",
            "name": "py-sphinx-tabs"
        },
        {
            "description": "A tool for authoring Sphinx themes with a simple (opinionated) workflow.",
            "name": "py-sphinx-theme-builder"
        },
        {
            "description": "Box of handy tools for Sphinx.",
            "name": "py-sphinx-toolbox"
        },
        {
            "description": "Provides Sphinx directives to autogenerate API documentation pages",
            "name": "py-sphinxautomodapi"
        },
        {
            "description": "sphinxcontrib-applehelp is a sphinx extension which outputs Apple help\nbooks.",
            "name": "py-sphinxcontrib-applehelp"
        },
        {
            "description": "A Sphinx extension for BibTeX style citations.",
            "name": "py-sphinxcontrib-bibtex"
        },
        {
            "description": "sphinxcontrib-devhelp is a sphinx extension which outputs Devhelp\ndocument.",
            "name": "py-sphinxcontrib-devhelp"
        },
        {
            "description": "sphinxcontrib-htmlhelp is a sphinx extension which outputs htmlhelp\ndocument.",
            "name": "py-sphinxcontrib-htmlhelp"
        },
        {
            "description": "Sphinx integration with different issuetrackers.",
            "name": "py-sphinxcontrib-issuetracker"
        },
        {
            "description": "A sphinx extension which ensure that jQuery is installed with Sphinx.",
            "name": "py-sphinxcontrib-jquery"
        },
        {
            "description": "A sphinx extension which renders display math in HTML via JavaScript.",
            "name": "py-sphinxcontrib-jsmath"
        },
        {
            "description": "This extension allows you to embed `Mermaid\n<http://knsv.github.io/mermaid/>`_ graphs in your documents, including\ngeneral flowcharts, sequence and gantt diagrams.",
            "name": "py-sphinxcontrib-mermaid"
        },
        {
            "description": "Sphinx Domain for Modern CMake.",
            "name": "py-sphinxcontrib-moderncmakedomain"
        },
        {
            "description": "Sphinx \"napoleon\" extension.",
            "name": "py-sphinxcontrib-napoleon"
        },
        {
            "description": "PlantUML for Sphinx.",
            "name": "py-sphinxcontrib-plantuml"
        },
        {
            "description": "A Sphinx extension to literally insert the output of arbitrary commands\ninto documents, helping you to keep your command examples up to date.",
            "name": "py-sphinxcontrib-programoutput"
        },
        {
            "description": "sphinxcontrib-qthelp is a sphinx extension which outputs QtHelp\ndocument.",
            "name": "py-sphinxcontrib-qthelp"
        },
        {
            "description": "sphinxcontrib-serializinghtml is a sphinx extension which outputs\n\"serialized\" HTML files (json and pickle).",
            "name": "py-sphinxcontrib-serializinghtml"
        },
        {
            "description": "A spelling checker for Sphinx-based documentation",
            "name": "py-sphinxcontrib-spelling"
        },
        {
            "description": "This sphinx extension helps you document Python code that uses\nasync/await, or abstract methods, or context managers, or generators, or\n... you get the idea.",
            "name": "py-sphinxcontrib-trio"
        },
        {
            "description": "sphinxcontrib-webuspport provides a Python API to easily integrate\nSphinx documentation into your Web application.",
            "name": "py-sphinxcontrib-websupport"
        },
        {
            "description": "An extension to use emoji codes in your Sphinx documentation!",
            "name": "py-sphinxemoji"
        },
        {
            "description": "Sphinx objects.inv Inspection/Manipulation Tool.",
            "name": "py-sphobjinv"
        },
        {
            "description": "Utilities for analyzing electrophysiological data",
            "name": "py-spykeutils"
        },
        {
            "description": "The Python API for working with Singularity containers.",
            "name": "py-spython"
        },
        {
            "description": "The Python SQL Toolkit and Object Relational Mapper",
            "name": "py-sqlalchemy"
        },
        {
            "description": "Database schema migration for SQLAlchemy",
            "name": "py-sqlalchemy-migrate"
        },
        {
            "description": "Mypy plugin and stubs for SQLAlchemy",
            "name": "py-sqlalchemy-stubs"
        },
        {
            "description": "Various utility functions and custom data types for SQLAlchemy.",
            "name": "py-sqlalchemy-utils"
        },
        {
            "description": "Persistent dict in Python, backed up by sqlite3 and pickle, multithread-\nsafe.",
            "name": "py-sqlitedict"
        },
        {
            "description": "A non-validating SQL parser module for Python.",
            "name": "py-sqlparse"
        },
        {
            "description": "srsly: Modern high-performance serialization utilities for Python.",
            "name": "py-srsly"
        },
        {
            "description": "This is a Python client library for iterating over http Server Sent\nEvent (SSE) streams",
            "name": "py-sseclient"
        },
        {
            "description": "Pure python SSH tunnels.",
            "name": "py-sshtunnel"
        },
        {
            "description": "SSPI API bindings for Python.",
            "name": "py-sspilib"
        },
        {
            "description": "Extract data from python stack frames and tracebacks for informative\ndisplays.",
            "name": "py-stack-data"
        },
        {
            "description": "The little ASGI library that shines.",
            "name": "py-starlette"
        },
        {
            "description": "Access context in Starlette",
            "name": "py-starlette-context"
        },
        {
            "description": "Advanced sessions for Starlette and FastAPI frameworks.",
            "name": "py-starsessions"
        },
        {
            "description": "Stashcp uses geo located nearby caches in order to copy from the OSG\nConnect's stash storage service to a job's workspace on a cluster.",
            "name": "py-stashcp"
        },
        {
            "description": "Python code for calculating non-parametric morphological diagnostics of\ngalaxy images.",
            "name": "py-statmorph"
        },
        {
            "description": "Statistical computations and models for use with SciPy",
            "name": "py-statsmodels"
        },
        {
            "description": "This package includes lists of all of the standard libraries for Python,\nalong with the code for scraping the official Python docs to get said\nlists.",
            "name": "py-stdlib-list"
        },
        {
            "description": "A parallel Python test runner built around subunit.",
            "name": "py-stestr"
        },
        {
            "description": "Manage Dynamic Plugins for Python Applications.",
            "name": "py-stevedore"
        },
        {
            "description": "Python client library for accessing messaging servers (such as ActiveMQ,\nArtemis or RabbitMQ) using the STOMP protocol (STOMP v1.0, STOMP v1.1\nand STOMP v1.2)",
            "name": "py-stomp-py"
        },
        {
            "description": "Raise asynchronous exceptions in other threads, control the timeout of\nblocks or callables with two context managers and two decorators.",
            "name": "py-stopit"
        },
        {
            "description": "Storm is an object-relational mapper (ORM) for Python",
            "name": "py-storm"
        },
        {
            "description": "Vectorized interpolators that are especially useful for Nd vertical\ninterpolation/stratification of atmospheric and oceanographic datasets.",
            "name": "py-stratify"
        },
        {
            "description": "Open source library for continuous-variable quantum computation",
            "name": "py-strawberryfields"
        },
        {
            "description": "The fastest way to build data apps in Python.",
            "name": "py-streamlit"
        },
        {
            "description": "A simple library to convert rtf to text",
            "name": "py-striprtf"
        },
        {
            "description": "This package contains utilities used to package some of STScI's Python\nprojects.",
            "name": "py-stsci-distutils"
        },
        {
            "description": "A Slurm dashboard for the terminal.",
            "name": "py-stui"
        },
        {
            "description": "Python toolbox for submitting jobs to Slurm.",
            "name": "py-submitit"
        },
        {
            "description": "Subrosa is a Python implementation of Shamir's Secret Sharing. An\nalgorithm for sharing a secret with a group of people without letting\nany individual of the group know the secret.",
            "name": "py-subrosa"
        },
        {
            "description": "This repository contains preprocessing scripts to segment text into\nsubword units.",
            "name": "py-subword-nmt"
        },
        {
            "description": "Missing widgets and components for PyQt/PySide",
            "name": "py-superqt"
        },
        {
            "description": "A system for controlling process state under UNIX",
            "name": "py-supervisor"
        },
        {
            "description": "svg.path is a collection of objects that implement the different path\ncommands in SVG, and a parser for SVG path definitions.",
            "name": "py-svgpath"
        },
        {
            "description": "A collection of tools for manipulating and analyzing SVG Path objects\nand Bezier curves.",
            "name": "py-svgpathtools"
        },
        {
            "description": "Python tools to create and manipulate SVG files.",
            "name": "py-svgutils"
        },
        {
            "description": "A Python library to create SVG drawings.",
            "name": "py-svgwrite"
        },
        {
            "description": "A Python library that validates Swagger Specs against the Swagger 1.2\nor Swagger 2.0 specification.",
            "name": "py-swagger-spec-validator"
        },
        {
            "description": "Python wrappers for SymEngine, a symbolic manipulation library.",
            "name": "py-symengine"
        },
        {
            "description": "Symbolic Fitting; fitting as it should be.",
            "name": "py-symfit"
        },
        {
            "description": "SymPy is a Python library for symbolic mathematics.",
            "name": "py-sympy"
        },
        {
            "description": "A python library to define the components of a synchrotron beamline and\ntheir positions. They can be read/write to json files. It is used by\nOASYS as a common tool to define sources and optical systems that are\nthen exported to the different add-ons.",
            "name": "py-syned"
        },
        {
            "description": "Python module that wraps system calls to rsync.",
            "name": "py-sysrsync"
        },
        {
            "description": "Python interface for libsystemd",
            "name": "py-systemd-python"
        },
        {
            "description": "PyTables is a package for managing hierarchical datasets and designed to\nefficiently and easily cope with extremely large amounts of data.",
            "name": "py-tables"
        },
        {
            "description": "Pretty-print tabular data",
            "name": "py-tabulate"
        },
        {
            "description": "TatSu (the successor to Grako) is a tool that takes grammars in a\nvariation of EBNF as input, and outputs memoizing (Packrat) PEG parsers\nin Python.",
            "name": "py-tatsu"
        },
        {
            "description": "Traceback fiddling library. Allows you to pickle tracebacks.",
            "name": "py-tblib"
        },
        {
            "description": "Load tensorboard event logs as pandas DataFrames.",
            "name": "py-tbparse"
        },
        {
            "description": "A very small text templating language",
            "name": "py-tempita"
        },
        {
            "description": "A python client to query TemplateFlow via pyBIDS.",
            "name": "py-templateflow"
        },
        {
            "description": "Objects and routines pertaining to date and time (tempora)",
            "name": "py-tempora"
        },
        {
            "description": "Retrying library for Python",
            "name": "py-tenacity"
        },
        {
            "description": "TensorBoard is a suite of web applications for inspecting and\nunderstanding your TensorFlow runs and graphs.",
            "name": "py-tensorboard"
        },
        {
            "description": "Fast data loading for TensorBoard",
            "name": "py-tensorboard-data-server"
        },
        {
            "description": "The What-If Tool makes it easy to efficiently and intuitively explore up\nto two models' performance on a dataset. Investigate model performances\nfor a range of features in your dataset, optimization strategies and\neven manipulations to individual datapoint values. All this and more, in\na visual way that requires minimal code.",
            "name": "py-tensorboard-plugin-wit"
        },
        {
            "description": "The purpose of this package is to let researchers use a simple interface\nto log events within PyTorch (and then show visualization in\ntensorboard). This package currently supports logging scalar, image,\naudio, histogram, text, embedding, and the route of back-propagation.",
            "name": "py-tensorboardx"
        },
        {
            "description": "TensorFlow is an open source machine learning framework for everyone.",
            "name": "py-tensorflow"
        },
        {
            "description": "tensorflow/datasets is a library of datasets ready to use with\nTensorFlow.",
            "name": "py-tensorflow-datasets"
        },
        {
            "description": "TensorFlow Estimator is a high-level API that encapsulates model\ntraining, evaluation, prediction, and exporting.",
            "name": "py-tensorflow-estimator"
        },
        {
            "description": "TensorFlow Hub is a library to foster the publication, discovery, and\nconsumption of reusable parts of machine learning models.",
            "name": "py-tensorflow-hub"
        },
        {
            "description": "Library and standards for schema and statistics. TensorFlow Metadata\nprovides standard representations for metadata that are useful when\ntraining machine learning models with TensorFlow.",
            "name": "py-tensorflow-metadata"
        },
        {
            "description": "TensorFlow Probability (TFP) is a Python library built on TensorFlow\nthat makes it easy to combine probabilistic models and deep learning on\nmodern hardware (TPU, GPU). It's for data scientists, statisticians, ML\nresearchers, and practitioners who want to encode domain knowledge to\nunderstand data and make predictions.",
            "name": "py-tensorflow-probability"
        },
        {
            "description": "TensorLy is a Python library that aims at making tensor learning simple\nand accessible. It allows to easily perform tensor decomposition, tensor\nlearning and tensor algebra. Its backend system allows to seamlessly\nperform computation with NumPy, PyTorch, JAX, MXNet, TensorFlow or CuPy,\nand run methods at scale on CPU or GPU.",
            "name": "py-tensorly"
        },
        {
            "description": "Read and write large, multi-dimensional arrays.",
            "name": "py-tensorstore"
        },
        {
            "description": "ANSII Color formatting for output in terminal.",
            "name": "py-termcolor"
        },
        {
            "description": "Command-line tool that draws basic graphs in the terminal, written in\nPython.",
            "name": "py-termgraph"
        },
        {
            "description": "Terminals served to term.js using Tornado websockets",
            "name": "py-terminado"
        },
        {
            "description": "Generate simple tables in terminals from a nested list of strings.",
            "name": "py-terminaltables"
        },
        {
            "description": "Tern is a software package inspection tool that can create a Software\nBill of Materials (SBoM) for containers.",
            "name": "py-tern"
        },
        {
            "description": "TEsorter is coded for LTR_retriever to classify long terminal repeat\nretrotransposons (LTR-RTs) at first. It can also be used to classify any\nother transposable elements (TEs), including Class I and Class II\nelements which are covered by the REXdb database.",
            "name": "py-tesorter"
        },
        {
            "description": "Testfixtures is a collection of helpers and mock objects that are useful\nwhen writing automated tests in Python.",
            "name": "py-testfixtures"
        },
        {
            "description": "With Testinfra you can write unit tests in Python to test actual state\nof your servers configured by management tools like Salt, Ansible,\nPuppet, Chef and so on.",
            "name": "py-testinfra"
        },
        {
            "description": "Testpath is a collection of utilities for Python code working with files\nand commands.",
            "name": "py-testpath"
        },
        {
            "description": "A repository of test results.",
            "name": "py-testrepository"
        },
        {
            "description": "Testresources, a pyunit extension for managing expensive test resources.",
            "name": "py-testresources"
        },
        {
            "description": "Testscenarios, a pyunit extension for dependency injection",
            "name": "py-testscenarios"
        },
        {
            "description": "Extensions to the Python standard library unit testing framework.",
            "name": "py-testtools"
        },
        {
            "description": "TEToolkit is a software package that utilizes both unambiguously\n(uniquely) and ambiguously (multi-) mapped reads to perform differential\nenrichment analyses from high throughput sequencing experiments.",
            "name": "py-tetoolkit"
        },
        {
            "description": "text-unidecode is the most basic port of the Text::Unidecode Perl\nlibrary.",
            "name": "py-text-unidecode"
        },
        {
            "description": "TextBlob is a Python (2 and 3) library for processing textual data. It\nprovides a simple API for diving into common natural language processing\n(NLP) tasks such as part-of-speech tagging, noun phrase extraction,\nsentiment analysis, classification, translation, and more.",
            "name": "py-textblob"
        },
        {
            "description": "Python module for creating simple ASCII tables.",
            "name": "py-texttable"
        },
        {
            "description": "Textual is a Rapid Application Development framework for Python.",
            "name": "py-textual"
        },
        {
            "description": "textwrap from Python 3.6 backport (plus a few tweaks).",
            "name": "py-textwrap3"
        },
        {
            "description": "Meta-language for DSL implementation inspired by Xtext.",
            "name": "py-textx"
        },
        {
            "description": "The TF-Keras library is a pure TensorFlow implementation of Keras, based\non the legacy tf.keras codebase. Note that the \"main\" version of Keras\nis now Keras 3 (formerly Keras Core), which is a multi-backend\nimplementation of Keras, supporting JAX, PyTorch, and TensorFlow. Keras\n3 is being developed at keras-team/keras.",
            "name": "py-tf-keras"
        },
        {
            "description": "Tensorflow plugin for DLPack.",
            "name": "py-tfdlpack"
        },
        {
            "description": "Optimizing compiler for evaluating mathematical expressions on CPUs and\nGPUs.",
            "name": "py-theano"
        },
        {
            "description": "A library for the calculation of hafnians, Hermite polynomials and\nGaussian boson sampling.",
            "name": "py-thewalrus"
        },
        {
            "description": "Thinc: Practical Machine Learning for NLP in Python.",
            "name": "py-thinc"
        },
        {
            "description": "A tool to count the FLOPs of PyTorch model.",
            "name": "py-thop"
        },
        {
            "description": "Python helpers to limit the number of threads used in the threadpool-\nbacked of common native libraries used for scientific computing and data\nscience (e.g. BLAS and OpenMP).",
            "name": "py-threadpoolctl"
        },
        {
            "description": "Zero dependency Python package for easy throttling with asyncio support.",
            "name": "py-throttler"
        },
        {
            "description": "A tiny package to compute the dynamics of stochastic and molecular\nsimulations.",
            "name": "py-tidynamics"
        },
        {
            "description": "Read and write image data from and to TIFF files.",
            "name": "py-tifffile"
        },
        {
            "description": "tiktoken is a fast BPE tokeniser for use with OpenAI's models.",
            "name": "py-tiktoken"
        },
        {
            "description": "PyTorch Image Models.",
            "name": "py-timm"
        },
        {
            "description": "Tinyarrays are similar to NumPy arrays, but optimized for small sizes.\nCommon operations on very small arrays are to 3-7 times faster than with\nNumPy (with NumPy 1.6 it used to be up to 35 times), and 3 times less\nmemory is used to store them. Tinyarrays are useful if you need many\nsmall arrays of numbers, and cannot combine them into a few large ones.",
            "name": "py-tinyarray"
        },
        {
            "description": "tinycss2 is a low-level CSS parser and generator written in Python: it\ncan parse strings, return objects representing tokens and blocks, and\ngenerate CSS strings corresponding to these objects.",
            "name": "py-tinycss2"
        },
        {
            "description": "TinyDB is a tiny, document oriented database optimized for your\nhappiness.",
            "name": "py-tinydb"
        },
        {
            "description": "Accurately separates a URL's subdomain, domain, and public suffix,\nusing the Public Suffix List (PSL). By default, this includes the public\nICANN TLDs and their exceptions. You can optionally support the Public\nSuffix List's private domains as well.",
            "name": "py-tldextract"
        },
        {
            "description": "A wrapper around the stdlib `tokenize` which roundtrips.",
            "name": "py-tokenize-rt"
        },
        {
            "description": "Fast and Customizable Tokenizers.",
            "name": "py-tokenizers"
        },
        {
            "description": "A Python library for parsing and creating TOML configuration files. For\nmore information on the TOML standard, see https://github.com/toml-\nlang/toml.git",
            "name": "py-toml"
        },
        {
            "description": "Tomli is a Python library for parsing TOML. Tomli is fully compatible\nwith TOML v1.0.0.",
            "name": "py-tomli"
        },
        {
            "description": "A lil' TOML writer.",
            "name": "py-tomli-w"
        },
        {
            "description": "Style preserving TOML library",
            "name": "py-tomlkit"
        },
        {
            "description": "TomoPy is an open-source Python package for tomographic data processing\nand image reconstruction.",
            "name": "py-tomopy"
        },
        {
            "description": "A set of utility functions for iterators, functions, and dictionaries",
            "name": "py-toolz"
        },
        {
            "description": "Python framework for doing ancestral sequence reconstruction.",
            "name": "py-topiary-asr"
        },
        {
            "description": "Implements a topological sort algorithm.",
            "name": "py-toposort"
        },
        {
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration.",
            "name": "py-torch"
        },
        {
            "description": "PyTorch Extension Library of Optimized Graph Cluster Algorithms.",
            "name": "py-torch-cluster"
        },
        {
            "description": "High-fidelity performance metrics for generative models in PyTorch",
            "name": "py-torch-fidelity"
        },
        {
            "description": "Graph Neural Network Library for PyTorch.",
            "name": "py-torch-geometric"
        },
        {
            "description": "A differentiable spherical harmonic transform for PyTorch.",
            "name": "py-torch-harmonics"
        },
        {
            "description": "A PyTorch Extension: Tools for easy mixed precision and distributed\ntraining in Pytorch",
            "name": "py-torch-nvidia-apex"
        },
        {
            "description": "PyTorch Extension Library of Optimized Scatter Operations.",
            "name": "py-torch-scatter"
        },
        {
            "description": "PyTorch Extension Library of Optimized Autograd Sparse Matrix\nOperations.",
            "name": "py-torch-sparse"
        },
        {
            "description": "Implementation of the Spline-Based Convolution Operator of SplineCNN in\nPyTorch.",
            "name": "py-torch-spline-conv"
        },
        {
            "description": "An audio package for PyTorch.",
            "name": "py-torchaudio"
        },
        {
            "description": "Composable data loading modules for PyTorch.",
            "name": "py-torchdata"
        },
        {
            "description": "ODE solvers and adjoint sensitivity analysis in PyTorch.",
            "name": "py-torchdiffeq"
        },
        {
            "description": "Mostly direct port of the torch7 Lua and C serialization implementation\nto Python, depending only on numpy (and the standard library: array and\nstruct). Sharing of objects including torch.Tensors is preserved.",
            "name": "py-torchfile"
        },
        {
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data.",
            "name": "py-torchgeo"
        },
        {
            "description": "A collection of extensions and data-loaders for few-shot learning &\nmeta-learning in PyTorch. Torchmeta contains popular meta-learning\nbenchmarks, fully compatible with both torchvision and PyTorch's\nDataLoader.",
            "name": "py-torchmeta"
        },
        {
            "description": "Machine learning metrics for distributed, scalable PyTorch applications.",
            "name": "py-torchmetrics"
        },
        {
            "description": "TorchSeg: Semantic Segmentation models for PyTorch.",
            "name": "py-torchseg"
        },
        {
            "description": "Keras has a neat API to view the visualization of the model which is\nvery helpful while debugging your network. Here is a barebone code to\ntry and mimic the same in PyTorch. The aim is to provide information\ncomplementary to, what is not provided by print(your_model) in PyTorch.",
            "name": "py-torchsummary"
        },
        {
            "description": "Text utilities, models, transforms, and datasets for PyTorch.",
            "name": "py-torchtext"
        },
        {
            "description": "Image and video datasets and models for torch deep learning.",
            "name": "py-torchvision"
        },
        {
            "description": "Tornado is a Python web framework and asynchronous networking library.",
            "name": "py-tornado"
        },
        {
            "description": "tox is a generic virtualenv management and test command line tool.",
            "name": "py-tox"
        },
        {
            "description": "A modern plotting toolkit supporting electronic publishing and\nreproducibility.",
            "name": "py-toyplot"
        },
        {
            "description": "A minimalist tree manipulation and plotting library for use inside\njupyter notebooks. Toytree combines a popular tree data structure based\non the ete3 library with modern plotting tools based on the toyplot\nplotting library.",
            "name": "py-toytree"
        },
        {
            "description": "A Python Automated Machine Learning tool that optimizes machine\nlearning pipelines using genetic programming.",
            "name": "py-tpot"
        },
        {
            "description": "A Fast, Extensible Progress Meter",
            "name": "py-tqdm"
        },
        {
            "description": "Backports of the traceback module",
            "name": "py-traceback2"
        },
        {
            "description": "Traitlets Python config system",
            "name": "py-traitlets"
        },
        {
            "description": "Observable typed attributes for Python classes.",
            "name": "py-traits"
        },
        {
            "description": "The TraitsUI project contains a toolkit-independent GUI abstraction\nlayer, which is used to support the \"visualization\" features of the\nTraits package. Thus, you can write model in terms of the Traits API and\nspecify a GUI in terms of the primitives supplied by TraitsUI (views,\nitems, editors, etc.), and let TraitsUI and your selected toolkit and\nback-end take care of the details of displaying them.",
            "name": "py-traitsui"
        },
        {
            "description": "Custom trait types for scientific computing.",
            "name": "py-traittypes"
        },
        {
            "description": "Trame lets you weave various components and technologies into a Web\nApplication solely written in Python.",
            "name": "py-trame"
        },
        {
            "description": "Internal client side implementation of trame",
            "name": "py-trame-client"
        },
        {
            "description": "Internal server side implementation of trame",
            "name": "py-trame-server"
        },
        {
            "description": "A library for accelerating Transformer models on NVIDIA GPUs, including\nfp8 precision on Hopper GPUs.",
            "name": "py-transformer-engine"
        },
        {
            "description": "State-of-the-art Natural Language Processing for TensorFlow 2.0 and\nPyTorch",
            "name": "py-transformers"
        },
        {
            "description": "Functions for 3D coordinate transformations.",
            "name": "py-transforms3d"
        },
        {
            "description": "Make your Python code fly at transonic speeds!",
            "name": "py-transonic"
        },
        {
            "description": "A package for creating and drawing trees.",
            "name": "py-tree"
        },
        {
            "description": "Mathematical operations for JAX pytrees.",
            "name": "py-tree-math"
        },
        {
            "description": "Python bindings to the tree-sitter library",
            "name": "py-tree-sitter"
        },
        {
            "description": "Python bindings to the C-grammar provided by tree-sitter",
            "name": "py-tree-sitter-c"
        },
        {
            "description": "Calculates a SHA256 (or, potentially, any other hashlib supported\nfunction) \"tree\" hash, as used by e.g. Amazon Glacier.",
            "name": "py-treehash"
        },
        {
            "description": "A Python implementation of tree structure.",
            "name": "py-treelib"
        },
        {
            "description": "Python bindings to the triangle library",
            "name": "py-triangle"
        },
        {
            "description": "Build efficient trie-based regular expressions from large word lists",
            "name": "py-trieregex"
        },
        {
            "description": "Import, export, process, analyze and view triangular meshes",
            "name": "py-trimesh"
        },
        {
            "description": "A language and compiler for custom Deep Learning operations.",
            "name": "py-triton"
        },
        {
            "description": "TrojanZoo Sphinx Theme",
            "name": "py-trojanzoo-sphinx-theme"
        },
        {
            "description": "The trove-classifiers pacakge is the canonical source for classifiers on\nPyPI. Classifiers categorize projects per PEP 301.",
            "name": "py-trove-classifiers"
        },
        {
            "description": "Experiments with new file format for tractography.",
            "name": "py-trx-python"
        },
        {
            "description": "TuiView is a lightweight raster GIS with powerful raster attribute table\nmanipulation abilities.",
            "name": "py-tuiview"
        },
        {
            "description": "A Python client for the tus resumable upload protocol -> http://tus.io",
            "name": "py-tuspy"
        },
        {
            "description": "python wsgi filter for tus protocol 1.0.0",
            "name": "py-tuswsgi"
        },
        {
            "description": "tweedledum is a library for synthesis, compilation, and optimization of\nquantum circuits. The library is written to be scalable up to problem\nsizes in which quantum circuits outperform classical ones. Also, it is\nmeant to be used both independently and alongside established tools.",
            "name": "py-tweedledum"
        },
        {
            "description": "Twine is a utility for publishing Python packages on PyPI.",
            "name": "py-twine"
        },
        {
            "description": "An asynchronous networking framework written in Python",
            "name": "py-twisted"
        },
        {
            "description": "A fork of Python 2 and 3 ast modules with type comment support.",
            "name": "py-typed-ast"
        },
        {
            "description": "Run-time type checker for Python.",
            "name": "py-typeguard"
        },
        {
            "description": "Typer, build great CLIs. Easy to code. Based on Python type hints.",
            "name": "py-typer"
        },
        {
            "description": "Typing stubs for dataclasses",
            "name": "py-types-dataclasses"
        },
        {
            "description": "Typing stubs for pkg_resources",
            "name": "py-types-pkg-resources"
        },
        {
            "description": "Typing stubs for psutil.",
            "name": "py-types-psutil"
        },
        {
            "description": "Typing stubs for python-dateutil.",
            "name": "py-types-python-dateutil"
        },
        {
            "description": "This is a PEP 561 type stub package for the pytz package. It can be used\nby type-checking tools like mypy, pyright, pytype, PyCharm, etc. to\ncheck code that uses pytz.",
            "name": "py-types-pytz"
        },
        {
            "description": "Typing stubs for requests.",
            "name": "py-types-requests"
        },
        {
            "description": "Typing stubs for setuptools.",
            "name": "py-types-setuptools"
        },
        {
            "description": "Typing stubs for typed-ast.",
            "name": "py-types-typed-ast"
        },
        {
            "description": "Typing stubs for urllib3.",
            "name": "py-types-urllib3"
        },
        {
            "description": "Python library for run-time type checking for type-annotated functions.",
            "name": "py-typesentry"
        },
        {
            "description": "A library for accessing stubs in typeshed.",
            "name": "py-typeshed-client"
        },
        {
            "description": "The typing_extensions module contains both backports of these changes as\nwell as experimental types that will eventually be added to the typing\nmodule, such as Protocol (see PEP 544 for details about protocols and\nstatic duck typing).",
            "name": "py-typing-extensions"
        },
        {
            "description": "Runtime inspection utilities for typing module.",
            "name": "py-typing-inspect"
        },
        {
            "description": "Python library for type checking",
            "name": "py-typish"
        },
        {
            "description": "Provider of IANA time zone data.",
            "name": "py-tzdata"
        },
        {
            "description": "tzinfo object for the local timezone.",
            "name": "py-tzlocal"
        },
        {
            "description": "Tools for work (erg) everywhere (ubique).",
            "name": "py-ubiquerg"
        },
        {
            "description": "Micro subset of unicode data files for linkify-it-py projects.",
            "name": "py-uc-micro-py"
        },
        {
            "description": "UCSF pyem is a collection of Python modules and command-line utilities\nfor electron microscopy of biological samples.",
            "name": "py-ucsf-pyem"
        },
        {
            "description": "UCX-Py is the Python interface for UCX, a low-level high-performance\nnetworking library. UCX and UCX-Py supports several transport methods\nincluding InfiniBand and NVLink while still using traditional networking\nprotocols like TCP.",
            "name": "py-ucx-py"
        },
        {
            "description": "Unified Histogram Interface: tools to help library authors work with\nhistograms",
            "name": "py-uhi"
        },
        {
            "description": "Ultra fast JSON decoder and encoder written in C with Python bindings.",
            "name": "py-ujson"
        },
        {
            "description": "Ultralytics YOLOv8, developed by Ultralytics, is a cutting-edge, state-\nof-the-art (SOTA) model that builds upon the success of previous YOLO\nversions and introduces new features and improvements to further boost\nperformance and flexibility. YOLOv8 is designed to be fast, accurate,\nand easy to use, making it an excellent choice for a wide range of\nobject detection, image segmentation and image classification tasks.",
            "name": "py-ultralytics"
        },
        {
            "description": "Date Api that support Hijri Umalqurra calendar.",
            "name": "py-umalqurra"
        },
        {
            "description": "Uniform Manifold Approximation and Projection (UMAP) is a dimension\nreduction technique that can be used for visualisation similarly to\nt-SNE, but also for general non-linear dimension reduction.",
            "name": "py-umap-learn"
        },
        {
            "description": "Tools for handling Unique Molecular Identifiers in NGS data sets",
            "name": "py-umi-tools"
        },
        {
            "description": "Transparent calculations with uncertainties on the quantities involved\n(aka error propagation); fast calculation of derivatives",
            "name": "py-uncertainties"
        },
        {
            "description": "Uncertainty Toolbox: a python toolbox for predictive uncertainty\nquantification, calibration, metrics, and visualization.",
            "name": "py-uncertainty-toolbox"
        },
        {
            "description": "N-dimensional unfold (im2col) and fold (col2im) in PyTorch.",
            "name": "py-unfoldnd"
        },
        {
            "description": "Unicycler is an assembly pipeline for bacterial genomes. It can assemble\nIllumina-only read sets where it functions as a SPAdes-optimiser. It can\nalso assembly long-read-only sets (PacBio or Nanopore) where it runs a\nminiasm+Racon pipeline. For the best possible assemblies, give it both\nIllumina reads and long reads, and it will conduct a hybrid assembly.",
            "name": "py-unicycler"
        },
        {
            "description": "ASCII transliterations of Unicode text",
            "name": "py-unidecode"
        },
        {
            "description": "unittest2 is a backport of the new features added to the unittest\ntesting framework in Python 2.7 and 3.2. This is a Python 3 compatible\nversion of unittest2.",
            "name": "py-unittest2py3k"
        },
        {
            "description": "Python extension for Linux kernel's unshare syscall.",
            "name": "py-unshare"
        },
        {
            "description": "A package for handling numpy arrays with units.",
            "name": "py-unyt"
        },
        {
            "description": "A python module that will check for package updates.",
            "name": "py-update-checker"
        },
        {
            "description": "ROOT I/O in pure Python and NumPy. Uproot is a reader and a writer of\nthe ROOT file format using only Python and Numpy. Unlike the standard\nC++ ROOT implementation, Uproot is only an I/O library, primarily\nintended to stream data into machine learning libraries in Python.\nUnlike PyROOT and root_numpy, Uproot does not depend on C++ ROOT.\nInstead, it uses Numpy to cast blocks of data from the ROOT file as\nNumpy arrays.",
            "name": "py-uproot"
        },
        {
            "description": "ROOT I/O in pure Python and Numpy. uproot is a reader and a writer of\nthe ROOT file format using only Python and Numpy. Unlike the standard\nC++ ROOT implementation, uproot is only an I/O library, primarily\nintended to stream data into machine learning libraries in Python.\nUnlike PyROOT and root_numpy, uproot does not depend on C++ ROOT.\nInstead, it uses Numpy to cast blocks of data from the ROOT file as\nNumpy arrays.",
            "name": "py-uproot3"
        },
        {
            "description": "Pythonic mix-ins for ROOT classes. This package is typically used as a\ndependency for uproot 3.x, to define methods on the classes that are\nautomatically generated from ROOT files. This includes histograms (TH*)\nand physics objects like TLorentzVectors. The reason it's a separate\nlibrary is so that we can add physics-specific functionality on a\nshorter timescale than we can update Uproot 3 itself, which is purely an\nI/O package.",
            "name": "py-uproot3-methods"
        },
        {
            "description": "RFC 6570 URI Template Processor.",
            "name": "py-uri-template"
        },
        {
            "description": "Simple python library to deal with URI Templates.",
            "name": "py-uritemplate"
        },
        {
            "description": "URL normalization for Python.",
            "name": "py-url-normalize"
        },
        {
            "description": "HTTP library with thread-safe connection pooling, file post, and more.",
            "name": "py-urllib3"
        },
        {
            "description": "Marker library to detect whether urllib3 was installed with the\ndeprecated [secure] extra",
            "name": "py-urllib3-secure-extra"
        },
        {
            "description": "A full-featured console UI library",
            "name": "py-urwid"
        },
        {
            "description": "US state meta information and other fun stuff.",
            "name": "py-us"
        },
        {
            "description": "Cross-platform tool for adding locations to the user PATH.",
            "name": "py-userpath"
        },
        {
            "description": "Client library for interfacing with USGS datasets",
            "name": "py-usgs"
        },
        {
            "description": "Useful, oft-repeated things for Python",
            "name": "py-utils"
        },
        {
            "description": "An extremely fast Python package and project manager, written in Rust.",
            "name": "py-uv"
        },
        {
            "description": "The lightning-fast ASGI server.",
            "name": "py-uvicorn"
        },
        {
            "description": "uvloop is a fast, drop-in replacement of the built-in asyncio event",
            "name": "py-uvloop"
        },
        {
            "description": "UVW is a small utility library to write VTK files from data contained\nin Numpy arrays.",
            "name": "py-uvw"
        },
        {
            "description": "Web Application framework for low overhead web services",
            "name": "py-uwsgi"
        },
        {
            "description": "Xarray extension for unstructured climate and global weather data\nanalysis and visualization",
            "name": "py-uxarray"
        },
        {
            "description": "Python Data Validation for Humans.",
            "name": "py-validators"
        },
        {
            "description": "Python library for reading, writing, and manipulating large-scale\nvasculature datasets",
            "name": "py-vascpy"
        },
        {
            "description": "VCF-kit is a command-line based collection of utilities for performing\nanalysis on Variant Call Format (VCF) files.",
            "name": "py-vcf-kit"
        },
        {
            "description": "Automatically mock your HTTP interactions to simplify and speed up\ntesting.",
            "name": "py-vcrpy"
        },
        {
            "description": "vcstool enables batch commands on multiple different vcs repositories.\nCurrently it supports git, hg, svn and bzr.",
            "name": "py-vcstool"
        },
        {
            "description": "VCS/SCM source control library for svn, git, hg, and bzr.",
            "name": "py-vcstools"
        },
        {
            "description": "Vcversioner: Take version numbers from version control.",
            "name": "py-vcversioner"
        },
        {
            "description": "Vector classes and utilities",
            "name": "py-vector"
        },
        {
            "description": "A vector quantization library originally transcribed from Deepmind's\ntensorflow implementation, made conveniently into a package. It uses\nexponential moving averages to update the dictionary.",
            "name": "py-vector-quantize-pytorch"
        },
        {
            "description": "Concurrently detect the minimum Python versions needed to run code.",
            "name": "py-vermin"
        },
        {
            "description": "Versioneer is a tool to automatically update version strings by asking\nyour version-control system about the current tree.",
            "name": "py-versioneer"
        },
        {
            "description": "Versioneer is a tool to automatically update version strings by asking\nyour version-control system about the current tree.",
            "name": "py-versioneer-518"
        },
        {
            "description": "verspec is a Python library for handling software versions and\nspecifiers, adapted from the packaging package.",
            "name": "py-verspec"
        },
        {
            "description": "Promises, promises, promises.",
            "name": "py-vine"
        },
        {
            "description": "virtualenv is a tool to create isolated Python environments.",
            "name": "py-virtualenv"
        },
        {
            "description": "A script for cloning a non-relocatable virtualenv.",
            "name": "py-virtualenv-clone"
        },
        {
            "description": "virtualenvwrapper is a set of extensions to Ian Bicking's virtualenv\ntool. The extensions include wrappers for creating and deleting virtual\nenvironments and otherwise managing your development workflow, making it\neasier to work on more than one project at a time without introducing\nconflicts in their dependencies.",
            "name": "py-virtualenvwrapper"
        },
        {
            "description": "Visdom aims to facilitate visualization of (remote) data with an\nemphasis on supporting scientific experimentation.",
            "name": "py-visdom"
        },
        {
            "description": "Convert Vega-Lite chart specifications to SVG, PNG, PDF, or Vega",
            "name": "py-vl-convert-python"
        },
        {
            "description": "Voluptous, despite the name, is a Python data validation library.",
            "name": "py-voluptuous"
        },
        {
            "description": "Common Python libraries tools created by HPC-UGent",
            "name": "py-vsc-base"
        },
        {
            "description": "Shared setuptools functions and classes for Python libraries developed\nby HPC-UGent.",
            "name": "py-vsc-install"
        },
        {
            "description": "Python wrapper around the VSTS APIs.",
            "name": "py-vsts"
        },
        {
            "description": "Python wrapper around some of the VSTS APIs.",
            "name": "py-vsts-cd-manager"
        },
        {
            "description": "A Wadler\u2013Lindig pretty-printer for Python",
            "name": "py-wadler-lindig"
        },
        {
            "description": "Waitress: a production-quality pure-Python WSGI server with very\nacceptable performance.",
            "name": "py-waitress"
        },
        {
            "description": "Microsoft Azure Linux Guest Agent.",
            "name": "py-walinuxagent"
        },
        {
            "description": "Wand is a ctypes-based simple ImageMagick binding for Python.",
            "name": "py-wand"
        },
        {
            "description": "A tool for visualizing and tracking your machine learning experiments.",
            "name": "py-wandb"
        },
        {
            "description": "Self-validating Python objects using JSON schema",
            "name": "py-warlock"
        },
        {
            "description": "wasabi: A lightweight console printing and formatting toolkit.",
            "name": "py-wasabi"
        },
        {
            "description": "Python library and shell utilities to monitor filesystem events.",
            "name": "py-watchdog"
        },
        {
            "description": "Simple, modern and high performance file watching and code reload in\npython.",
            "name": "py-watchfiles"
        },
        {
            "description": "WAVES (LANL code C23004) is a computational science and engineering\nworkflow tool that integrates parametric studies with traditional\nsoftware build systems.",
            "name": "py-waves"
        },
        {
            "description": "WCSAxes is a framework for making plots of Astronomical data in\nMatplotlib.",
            "name": "py-wcsaxes"
        },
        {
            "description": "Measures number of Terminal column cells of wide-character codes",
            "name": "py-wcwidth"
        },
        {
            "description": "Python library for parsing and validating HTTP request objects, with\nbuilt-in support for popular web frameworks, including Flask, Django,\nBottle, Tornado, Pyramid, Falcon, and aiohttp.",
            "name": "py-webargs"
        },
        {
            "description": "Working with color names and values formats defined by HTML and CSS.",
            "name": "py-webcolors"
        },
        {
            "description": "Python-based I/O for deep learning problems.",
            "name": "py-webdataset"
        },
        {
            "description": "This is a Python implementation of the WHATWG Encoding standard.",
            "name": "py-webencodings"
        },
        {
            "description": "a Webkit-based, headless web client",
            "name": "py-webkit-server"
        },
        {
            "description": "WebLogo is a web based application designed to make the generation of\nsequence logos as easy and painless as possible.",
            "name": "py-weblogo"
        },
        {
            "description": "WebOb provides objects for HTTP requests and responses.",
            "name": "py-webob"
        },
        {
            "description": "WebSocket client for Python. hybi13 is supported.",
            "name": "py-websocket-client"
        },
        {
            "description": "websockets is a library for building WebSocket servers and clients in\nPython with a focus on correctness and simplicity.",
            "name": "py-websockets"
        },
        {
            "description": "The Swiss Army knife of Python web development",
            "name": "py-werkzeug"
        },
        {
            "description": "color palettes from Wes Anderson films, based on Karthik Ram's R\nversion.",
            "name": "py-wesanderson"
        },
        {
            "description": "pure python download utility Download the file for your platform. If\nyou're not sure which to choose, learn more about installing packages.",
            "name": "py-wget"
        },
        {
            "description": "WhatsHap is a software for phasing genomic variants using DNA sequencing\nreads, also called read-based phasing or haplotype assembly.",
            "name": "py-whatshap"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "A simple Python wheel builder for simple projects.",
            "name": "py-whey"
        },
        {
            "description": "Extension to whey to support .pth files.",
            "name": "py-whey-pth"
        },
        {
            "description": "Cross-platform cross-python shutil.which functionality.",
            "name": "py-whichcraft"
        },
        {
            "description": "Fast, pure-Python full text indexing, search, and spell checking\nlibrary.",
            "name": "py-whoosh"
        },
        {
            "description": "IPython HTML widgets for Jupyter",
            "name": "py-widgetsnbextension"
        },
        {
            "description": "High performance storage and I/O for deep learning and data processing.",
            "name": "py-wids"
        },
        {
            "description": "Enable Unicode input and display when running Python from Windows\nconsole.",
            "name": "py-win-unicode-console"
        },
        {
            "description": "wincertstore provides an interface to access Windows' CA and CRL\ncertificates. It uses ctypes and Windows's sytem cert store API through\ncrypt32.dll.",
            "name": "py-wincertstore"
        },
        {
            "description": "This is a Python module to convert number words (eg. twenty one) to\nnumeric digits (21). It works for positive numbers upto the range of\n999,999,999,999 (i.e. billions).",
            "name": "py-word2number"
        },
        {
            "description": "A little word cloud generator in Python.",
            "name": "py-wordcloud"
        },
        {
            "description": "Workload Automation (WA) is a framework for executing workloads and\ncollecting measurements on Android and Linux devices.",
            "name": "py-workload-automation"
        },
        {
            "description": "wradlib is designed to assist you in the most important steps of\nprocessing weather radar data. These may include: reading common data\nformats, georeferencing, converting reflectivity to rainfall intensity,\nidentifying and correcting typical error sources (such as clutter or\nattenuation) and visualising the data.",
            "name": "py-wradlib"
        },
        {
            "description": "Module for decorators, wrappers and monkey patching.",
            "name": "py-wrapt"
        },
        {
            "description": "This repository contains a pure-Python implementation of a WebSocket\nprotocol stack. It's written from the ground up to be embeddable in\nwhatever program you choose to use, ensuring that you can communicate\nvia WebSockets, as defined in RFC6455, regardless of your programming\nparadigm.",
            "name": "py-wsproto"
        },
        {
            "description": "A tool for managing a workspace of multiple heterogenous SCM\nrepositories.",
            "name": "py-wstool"
        },
        {
            "description": "Bioinformatics tools and a software library developed by the Oxford\nNanopore Technologies Applications group.",
            "name": "py-wub"
        },
        {
            "description": "Capture C-level stdout/stderr pipes in Python via os.dup2.",
            "name": "py-wurlitzer"
        },
        {
            "description": "Wrappers for Python builtins with higher-level APIs.",
            "name": "py-ww"
        },
        {
            "description": "Common set of tools used in weather workflows. See\nhttps://wxflow.readthedocs.io/en/latest/ for documentation.",
            "name": "py-wxflow"
        },
        {
            "description": "wxPython plotting widgets using matplotlib.",
            "name": "py-wxmplot"
        },
        {
            "description": "Cross platform GUI toolkit for Python.",
            "name": "py-wxpython"
        },
        {
            "description": "A concise but complete implementation of CLIP with various experimental\nimprovements from recent papers",
            "name": "py-x-clip"
        },
        {
            "description": "Used for unpacking this author's obfuscated libraries",
            "name": "py-x21"
        },
        {
            "description": "The Xanadu Cloud Client (XCC) is a Python API and CLI for the Xanadu\nCloud.",
            "name": "py-xanadu-cloud-client"
        },
        {
            "description": "N-D labeled arrays and datasets in Python",
            "name": "py-xarray"
        },
        {
            "description": "Regridding utility for xarray",
            "name": "py-xarray-regrid"
        },
        {
            "description": "Xarray-TensorStore is a small library that allows opening Zarr arrays\ninto Xarray via TensorStore, instead of the standard Zarr-Python\nlibrary.",
            "name": "py-xarray-tensorstore"
        },
        {
            "description": "A python interface to access extended file attributes, sans libattr\ndependency.",
            "name": "py-xattr"
        },
        {
            "description": "xdot.py is an interactive viewer for graphs written in Graphviz's dot\nlanguage.",
            "name": "py-xdot"
        },
        {
            "description": "Helpers to work with the environment in a platform independent way.",
            "name": "py-xenv"
        },
        {
            "description": "Universal Regridder for Geospatial Data.",
            "name": "py-xesmf"
        },
        {
            "description": "XGBoost is an optimized distributed gradient boosting library designed\nto be highly efficient, flexible and portable.",
            "name": "py-xgboost"
        },
        {
            "description": "Fast, flexible, label-aware histograms for numpy and xarray.",
            "name": "py-xhistogram"
        },
        {
            "description": "Library for developers to extract data from Microsoft Excel (tm)\nspreadsheet files",
            "name": "py-xlrd"
        },
        {
            "description": "XlsxWriter is a Python module for writing files in the Excel 2007+ XLSX\nfile format.",
            "name": "py-xlsxwriter"
        },
        {
            "description": "Library to create spreadsheet files compatible with MS Excel\n97/2000/XP/2003 XLS files, on any platform, with Python 2.6, 2.7, 3.3+.",
            "name": "py-xlwt"
        },
        {
            "description": "XML as plain object module.",
            "name": "py-xmlplain"
        },
        {
            "description": "PyUnit-based test runner with JUnit like XML reporting.",
            "name": "py-xmlrunner"
        },
        {
            "description": "xmltodict is a Python module that makes working with XML feel like you\nare working with JSON.",
            "name": "py-xmltodict"
        },
        {
            "description": "Python-powered, cross-platform, Unix-gazing shell language and command\nprompt.",
            "name": "py-xonsh"
        },
        {
            "description": "This small Python module provides a xopen function that works like the\nbuilt-in open function, but can also deal with compressed files.\nSupported compression formats are gzip, bzip2 and xz. They are\nautomatically recognized by their file extensions .gz, .bz2 or .xz.",
            "name": "py-xopen"
        },
        {
            "description": "xpyb provides a Python binding to the X Window System protocol via\nlibxcb.",
            "name": "py-xpyb"
        },
        {
            "description": "XRootDPyFS is a PyFilesystem interface to XRootD.",
            "name": "py-xrootdpyfs"
        },
        {
            "description": "Metrics for verifying forecasts.",
            "name": "py-xskillscore"
        },
        {
            "description": "Python API for the extended tight binding program package",
            "name": "py-xtb"
        },
        {
            "description": "run headless display inside X virtual framebuffer (Xvfb)",
            "name": "py-xvfbwrapper"
        },
        {
            "description": "xxhash is a Python binding for the xxHash library by Yann Collet.",
            "name": "py-xxhash"
        },
        {
            "description": "xyzservices is a lightweight library providing a repository of available\nXYZ services offering raster basemap tiles.",
            "name": "py-xyzservices"
        },
        {
            "description": "A YAML configuration manager.",
            "name": "py-yacman"
        },
        {
            "description": "YACS was created as a lightweight library to define and manage system\nconfigurations, such as those commonly found in software designed for\nscientific experimentation.",
            "name": "py-yacs"
        },
        {
            "description": "YAHMM is a HMM package for Python, implemented in Cython for speed.",
            "name": "py-yahmm"
        },
        {
            "description": "Python bindings for the Yajl JSON encoder/decoder library.",
            "name": "py-yajl"
        },
        {
            "description": "Yamlreader merges YAML data from a directory, a list of files or a file\nglob.",
            "name": "py-yamlreader"
        },
        {
            "description": "Yet Another Python Formatter",
            "name": "py-yapf"
        },
        {
            "description": "The module provides handy URL class for URL parsing and changing.",
            "name": "py-yarl"
        },
        {
            "description": "Yet Another Terminal Spinner",
            "name": "py-yaspin"
        },
        {
            "description": "Yolk is a Python tool for obtaining information about installed Python\npackages and querying packages avilable on PyPI (Python Package Index).\nYolk3k is a fork of the original yolk. `yolk3k` add Python 3 support and\nadds additional features.",
            "name": "py-yolk3k"
        },
        {
            "description": "Python library to read and process pulsar data in several different\nformats",
            "name": "py-your"
        },
        {
            "description": "Command-line program to download videos from YouTube.com and other video\nsites.",
            "name": "py-youtube-dl"
        },
        {
            "description": "yq takes YAML input, converts it to JSON, and pipes it to jq",
            "name": "py-yq"
        },
        {
            "description": "Volumetric Data Analysis yt is a python package for analyzing and\nvisualizing volumetric, multi-resolution data from astrophysical\nsimulations, radio telescopes, and a burgeoning interdisciplinary\ncommunity.",
            "name": "py-yt"
        },
        {
            "description": "A YAML template engine with Python expressions.",
            "name": "py-yte"
        },
        {
            "description": "Ytopt package implements search using Random Forest (SuRF), an\nautotuning search method developed within Y-Tune ECP project.",
            "name": "py-ytopt"
        },
        {
            "description": "Common interface for autotuning search space and method definition.",
            "name": "py-ytopt-autotune"
        },
        {
            "description": "Z3 is a theorem prover from Microsoft Research. It is licensed under the\nMIT license.",
            "name": "py-z3-solver"
        },
        {
            "description": "Zarr is a Python package providing an implementation of chunked,\ncompressed, N-dimensional arrays.",
            "name": "py-zarr"
        },
        {
            "description": "System for managing development buildouts",
            "name": "py-zc-buildout"
        },
        {
            "description": "Basic inter-process locks",
            "name": "py-zc-lockfile"
        },
        {
            "description": "scalable pythonic model fitting for high energy physics",
            "name": "py-zfit"
        },
        {
            "description": "zfit model fitting interface for HEP",
            "name": "py-zfit-interface"
        },
        {
            "description": "Tools and models to extend zfit with physics specific content.",
            "name": "py-zfit-physics"
        },
        {
            "description": "Mutable mapping tools",
            "name": "py-zict"
        },
        {
            "description": "Extract Deflate64 ZIP archives with Python's zipfile API.",
            "name": "py-zipfile-deflate64"
        },
        {
            "description": "Backport of pathlib-compatible object wrapper for zip files.",
            "name": "py-zipp"
        },
        {
            "description": "Zipfile generator that takes input files as well as streams",
            "name": "py-zipstream-new"
        },
        {
            "description": "Very basic event publishing system.",
            "name": "py-zope-event"
        },
        {
            "description": "This package provides an implementation of \"object interfaces\" for\nPython. Interfaces are a mechanism for labeling objects as conforming to\na given API or contract. So, this package can be considered as\nimplementation of the Design By Contract methodology support in Python.",
            "name": "py-zope-interface"
        },
        {
            "description": "Python bindings to the Zstandard (zstd) compression library.",
            "name": "py-zstandard"
        },
        {
            "description": "A realistic password strength estimator. This is a Python implementation\nof the library created by the team at Dropbox.",
            "name": "py-zxcvbn"
        },
        {
            "description": "Parallel Global Multiobjective Optimizer (and its Python alter ego\nPyGMO) is a C++ / Python platform to perform parallel computations of\noptimisation tasks (global and local) via the asynchronous generalized\nisland model.",
            "name": "pygmo"
        },
        {
            "description": "The Pythia program is a standard tool for the generation of events in\nhigh-energy collisions, comprising a coherent set of physics models for\nthe evolution from a few-body hard process to a complex multiparticle\nfinal state.",
            "name": "pythia8"
        },
        {
            "description": "QScintilla is a port to Qt of Neil Hodgson's Scintilla C++ editor\ncontrol.",
            "name": "qscintilla"
        },
        {
            "description": "RDKit is a collection of cheminformatics and machine-learning software\nwritten in C++ and Python.",
            "name": "rdkit"
        },
        {
            "description": "REDItools: python scripts for RNA editing detection by RNA-Seq data.\nREDItools are simple python scripts conceived to facilitate the\ninvestigation of RNA editing at large-scale and devoted to research\ngroups that would to explore such phenomenon in own data but don't have\nsufficient bioinformatics skills. They work on main operating systems\n(although unix/linux-based OS are preferred), can handle reads from\nwhatever platform in the standard BAM format and implement a variety of\nfilters.",
            "name": "reditools"
        },
        {
            "description": "Redland Language Bindings for language APIs to Redland",
            "name": "redland-bindings"
        },
        {
            "description": "RePrimAnd: Recovery of Primitives And EOS framework RePrimAnd is a\nsupport library for numerical simulations of general relativistic\nmagnetohydrodynamics. It provides methods for recovering primitive\nvariables like pressure and velocity from the variables evolved in\nquasi-conservative formulations. Further, it provides a general\nframework for handling matter equations of state.",
            "name": "reprimand"
        },
        {
            "description": "Rivet - the particle-physics MC analysis toolkit",
            "name": "rivet"
        },
        {
            "description": "Radeon Open Compute (ROCm) Runtime rocminfo tool",
            "name": "rocminfo"
        },
        {
            "description": "Application Profiling, Tracing, and Analysis",
            "name": "rocprofiler-systems"
        },
        {
            "description": "SAGA is a GIS for Automated Geoscientific Analyses and has been\ndesigned for an easy and effective implementation of spatial algorithms.\nIt offers a comprehensive, growing set of geoscientific methods and\nprovides an easily approachable user interface with many visualisation\noptions",
            "name": "saga-gis"
        },
        {
            "description": "The SCINE database module is a database wrapper for a MongoDB encoding\nreaction networks.",
            "name": "scine-database"
        },
        {
            "description": "Chemoinformatics toolkit with support for inorganic molecules.",
            "name": "scine-molassembler"
        },
        {
            "description": "ReaDuct allows you to carry out structure optimizations, transition\nstate searches and intrinsic reaction coordinate (IRC) calculations\namong other things",
            "name": "scine-readuct"
        },
        {
            "description": "Wrapper around Serenity to make it compatible with Scine",
            "name": "scine-serenity"
        },
        {
            "description": "Sparrow: fast semiempirical quantum chemical calculations. When\npublishing results obtained with Sparrow, please cite the corresponding\nrelease as archived on Zenodo (DOI 10.5281/zenodo.3244105; please use\nthe DOI of the respective release). In addition, we kindly request you\nto cite the following article when using Sparrow: T. Husch, A. C.\nVaucher, M. Reiher, \"Semiempirical molecular orbital models based on the\nneglect of diatomic differential overlap approximation\", Int. J. Quantum\nChem., 2018, 118, e25799.",
            "name": "scine-sparrow"
        },
        {
            "description": "Contains functionality which is used in most SCINE modules.",
            "name": "scine-utilities"
        },
        {
            "description": "Wrapper around xtb to export it into the Scine tool chain.",
            "name": "scine-xtb"
        },
        {
            "description": "SCons is a software construction tool",
            "name": "scons"
        },
        {
            "description": "SENSEI is a platform for scalable in-situ analysis and visualization.\nIts design motto is \"Write once, run everywhere\", this means that once\nthe application is instrumented with SENSEI it can use existing and\nfuture analysis backends. Existing backends include: Paraview/Catalyst,\nVisit/Libsim, ADIOS, Python scripts, and so on.",
            "name": "sensei"
        },
        {
            "description": "SEPP stands for SATe-enabled phylogenetic placement",
            "name": "sepp"
        },
        {
            "description": "Subsystem focused quantum chemistry code Serenity",
            "name": "serenity"
        },
        {
            "description": "SGpp is a library and framework for sparse grids in different flavors.\nSGpp supports both hierarchical spatially-adaptive sparse grids and the\ndimensionally-adaptive sparse grid combination technique.",
            "name": "sgpp"
        },
        {
            "description": "The Shamrock exascale framework for astrophysics",
            "name": "shamrock"
        },
        {
            "description": "SICER2: a redesigned and improved ChIP-seq broad peak calling tool",
            "name": "sicer2"
        },
        {
            "description": "Simple reimplementation of the DFT-D3 dispersion correction",
            "name": "simple-dftd3"
        },
        {
            "description": "SimSiPM is a simple and easy to use C++ library providing a set of\nobject-oriented tools with all the functionality needed to describe and\nsimulate Silicon PhotonMultipliers (SiPM) sensors.",
            "name": "simsipm"
        },
        {
            "description": "SimulationIO: Efficient and convenient I/O for large PDE simulations",
            "name": "simulationio"
        },
        {
            "description": "Local filesystem registry for containers (intended for HPC) using Lmod\nor Environment Modules. Works for users and admins.",
            "name": "singularity-hpc"
        },
        {
            "description": "Domain specific library for electronic structure calculations",
            "name": "sirius"
        },
        {
            "description": "Workflow management system to create reproducible and scalable data\nanalyses.",
            "name": "snakemake"
        },
        {
            "description": "The SOLLVE Project aims at scaling OpenMP by leveraging LLVM for\nexascale performance and portability of applications. This package\nprovides a collection of Clang/LLVM compilers and an OpenMP runtime\nlibrary.",
            "name": "sollve"
        },
        {
            "description": "Sourmash: Quickly search, compare, and analyze genomic and metagenomic\ndata sets with k-mer sketches.",
            "name": "sourmash"
        },
        {
            "description": "The SpECTRE numerical relativity code. SpECTRE is an open-source code\nfor multi-scale, multi-physics problems in astrophysics and\ngravitational physics. In the future, we hope that it can be applied to\nproblems across discipline boundaries in fluid dynamics, geoscience,\nplasma physics, nuclear physics, and engineering. It runs at petascale\nand is designed for future exascale computers. SpECTRE is being\ndeveloped in support of our collaborative Simulating eXtreme Spacetimes\n(SXS) research program into the multi-messenger astrophysics of neutron\nstar mergers, core-collapse supernovae, and gamma-ray bursts.",
            "name": "spectre"
        },
        {
            "description": "Eclipse SUMO is an open source, highly portable, microscopic and\ncontinuous road traffic simulation package designed to handle large road\nnetworks. It allows for intermodal simulation including pedestrians and\ncomes with a large set of tools for scenario creation.",
            "name": "sumo"
        },
        {
            "description": "Survey is a high level performance tool product from Trenza, Inc. The\nsurvey collector/analytics framework is a new generation, high level,\nlightweight multiplatform Linux tool set that targets metric collection\nfor high level performance analysis of applications running on both\nsingle node and on large scale platforms, including the Cray platforms.\nThe collector is designed to work on sequential, MPI, OpenMP, and hybrid\ncodes and directly leverages several interfaces available for tools\ninside current MPI implementations including: MPICH, MVAPICH, MPT, and\nOpenMPI. It also supports multiple architectures and has been tested on\nmachines based on Intel, AMD, ARM, and IBM P8/9 processors and\nintegrated AMD and NVIDIA GPUs. Survey is a licensed product with the\nsource not openly available. To access the survey source and build with\nspack please contact: Trenza Inc. via: dmont@trenzasynergy.com or\njeg@trenzasynergy.com",
            "name": "survey"
        },
        {
            "description": "Error-bounded Lossy Compressor for HPC Data",
            "name": "sz"
        },
        {
            "description": "Talloc provides a hierarchical, reference counted memory pool system\nwith destructors. It is the core memory allocator used in Samba.",
            "name": "talloc"
        },
        {
            "description": "Tamaas is a C++ library with a Python interface that efficiently solves\ncontact mechanics problems with periodic rough surfaces, plasticity,\nadhesion and friction.",
            "name": "tamaas"
        },
        {
            "description": "The Toolkit for Adaptive Stochastic Modeling and Non-Intrusive\nApproximatioN is a robust library for high dimensional integration and\ninterpolation as well as parameter calibration.",
            "name": "tasmanian"
        },
        {
            "description": "Light-weight tight-binding framework",
            "name": "tblite"
        },
        {
            "description": "A package for quantifying transposable elements at a locus level for\nRNAseq datasets",
            "name": "telocal"
        },
        {
            "description": "TEtranscripts: Tools for estimating differential enrichment of\nTransposable Elements and other highly repetitive regions.",
            "name": "tetranscripts"
        },
        {
            "description": "The TFEL project is a collaborative development of CEA (French\nAlternative Energies and Atomic Energy Commission) and EDF (Electricite\nde France). It mostly contains the MFront code generator which\ntranslates a set of closely related domain specific languages into plain\nC++ on top of the TFEL libraries. MFront handles material properties,\nmechanical behaviours and simple point-wise models. Interfaces are\nprovided for several finite element solvers, such as: Abaqus/Standard,\nAbaqus/Explicit, Ansys APDL, Cast3M, Europlexus, Code_Aster, CalculiX\nand a few others. MFront comes with an handy easy-to-use tool called\nMTest that can test the local behaviour of a material, by imposing\nindependent constraints on each component of the strain or the stress.",
            "name": "tfel"
        },
        {
            "description": "Software framework for scalable cross-language services development.\nThrift combines a software stack with a code generation engine to build\nservices that work efficiently and seamlessly between C++, Java, Python,\nPHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, JavaScript, Node.js,\nSmalltalk, OCaml and Delphi and other languages.",
            "name": "thrift"
        },
        {
            "description": "Modular profiling toolkit and suite of libraries and tools for\nC/C++/Fortran/CUDA/Python",
            "name": "timemory"
        },
        {
            "description": "Tiramisu is a polyhedral compiler for dense and sparse deep learning and\ndata parallel algorithms.It provides a simple C++ API for expressing\nalgorithms and how these algorithms should be optimized by the compiler.",
            "name": "tiramisu"
        },
        {
            "description": "topaz: Pipeline for particle picking in cryo-electron microscopy images\nusing convolutional neural networks trained from positive and unlabeled\nexamples. Also featuring micrograph and tomogram denoising with DNNs.",
            "name": "topaz"
        },
        {
            "description": "The tskit library provides the underlying functionality used to load,\nexamine, and manipulate tree sequences",
            "name": "tskit"
        },
        {
            "description": "Tulip is an information visualization framework dedicated to the\nanalysis and visualization of relational data. Tulip aims to provide the\ndeveloper with a complete library, supporting the design of interactive\ninformation visualization applications for relational data that can be\ntailored to the problems he or she is addressing.",
            "name": "tulip"
        },
        {
            "description": "Sandia Uncertainty Quantification Toolkit. The UQ Toolkit (UQTk) is a\ncollection of libraries and tools for the quantification of uncertainty\nin numerical model predictions",
            "name": "uqtk"
        },
        {
            "description": "A floating-point error checker. Verrou helps you look for floating-point\nround-off errors in programs. It implements a stochastic floating-point\narithmetic based on random rounding: all floating-point operations are\nperturbed by randomly switching rounding modes. This can be seen as an\nasynchronous variant of the CESTAC method, or a subset of Monte Carlo\nArithmetic, performing only output randomization through random\nrounding.",
            "name": "verrou"
        },
        {
            "description": "VIGRA stands for \"Vision with Generic Algorithms\". It's an image\nprocessing and analysis library that puts its main emphasis on\ncustomizable algorithms and data structures",
            "name": "vigra"
        },
        {
            "description": "VisIt is an Open Source, interactive, scalable, visualization, animation\nand analysis tool.",
            "name": "visit"
        },
        {
            "description": "The Visualization Toolkit (VTK) is an open-source, freely available\nsoftware system for 3D computer graphics, image processing and\nvisualization.",
            "name": "vtk"
        },
        {
            "description": "WarpX is an advanced electromagnetic Particle-In-Cell code. It supports\nmany features including Perfectly-Matched Layers (PML) and mesh\nrefinement. In addition, WarpX is a highly-parallel and highly-optimized\ncode and features hybrid GPU/OpenMP/MPI parallelization and load\nbalancing capabilities.",
            "name": "warpx"
        },
        {
            "description": "xcb-proto provides the XML-XCB protocol descriptions that libxcb uses to\ngenerate the majority of its code and API.",
            "name": "xcb-proto"
        },
        {
            "description": "Exchange-Correlation functionals with arbitrary order derivatives.",
            "name": "xcfun"
        },
        {
            "description": "The XROOTD project aims at giving high performance, scalable fault\ntolerant access to data repositories of many kinds.",
            "name": "xrootd"
        },
        {
            "description": "Python bindings for the xtensor C++ multi-dimensional array library",
            "name": "xtensor-python"
        },
        {
            "description": "Xyce (rhymes with 'spice') is an open source, SPICE-compatible, high-\nperformance analog circuit simulator, Xyce supports the standard\nanalysis capabilities found in other SPICE-like codes, such as DC,\ntransient, AC, and small-signal noise analyses; it also has less common\ncapabilities, such as harmonic balance, sensitivity analysis, and\nuncertainty propagation techniques. Xyce supplies industry-standard\ncompact models and can support custom models via its Verilog-A model\ncompiler. Foundry process-development kits (PDKs) in other SPICE syntax\ncan be used via the XDM netlist translator, which is included as part of\nthe Xyce package. In addition to supporting use on all common desktop\nplatforms (Mac, Windows, Linux), Xyce can also be compiled to run in a\nlarge-scale parallel mode to provide scalable, numerically accurate\nanalog simulation of circuits containing millions of devices, or more.",
            "name": "xyce"
        },
        {
            "description": "YODA - Yet more Objects for Data Analysis",
            "name": "yoda"
        },
        {
            "description": "Z3 is a theorem prover from Microsoft Research. It is licensed under the\nMIT license.",
            "name": "z3"
        },
        {
            "description": "ZPP, the Z Pre-Processor. ZPP transforms bash in a pre-processor for F90\nsource files. It offers a set of functions specifically tailored to\nbuild clean Fortran90 interfaces by generating code for all types,\nkinds, and array ranks supported by a given compiler.",
            "name": "zpp"
        }
    ],
    "description": "A Spack managed Python virtual environment\n",
    "homepage": "https://docs.python.org/3/library/venv.html",
    "latest_version": "1.0",
    "maintainers": [
        "haampie"
    ],
    "name": "python-venv",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "generic",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "1.0"
        }
    ],
    "versions_deprecated": []
}