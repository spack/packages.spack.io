{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [],
    "description": "WI4MPI: Wrapper Interface For MPI performing a light translation between\nMPI constants and MPI objects from an MPI implementation to another one\n",
    "homepage": "https://github.com/cea-hpc/wi4mpi",
    "latest_version": "3.6.4",
    "maintainers": [
        "adrien-cotte",
        "marcjoos-cea"
    ],
    "name": "wi4mpi",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "The build type to build",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        }
    ],
    "versions": [
        {
            "name": "3.6.4",
            "sha256": "be1732a1aed1e2946873951a344b572f11f2a55cd06c634580a9398b5877e22a"
        },
        {
            "name": "3.6.3",
            "sha256": "c327babc892cc3c2bdddfacf3011e6fcb7e00a04e814de31f5e707cba3199c5c"
        },
        {
            "name": "3.6.2",
            "sha256": "4b784d27decfff9cbd29f072ba75bb0f6c471d6edc7f1037df1ab7ccbcceffba"
        },
        {
            "name": "3.6.1",
            "sha256": "14fbaf8c7ac0b7f350242a90e1be75e9f4bd0196a0d0e326b40be04ca58a2613"
        },
        {
            "name": "3.6.0",
            "sha256": "06f48bf506643edba51dd04bfdfbaa824363d28549f8eabf002b760ba516227b"
        },
        {
            "name": "3.5.0",
            "sha256": "36dd3dfed4f0f37bc817204d4810f049e624900b1b32641122f09a183135522f"
        },
        {
            "name": "3.4.1",
            "sha256": "92bf6738216426069bc07bff19cd7c933e33e397a941ff9f89a639380fab3737"
        },
        {
            "name": "3.3.0",
            "sha256": "fb7fb3b591144e90b3d688cf844c2246eb185f54e1da6baef857e035ef730d96"
        },
        {
            "name": "3.2.2",
            "sha256": "23ac69740577d66a68ddd5360670f0a344e3c47a5d146033c63a67e54e56c66f"
        },
        {
            "name": "3.2.1",
            "sha256": "0d928cb930b6cb1ae648eca241db59812ee0e5c041faf2f57728bbb6ee4e36df"
        },
        {
            "name": "3.2.0",
            "sha256": "3322f6823dbec1d58a1fcf163b2bcdd7b9cd75dc6c7f78865fc6cb0a91bf6f94"
        }
    ],
    "versions_deprecated": []
}