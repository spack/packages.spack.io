{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "Get stack trace EVERY time a program exits.",
            "name": "everytrace"
        },
        {
            "description": "FFTW is a C subroutine library for computing the discrete Fourier\ntransform (DFT) in one or more dimensions, of arbitrary input size, and\nof both real and complex data (as well as of even/odd data, i.e. the\ndiscrete cosine/sine transforms or DCT/DST). We believe that FFTW, which\nis free software, should become the FFT library of choice for most\napplications.",
            "name": "fftw"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU Scientific Library (GSL) is a numerical library for C and C++\nprogrammers. It is free software under the GNU General Public License.\nThe library provides a wide range of mathematical routines such as\nrandom number generators, special functions and least-squares fitting.\nThere are over 1000 functions in total with an extensive test suite.",
            "name": "gsl"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution.",
            "name": "netcdf-c"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "PETSc is a suite of data structures and routines for the scalable\n(parallel) solution of scientific applications modeled by partial\ndifferential equations.",
            "name": "petsc"
        },
        {
            "description": "PROJ is a generic coordinate transformation software, that transforms\ngeospatial coordinates from one coordinate reference system (CRS) to\nanother. This includes cartographic projections as well as geodetic\ntransformations.",
            "name": "proj"
        },
        {
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.",
            "name": "py-matplotlib"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        },
        {
            "description": "Automated units conversion",
            "name": "udunits"
        }
    ],
    "dependent_to": [],
    "description": "Parallel Ice Sheet Model\n",
    "homepage": "https://www.pism.io",
    "latest_version": "2.1.1",
    "maintainers": [
        "citibeth"
    ],
    "name": "pism",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.pism",
            "relative_path": "pism-petsc-3.18.diff",
            "reverse": false,
            "sha256": "b39cf857088503e1d607dd8945311d58a6fcb5f3433fbfbb7dc8bacb0c5dd4e0",
            "version": "@1.1.4 ^petsc@3.18:",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Build PISM documentation (requires LaTeX and Doxygen)",
            "name": "doc"
        },
        {
            "default": false,
            "description": "Report errors through Everytrace (requires Everytrace)",
            "name": "everytrace"
        },
        {
            "default": false,
            "description": "Install examples directory",
            "name": "examples"
        },
        {
            "default": false,
            "description": "Build extra executables (testing/verification)",
            "name": "extra"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "Build classes needed by IceBin",
            "name": "icebin"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Enables parallel HDF5 I/O.",
            "name": "parallel-hdf5"
        },
        {
            "default": false,
            "description": "Enables parallel NetCDF-3 I/O using PnetCDF.",
            "name": "parallel-netcdf3"
        },
        {
            "default": false,
            "description": "Enables parallel NetCDF-4 I/O.",
            "name": "parallel-netcdf4"
        },
        {
            "default": true,
            "description": "Use Proj to compute cell areas, longitudes, and latitudes.",
            "name": "proj"
        },
        {
            "default": false,
            "description": "Build python bindings",
            "name": "python"
        },
        {
            "default": true,
            "description": "Build shared Pism libraries",
            "name": "shared"
        }
    ],
    "versions": [
        {
            "branch": "dev",
            "name": "develop"
        },
        {
            "name": "2.1.1",
            "sha256": "be4ac3ac42abbcb4d23af5c35284e06333dff0797eb11fa9745a214033857ab0"
        },
        {
            "name": "2.0.7",
            "sha256": "cd1523fdccd5c261c68cfb1e84a044d014f2e892796b31c490109a5e56cc9edf"
        },
        {
            "name": "1.1.4",
            "sha256": "8ccb867af3b37e8d103351dadc1d7e77512e64379519fe8a2592668deb27bc44"
        },
        {
            "branch": "stable0.7",
            "name": "0.7.x"
        },
        {
            "branch": "efischer/dev",
            "name": "icebin"
        }
    ],
    "versions_deprecated": []
}