{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "Doxygen is the de facto standard tool for generating documentation from\nannotated C++ sources, but it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba,\nMicrosoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some\nextent D..",
            "name": "doxygen"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution.",
            "name": "netcdf-c"
        }
    ],
    "dependent_to": [
        {
            "description": "ABINIT is a package whose main program allows one to find the total\nenergy, charge density and electronic structure of systems made of\nelectrons and nuclei (molecules and periodic solids) within Density\nFunctional Theory (DFT), using pseudopotentials and a planewave or\nwavelet basis. ABINIT also includes options to optimize the geometry\naccording to the DFT forces and stresses, or to perform molecular\ndynamics simulations using these forces, or to generate dynamical\nmatrices, Born effective charges, and dielectric tensors, based on\nDensity-Functional Perturbation Theory, and many more properties.\nExcited states can be computed within the Many-Body Perturbation Theory\n(the GW approximation and the Bethe-Salpeter equation), and Time-\nDependent Density Functional Theory (for molecules). In addition to the\nmain ABINIT code, different utility programs are provided.",
            "name": "abinit"
        },
        {
            "description": "Amber is a suite of biomolecular simulation programs together with Amber\ntools. A manual download is required for Ambers. Spack will search your\ncurrent directory for the download files. Alternatively, add the files\nto a mirror so that Spack can find them. For instructions on how to set\nup a mirror, see https://spack.readthedocs.io/en/latest/mirrors.html\nNote: Only certain versions of ambertools are compatible with amber.\nOnly the latter version of ambertools for each amber version is\nsupported.",
            "name": "amber"
        },
        {
            "description": "AmberTools is a free, useful standalone package and a prerequisite for\ninstalling Amber itself. The AmberTools suite is free of charge, and its\ncomponents are mostly released under the GNU General Public License\n(GPL). A few components are included that are in the public domain or\nwhich have other, open-source, licenses. The libsander and libpbsa\nlibraries use the LGPL license.",
            "name": "ambertools"
        },
        {
            "description": "CPRNC is a netcdf file comparison tool used by CESM and other scientific\nprograms.",
            "name": "cprnc"
        },
        {
            "description": "The Community Radiative Transfer Model (CRTM) package. The CRTM is\ncomposed of four important modules for gaseous transmittance, surface\nemission and reflection, cloud and aerosol absorption and scattering,\nand a solver for a radiative transfer.",
            "name": "crtm"
        },
        {
            "description": "The SCORPIO (Software for Caching Output and Reads for Parallel I/O)\nlibrary is used by all the model components in DOE's Energy Exascale\nEarth System Model (E3SM) for reading input data and writing model\noutput",
            "name": "e3sm-scorpio"
        },
        {
            "description": "Elmer is an open source multiphysical simulation software. It includes\nphysical models of fluid dynamics, structural mechanics,\nelectromagnetics, heat transfer and acoustics.",
            "name": "elmerfem"
        },
        {
            "description": "The Earth System Modeling Framework (ESMF) is high-performance, flexible\nsoftware infrastructure for building and coupling weather, climate, and\nrelated Earth science applications. The ESMF defines an architecture for\ncomposing complex, coupled modeling systems and includes data structures\nand utilities for developing individual models. The National Unified\nOperational Prediction Capability (NUOPC) Layer defines a common model\narchitecture to support interoperable ESMF components. The NUOPC Layer\nis included with the ESMF package.",
            "name": "esmf"
        },
        {
            "description": "ETSF_IO is a library implementing the Nanoquanta/ETSF file format\nspecifications. ETSF_IO enables an architecture-independent exchange of\ncrystallographic data, electronic wavefunctions, densities and\npotentials, as well as spectroscopic data. It is meant to be used by\nquantum-physical and quantum-chemical applications relying upon Density\nFunctional Theory (DFT).",
            "name": "etsf-io"
        },
        {
            "description": "Ferret is an interactive computer visualization and analysis environment\ndesigned to meet the needs of oceanographers and meteorologists\nanalyzing large and complex gridded data sets.",
            "name": "ferret"
        },
        {
            "description": "GFDL's Flexible Modeling System (FMS) is a software environment that\nsupports the efficient development, construction, execution, and\nscientific interpretation of atmospheric, oceanic, and climate system\nmodels.",
            "name": "fms"
        },
        {
            "description": "GEOS-Chem High Performance model of atmospheric chemistry",
            "name": "gchp"
        },
        {
            "description": "GSI NetCDF Diagnostics Library and Utility Tools",
            "name": "gsi-ncdiag"
        },
        {
            "description": "GSIbec: Extracts the background error covariance (BEC) model\ncapabilities from the Gridpoint Statistical Interpolation (GSI)\natmospheric analysis system into a library of its own.",
            "name": "gsibec"
        },
        {
            "description": "ICON - is a modeling framework for weather, climate, and environmental\nprediction. It solves the full three-dimensional non-hydrostatic and\ncompressible Navier-Stokes equations on an icosahedral grid and allows\nseamless predictions from local to global scales.",
            "name": "icon"
        },
        {
            "description": "Models-3/EDSS Input/Output Applications Programming Interface.",
            "name": "ioapi"
        },
        {
            "description": "Meteorological Assimilation Data Ingest System (MADIS) is an\nobservational database and delivery system which integrates real-time\nobservations from a wide variety of observing infrastructures to make\nthem useable for numerical weather prediction models and nowcasting.",
            "name": "madis"
        },
        {
            "description": "MAPL is a foundation layer of the GEOS architecture, whose original\npurpose is to supplement the Earth System Modeling Framework (ESMF).\nMAPL fills in missing capabilities of ESMF, provides higher-level\ninterfaces for common boiler-plate logic, and enforces various\ncomponentization conventions across ESMF gridded components within GEOS.",
            "name": "mapl"
        },
        {
            "description": "MUSICA - The multi-scale interface for chemistry and aerosols MUSICA is\na software package which exposes a flexible API for including aerosol\nand gas-phase chemistry in many contexts across languages and platforms.\nIt is designed to be used in conjunction with other software packages,\nsuch as climate models, to provide a comprehensive framework for\nsimulating atmospheric chemistry processes.",
            "name": "musica"
        },
        {
            "description": "This is a library used by NCEP GSI system to read the GFS forecast files\nfor use in data assimilation. This is part of NOAA's NCEPLIBS project.",
            "name": "ncio"
        },
        {
            "description": "NetCDF95 is an alternative Fortran interface to the NetCDF library which\nuses Fortran 2003 features.",
            "name": "netcdf95"
        },
        {
            "description": "A real-space finite-difference (time-dependent) density-functional\ntheory code.",
            "name": "octopus"
        },
        {
            "description": "The Parallel IO libraries (PIO) are high-level parallel I/O C and\nFortran libraries for applications that need to do netCDF I/O from large\nnumbers of processors on a HPC system.",
            "name": "parallelio"
        },
        {
            "description": "RegCM, ICTP Regional Climate Model (https://ictp.it).",
            "name": "regcm"
        },
        {
            "description": "ROMS is a free-surface, terrain-following, primitive equations ocean\nmodel widely used by the scientific community for a diverse range of\napplications",
            "name": "roms"
        },
        {
            "description": "SCALE (Scalable Computing for Advanced Library and Environment) is a\nbasic library for weather and climate model of the earth and planets\naimed to be widely used in various models. The SCALE library is\ndeveloped with co-design by researchers of computational science and\ncomputer science.",
            "name": "scale"
        },
        {
            "description": "SIESTA performs electronic structure calculations and ab initio\nmolecular dynamics simulations of molecules and solids.",
            "name": "siesta"
        },
        {
            "description": "SWAN is a third-generation wave model, developed at Delft University of\nTechnology, that computes random, short-crested wind-generated waves in\ncoastal regions and inland waters. For more information about SWAN, see\na short overview of model features. This list reflects on the scientific\nrelevance of the development of SWAN.",
            "name": "swan"
        },
        {
            "description": "The UFS Utilities package contains programs set up the model grid and\ncreate coldstart initial conditions. This is related to NOAA's NCEPLIBS\nproject.",
            "name": "ufs-utils"
        },
        {
            "description": "The Unified Forecast System (UFS) Weather Model (WM) is a prognostic\nmodel that can be used for short- and medium-range research and\noperational forecasts, as exemplified by its use in the operational\nGlobal Forecast System (GFS) of the National Oceanic and Atmospheric\nAdministration (NOAA).",
            "name": "ufs-weather-model"
        },
        {
            "description": "The Unified Post Processor (UPP) software package is a software package\ndesigned to generate useful products from raw model output.",
            "name": "upp"
        },
        {
            "description": "This library contains Fortran 90 decoder/encoder routines for GRIB\nedition 1 with EMC changes. This is part of the NCEPLIBS project.",
            "name": "w3emc"
        },
        {
            "description": "The Weather Research and Forecasting Pre-Processing System (WPS)",
            "name": "wps"
        },
        {
            "description": "The Weather Research and Forecasting (WRF) Model is a next-generation\nmesoscale numerical weather prediction system designed for both\natmospheric research and operational forecasting applications.",
            "name": "wrf"
        },
        {
            "description": "The WRFIO package is a lightweight WRF-IO API library for Unified Post\nProcessor (UPP). It reads wrf forecasts (WRF state plus diagnostics).\nThis is part of the NCEPLIBS project.",
            "name": "wrf-io"
        },
        {
            "description": "XML-IO-SERVER library for IO management of climate models.",
            "name": "xios"
        },
        {
            "description": "Yambo is a FORTRAN/C code for Many-Body calculations in solid state and\nmolecular physics. Yambo relies on the Kohn-Sham wavefunctions generated\nby two DFT public codes: abinit, and PWscf. The code was originally\ndeveloped in the Condensed Matter Theoretical Group of the Physics\nDepartment at the University of Rome \"Tor Vergata\" by Andrea Marini.\nPrevious to its release under the GPL license, yambo was known as SELF.",
            "name": "yambo"
        }
    ],
    "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the Fortran\ndistribution.\n",
    "homepage": "https://www.unidata.ucar.edu/software/netcdf",
    "latest_version": "4.6.1",
    "maintainers": [
        "WardF",
        "skosukhin"
    ],
    "name": "netcdf-fortran",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.netcdf-fortran",
            "relative_path": "nag_testing.patch",
            "reverse": false,
            "sha256": "c4d10d5e4454a80efc9cab2dbc25efd781b2ee878abf2a30f4e52124ab8cd0ce",
            "version": "@4.4.5 %nag",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.netcdf-fortran",
            "relative_path": "logging.patch",
            "reverse": false,
            "sha256": "ef26f0860c0d258af7ba28780a981545a8a1c053dbdabe2d656d6e40ce1c7c06",
            "version": "@:4.4.5",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.netcdf-fortran",
            "relative_path": "excessive_linking.patch",
            "reverse": false,
            "sha256": "55fef65a4652fc5b8114db25bc558c762d9d4d287377a7db0ea2a2937d625e44",
            "version": "@4.4.5",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.netcdf-fortran",
            "relative_path": "no_parallel_build.patch",
            "reverse": false,
            "sha256": "b050dbd8d832d13c8c7f69c903251fb6ce567abbfae75c6347e066585d032a7e",
            "version": "@4.5.2",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable building docs",
            "name": "doc"
        },
        {
            "default": true,
            "description": "Produce position-independent code (for shared libs)",
            "name": "pic"
        },
        {
            "default": true,
            "description": "Enable shared library",
            "name": "shared"
        }
    ],
    "versions": [
        {
            "name": "4.6.1",
            "sha256": "b50b0c72b8b16b140201a020936aa8aeda5c79cf265c55160986cd637807a37a"
        },
        {
            "name": "4.6.0",
            "sha256": "198bff6534cc85a121adc9e12f1c4bc53406c403bda331775a1291509e7b2f23"
        },
        {
            "name": "4.5.4",
            "sha256": "0a19b26a2b6e29fab5d29d7d7e08c24e87712d09a5cafeea90e16e0a2ab86b81"
        },
        {
            "name": "4.5.3",
            "sha256": "123a5c6184336891e62cf2936b9f2d1c54e8dee299cfd9d2c1a1eb05dd668a74"
        },
        {
            "name": "4.5.2",
            "sha256": "b959937d7d9045184e9d2040a915d94a7f4d0185f4a9dceb8f08c94b0c3304aa"
        },
        {
            "name": "4.4.5",
            "sha256": "2467536ce29daea348c736476aa8e684c075d2f6cab12f3361885cb6905717b8"
        },
        {
            "name": "4.4.4",
            "sha256": "b2d395175f8d283e68c8be516e231a96b191ade67ad0caafaf7fa01b1e6b5d75"
        },
        {
            "name": "4.4.3",
            "sha256": "330373aa163d5931e475b5e83da5c1ad041e855185f24e6a8b85d73b48d6cda9"
        }
    ],
    "versions_deprecated": []
}