{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [
        {
            "description": "Wind turbine simulation package from NREL",
            "name": "openfast"
        }
    ],
    "description": " ROSCO controls package for OpenFAST from NREL Note: this only builds\nROSCO controls library for inclusion with OpenFAST If the toolbox or\ntuning scripts are needed, please build manually\n",
    "homepage": "https://rosco.readthedocs.io/en/latest/",
    "latest_version": "2.9.0",
    "maintainers": [
        "dzalkind",
        "ndevelder"
    ],
    "name": "rosco",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.rosco",
            "relative_path": "intel-oneapi-2x.patch",
            "reverse": false,
            "sha256": "9eae09dfebc44ef45d00f064632b86d0aef744a8a86ecaf26a743f93286697c1",
            "version": "@2.5:2.8 %oneapi",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.rosco",
            "relative_path": "intel-oneapi-29.patch",
            "reverse": false,
            "sha256": "a724fac5223b74d95eb1b928d2c573f93d41b754cb807b6e01ca02d9f258db55",
            "version": "@2.9.0:2.9.1 %oneapi",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Position independent code",
            "name": "pic"
        },
        {
            "default": false,
            "description": "Build shared libraries",
            "name": "shared"
        }
    ],
    "versions": [
        {
            "branch": "develop",
            "name": "develop"
        },
        {
            "branch": "main",
            "name": "main"
        },
        {
            "name": "2.9.0",
            "sha256": "eb7f6220207b8a07c9570fb64bab591906b0c19d73ac4c24bb8dca252722ca79"
        },
        {
            "name": "2.8.0",
            "sha256": "7a2e3a7bebdf6ee73884a9e3502f904cc3a3f1aa1bf672c223ecbaa041bfc48f"
        },
        {
            "name": "2.7.0",
            "sha256": "b6a2cda92680cf6a460d194901a2f16c2635710a82788576a6383a3bb189fc83"
        },
        {
            "name": "2.6.0",
            "sha256": "ca1c1a6ac53e8220b107accccfb8b5299772c38b7c77cd8d2ba383e9825daeaa"
        },
        {
            "name": "2.5.1",
            "sha256": "55fe7bba612321baa6e089ee1156ef4db2e3bccf1b69534829b06f3367fff05d"
        }
    ],
    "versions_deprecated": []
}