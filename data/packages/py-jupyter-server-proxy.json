{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Supports both client and server side of HTTP protocol. Supports both\nclient and server Web-Sockets out-of-the-box and avoids Callbacks.\nProvides Web-server with middlewares and plugable routing.",
            "name": "py-aiohttp"
        },
        {
            "description": "Jupyter Packaging Utilities.",
            "name": "py-jupyter-packaging"
        },
        {
            "description": "The Jupyter Server provides the backend (i.e. the core services, APIs,\nand REST endpoints) for Jupyter web applications like Jupyter notebook,\nJupyterLab, and Voila.",
            "name": "py-jupyter-server"
        },
        {
            "description": "JupyterLab is the next-generation web-based user interface for Project\nJupyter.",
            "name": "py-jupyterlab"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "simpervisor provides the SupervisedProcess class that provides async\nmethods start, ready, terminate, and kill to manage it.",
            "name": "py-simpervisor"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [],
    "description": " Jupyter Server Proxy lets you run arbitrary external processes (such as\nRStudio, Shiny Server, Syncthing, PostgreSQL, Code Server, etc)\nalongside your notebook server and provide authenticated web access to\nthem using a path like /rstudio next to others like /lab.\n",
    "homepage": "https://github.com/jupyterhub/jupyter-server-proxy",
    "latest_version": "3.2.2",
    "maintainers": [],
    "name": "py-jupyter-server-proxy",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "3.2.2",
            "sha256": "54690ea9467035d187c930c599e76065017baf16e118e6eebae0d3a008c4d946"
        }
    ],
    "versions_deprecated": []
}