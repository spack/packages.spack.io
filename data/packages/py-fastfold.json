{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "A high performance toolkit for molecular simulation. Use it as a\nlibrary, or as an application. We include extensive language bindings\nfor Python, C, C++, and even Fortran. The code is open source and\nactively maintained on Github, licensed under MIT and LGPL. Part of the\nOmnia suite of tools for predictive biomolecular simulation.",
            "name": "openmm"
        },
        {
            "description": "A distributed collaborative effort to develop Python libraries and\napplications which address the needs of current and future work in\nbioinformatics.",
            "name": "py-biopython"
        },
        {
            "description": "An integrated large-scale model training system with efficient\nparallelization techniques.",
            "name": "py-colossalai"
        },
        {
            "description": "tree is a library for working with nested data structures. In a way,\ntree generalizes the builtin map() function which only supports flat\nsequences, and allows to apply a function to each leaf preserving the\noverall structure.",
            "name": "py-dm-tree"
        },
        {
            "description": "Flexible and powerful tensor operations for readable and reliable code.\nSupports numpy, pytorch, tensorflow, and others.",
            "name": "py-einops"
        },
        {
            "description": "ML Collections is a library of Python collections designed for ML\nusecases.",
            "name": "py-ml-collections"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage.",
            "name": "py-pandas"
        },
        {
            "description": "PDBFixer is an easy to use application for fixing problems in Protein\nData Bank files in preparation for simulating them.",
            "name": "py-pdbfixer"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers.",
            "name": "py-pytorch-lightning"
        },
        {
            "description": "Ray provides a simple, universal API for building distributed\napplications.",
            "name": "py-ray"
        },
        {
            "description": "Python HTTP for Humans.",
            "name": "py-requests"
        },
        {
            "description": "Fundamental algorithms for scientific computing in Python.",
            "name": "py-scipy"
        },
        {
            "description": "The setproctitle module allows a process to change its title (as\ndisplayed by system tools such as ps and top).",
            "name": "py-setproctitle"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration.",
            "name": "py-torch"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [],
    "description": "Optimizing Protein Structure Prediction Model Training and Inference on\nGPU Clusters.\n",
    "homepage": "https://github.com/hpcaitech/FastFold",
    "latest_version": "0.2.0",
    "maintainers": [
        "meyersbs"
    ],
    "name": "py-fastfold",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.2.0",
            "sha256": "6760dbae9809b8b26219c9477489d34325807be504098901d0375fbdc3103f88"
        }
    ],
    "versions_deprecated": []
}