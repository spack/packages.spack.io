{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": null,
            "name": "+current_processing",
            "spec": "@2.0.0:"
        },
        {
            "description": null,
            "name": "+manycore",
            "spec": "@2.0.0:"
        },
        {
            "description": null,
            "name": "+eigenexa",
            "spec": "@:1.9.9"
        },
        {
            "description": null,
            "name": "+scalapack",
            "spec": "~mpi"
        },
        {
            "description": null,
            "name": "+eigenexa",
            "spec": "~scalapack"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "EigenExa is a high-performance eigenvalue solver.",
            "name": "eigenexa"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "Libxc is a library of exchange-correlation functionals for density-\nfunctional theory.",
            "name": "libxc"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "NVPL ScaLAPACK (NVIDIA Performance Libraries ScaLAPACK).",
            "name": "scalapack"
        }
    ],
    "dependent_to": [],
    "description": "SALMON is an open-source computer program for ab-initio quantum-\nmechanical calculations of electron dynamics at the nanoscale that takes\nplace in various situations of light-matter interactions. It is based on\ntime-dependent density functional theory, solving time-dependent Kohn-\nSham equation in real time and real space with norm-conserving\npseudopotentials.\n",
    "homepage": "https://salmon-tddft.jp",
    "latest_version": "2.0.0",
    "maintainers": [],
    "name": "salmon-tddft",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.salmon-tddft",
            "relative_path": "fjmpi.patch",
            "reverse": false,
            "sha256": "929b2627072089cff5f5b173f3484b3159c3d77f4b7d8fd4561899e1edb81f83",
            "version": "@2.0.0: %fj",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.salmon-tddft",
            "relative_path": "v2.0.libxc-5.0.patch",
            "reverse": false,
            "sha256": "069e935c80378969048b6657d480e35d0ab7d6ec67dc71f476d2b3767306f59b",
            "version": "@2.0.0+libxc",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.salmon-tddft",
            "relative_path": "cmakefix.patch",
            "reverse": false,
            "sha256": "f1bbda0b41129321fc8f4649c5519366206579be4ca9f1a51d6e9490e0ee3c65",
            "version": "+scalapack",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "Enable preprocessing of the current computation in RT",
            "name": "current_processing"
        },
        {
            "default": false,
            "description": "Enable eigenexa",
            "name": "eigenexa"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Enable libxc",
            "name": "libxc"
        },
        {
            "default": false,
            "description": "Enable optimization of reduction for many-core processor",
            "name": "manycore"
        },
        {
            "default": false,
            "description": "Enable MPI",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Enable scalapack",
            "name": "scalapack"
        }
    ],
    "versions": [
        {
            "name": "2.0.0",
            "sha256": "c3bb80bc5d338cba21cd8f345acbf2f2d81ef75af069a0a0ddbdc0acf358456c"
        },
        {
            "name": "1.2.1",
            "sha256": "a5045149e49abe9dd9edefe00cd1508a1323081bc3d034632176b728effdbaeb"
        }
    ],
    "versions_deprecated": []
}