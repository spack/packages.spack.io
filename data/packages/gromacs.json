{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [
        {
            "description": "gromacs: OpenMP not available for the Apple clang compiler",
            "name": "+openmp",
            "spec": "%apple-clang"
        },
        {
            "description": "gromacs: Enabling CP2K requires static build",
            "name": "+shared",
            "spec": "+cp2k"
        },
        {
            "description": null,
            "name": "%clang@7:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,6.1:",
            "spec": "+cuda ^cuda@10.0.130~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,8.1:",
            "spec": "+cuda ^cuda@10.1.105:10.1.243~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,7.1:",
            "spec": "+cuda ^cuda@10.1.105~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.2,9:",
            "spec": "+cuda ^cuda@10.2.89~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@:5",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "arch=darwin-None-None",
            "spec": "+cuda ^cuda@11.0.2:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@:4",
            "spec": "+cuda ^cuda@11.0:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@:5",
            "spec": "+cuda ^cuda@11.4:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:6",
            "spec": "+cuda ^cuda@12.2:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "arch=None-None-ppc64le",
            "spec": "+cuda ^cuda@12.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:12.0",
            "spec": "+cuda ^cuda@5.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:13.0",
            "spec": "+cuda ^cuda@6.0:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:13.2",
            "spec": "+cuda ^cuda@6.5:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:14.9",
            "spec": "+cuda ^cuda@7:~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:3.7,4:",
            "spec": "+cuda ^cuda@8.0:9.0~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,4.1:",
            "spec": "+cuda ^cuda@9.1~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@:3.7,5.1:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%xl@:12,14:15,17:",
            "spec": "+cuda ^cuda@9.2~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@8:",
            "spec": "+cuda ^cuda@:10.0.130~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@19.0:",
            "spec": "+cuda ^cuda@:10.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@7.1:",
            "spec": "+cuda ^cuda@:10.1.105~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.1.243~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%intel@19.1:",
            "spec": "+cuda ^cuda@:10.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@8.1:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@9:",
            "spec": "+cuda ^cuda@:10.2.89~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.2~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@10:",
            "spec": "+cuda ^cuda@:11.0.3~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%gcc@10:",
            "spec": "+cuda ^cuda@:11.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@11:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@19.2:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%xl@:12,17:",
            "spec": "+cuda ^cuda@:11.1.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@12:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@10",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@11:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@2021:",
            "spec": "+cuda ^cuda@:11.4.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@13:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@11.2:",
            "spec": "+cuda ^cuda@:11.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@14:",
            "spec": "+cuda ^cuda@:11.7~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@12:",
            "spec": "+cuda ^cuda@:11.8~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@15:",
            "spec": "+cuda ^cuda@:12.0~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@16:",
            "spec": "+cuda ^cuda@:12.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@17:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@13:",
            "spec": "+cuda ^cuda@:12.3~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@13.2.0",
            "spec": "+cuda ^cuda@:12.4~allow-unsupported-compilers arch=None-None-aarch64:"
        },
        {
            "description": null,
            "name": "%clang@18:",
            "spec": "+cuda ^cuda@:12.5~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@19:",
            "spec": "+cuda ^cuda@:12.6~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@14:",
            "spec": "+cuda ^cuda@:12.6~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@20:",
            "spec": "+cuda ^cuda@:12.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@15:",
            "spec": "+cuda ^cuda@:12.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@:11.0",
            "spec": "+cuda ^cuda@:3.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@:3.4",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%gcc@5:",
            "spec": "+cuda ^cuda@:7.5~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%intel@16.0:",
            "spec": "+cuda ^cuda@:8.0.43~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%intel@17.0:",
            "spec": "+cuda ^cuda@:8.0.60~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:8~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%clang@4:",
            "spec": "+cuda ^cuda@:9.0.176~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%clang@5:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%gcc@7:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers arch=None-None-x86_64:"
        },
        {
            "description": null,
            "name": "%xl@:12,14:",
            "spec": "+cuda ^cuda@:9.1~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%clang@6:",
            "spec": "+cuda ^cuda@:9.2~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": null,
            "name": "%intel@18.0:",
            "spec": "+cuda ^cuda@:9.9~allow-unsupported-compilers"
        },
        {
            "description": null,
            "name": "%gcc@6:",
            "spec": "+cuda ^cuda@:9~allow-unsupported-compilers arch=None-None-ppc64le:"
        },
        {
            "description": "gromacs: The GROMACS support for NVSHMEM does not work with the GROMACS support for cuFFTMp (even though cuFFTMp uses NVSHMEM in its implementation)",
            "name": "+nvshmem",
            "spec": "+cufftmp"
        },
        {
            "description": "gromacs: mdrun-only build option was removed for GROMACS 2021.",
            "name": "+mdrun_only",
            "spec": "@2021:"
        },
        {
            "description": "gromacs: GMX_RELAXED_DOUBLE_PRECISION option removed for GROMACS 2021.",
            "name": "+relaxed_double_precision",
            "spec": "@2021:"
        },
        {
            "description": "gromacs: GROMACS %intel support was removed in version 2022",
            "name": "%intel",
            "spec": "@2022:"
        },
        {
            "description": "gromacs: GROMACS requires GCC 9 or later since version 2023",
            "name": "%gcc@:8",
            "spec": "@2023:"
        },
        {
            "description": "gromacs: GROMACS requires oneMKL 2021.3 or later since version 2023",
            "name": "^intel-oneapi-mkl@:2021.2",
            "spec": "@2023:"
        },
        {
            "description": "gromacs: CP2K QM/MM support have been introduced in GROMACS 2022",
            "name": "+cp2k",
            "spec": "@:2021"
        },
        {
            "description": "gromacs: OpenMP is off but OpenMP Max threads is set",
            "name": "+openmp_max_threads",
            "spec": "~openmp"
        }
    ],
    "dependencies": [
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "CP2K is a quantum chemistry and solid state physics software package\nthat can perform atomistic simulations of solid state, liquid,\nmolecular, periodic, material, crystal, and biological systems",
            "name": "cp2k"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "NVPL FFT (NVIDIA Performance Libraries FFT) is part of NVIDIA\nPerformance Libraries and provides Fast Fourier Transform (FFT)\ncalculations on ARM CPUs.",
            "name": "fftw-api"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "The GNU Compiler Collection includes front ends for C, C++, Objective-C,\nFortran, Ada, and Go, as well as libraries for these languages.",
            "name": "gcc"
        },
        {
            "description": "Package for GCC compiler runtime libraries",
            "name": "gcc-runtime"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Highly Efficient FFT for Exascale",
            "name": "heffte"
        },
        {
            "description": "The Hardware Locality (hwloc) software project. The Portable Hardware\nLocality (hwloc) software package provides a portable abstraction\n(across OS, versions, architectures, ...) of the hierarchical topology\nof modern architectures, including NUMA memory nodes, sockets, shared\ncaches, cores and simultaneous multithreading. It also gathers various\nsystem attributes such as cache and memory information as well as the\nlocality of I/O devices such as network interfaces, InfiniBand HCAs or\nGPUs. It primarily aims at helping applications with gathering\ninformation about modern computing hardware so as to exploit it\naccordingly and efficiently.",
            "name": "hwloc"
        },
        {
            "description": "Intel VTune Profiler is a profiler to optimize application performance,\nsystem performance, and system configuration for HPC, cloud, IoT, media,\nstorage, and more. CPU, GPU, and FPGA: Tune the entire application's\nperformance--not just the accelerated portion. Multilingual: Profile\nSYCL, C, C++, C#, Fortran, OpenCL code, Python, Google Go programming\nlanguage, Java, .NET, Assembly, or any combination of languages. System\nor Application: Get coarse-grained system data for an extended period or\ndetailed results mapped to source code. Power: Optimize performance\nwhile avoiding power and thermal-related throttling. LICENSE\nINFORMATION: By downloading and using this software, you agree to the\nterms and conditions of the software license agreements at\nhttps://intel.ly/393CijO.",
            "name": "intel-oneapi-vtune"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "nvhpc"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        },
        {
            "description": "PLUMED is an open source library for free energy calculations in\nmolecular systems which works together with some of the most popular\nmolecular dynamics engines. Free energy calculations can be performed as\na function of many order parameters with a particular focus on\nbiological problems, using state of the art methods such as\nmetadynamics, umbrella sampling and Jarzynski-equation based steered MD.\nThe software, written in C++, can be easily interfaced with both fortran\nand C/C++ codes.",
            "name": "plumed"
        },
        {
            "description": "hipSYCL is an implementation of the SYCL standard programming model over\nNVIDIA CUDA/AMD HIP",
            "name": "sycl"
        }
    ],
    "dependent_to": [
        {
            "description": "Biobb_gromacs is the Biobb module collection to perform molecular\ndynamics simulations using the GROMACS MD suite",
            "name": "py-biobb-gromacs"
        },
        {
            "description": "Python bindings and ensemble workflow management for GROMACS. The\nGROMACS C++ API is affected by its package variants. You can specify a\nparticular GROMACS API by making the dependency variant explicit. E.g.\n``spack install gmxapi ^gromacs+mpi~double``",
            "name": "py-gmxapi"
        },
        {
            "description": "VOTCA is a software package which focuses on the analysis of molecular\ndynamics data, the development of systematic coarse-graining techniques\nas well as methods used for simulating microscopic charge (and exciton)\ntransport in disordered semiconductors.",
            "name": "votca"
        },
        {
            "description": "Versatile Object-oriented Toolkit for Coarse-graining Applications\n(VOTCA) is a package intended to reduce the amount of routine work when\ndoing systematic coarse-graining of various systems. The core is written\nin C++. This package contains the VOTCA coarse-graining engine.",
            "name": "votca-csg"
        }
    ],
    "description": "GROMACS is a molecular dynamics package primarily designed for\nsimulations of proteins, lipids and nucleic acids. It was originally\ndeveloped in the Biophysical Chemistry department of University of\nGroningen, and is now maintained by contributors in universities and\nresearch centers across the world. GROMACS is one of the fastest and\nmost popular software packages available and can run on CPUs as well as\nGPUs. It is free, open source released under the GNU Lesser General\nPublic License. Before the version 4.6, GROMACS was released under the\nGNU General Public License.\n",
    "homepage": "https://www.gromacs.org",
    "latest_version": "2025.2",
    "maintainers": [
        "eirrgang",
        "junghans",
        "mabraham"
    ],
    "name": "gromacs",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.gromacs",
            "relative_path": "gmxDetectCpu-cmake-3.14.patch",
            "reverse": false,
            "sha256": "1eb560b9cbf18e329dbe436dd740c7c1d3c902ee929bd54c4800662b52cdf851",
            "version": "@2018:2019.3 ^cmake@3.14.0:",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.gromacs",
            "relative_path": "gmxDetectSimd-cmake-3.14.patch",
            "reverse": false,
            "sha256": "e7f2965f7b94d7e4a71f15767a17af567240040ea7b8e05083ccd812f9fcd026",
            "version": "@5.0:2017 ^cmake@3.14.0:",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.gromacs",
            "reverse": false,
            "sha256": "2c30d00404b76421c13866cc42afa5e63276f7926c862838751b158df8727b1b",
            "url": "https://gitlab.com/gromacs/gromacs/-/commit/10262892e11a87fda0f59e633c89ed5ab1100509.diff",
            "version": "@2021.1:2021.2",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "The build type to build",
            "name": "build_type"
        },
        {
            "default": false,
            "description": "CP2K QM/MM interface integration",
            "name": "cp2k"
        },
        {
            "default": false,
            "description": "Build with CUDA",
            "name": "cuda"
        },
        {
            "default": "none",
            "description": "CUDA architecture",
            "name": "cuda_arch"
        },
        {
            "default": false,
            "description": "Enable multi-GPU FFT support with cuFFTMp",
            "name": "cufftmp"
        },
        {
            "default": false,
            "description": "Enables cycle subcounters",
            "name": "cycle_subcounters"
        },
        {
            "default": false,
            "description": "Produces a double precision version of the executables",
            "name": "double"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": true,
            "description": "Build and install the gmxlib python API for GROMACS",
            "name": "gmxapi"
        },
        {
            "default": false,
            "description": "Enable multi-GPU FFT support with HeFFTe",
            "name": "heffte"
        },
        {
            "default": true,
            "description": "Use the hwloc portable hardware locality library",
            "name": "hwloc"
        },
        {
            "default": false,
            "description": "Enable support for Intel Data Center GPU Max",
            "name": "intel-data-center-gpu-max"
        },
        {
            "default": false,
            "description": "Use this if Intel compiler is installed through spack. The g++ location is written to icp{c,x}.cfg",
            "name": "intel_provided_gcc"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Enable Instrumentation and Tracing Technology (ITT) profiling API (from Intel)",
            "name": "itt"
        },
        {
            "default": false,
            "description": "Enables the build of a cut-down version of libgromacs and/or the mdrun program",
            "name": "mdrun_only"
        },
        {
            "default": true,
            "description": "Activate MPI support (disable for Thread-MPI support)",
            "name": "mpi"
        },
        {
            "default": true,
            "description": "Build and install the NB-LIB C++ API for GROMACS",
            "name": "nblib"
        },
        {
            "default": false,
            "description": "Disable default suffixes",
            "name": "nosuffix"
        },
        {
            "default": false,
            "description": "Enable NVSHMEM support for Nvidia GPUs",
            "name": "nvshmem"
        },
        {
            "default": false,
            "description": "Enable OpenCL support",
            "name": "opencl"
        },
        {
            "default": true,
            "description": "Enables OpenMP at configure time",
            "name": "openmp"
        },
        {
            "default": "none",
            "description": "Max number of OpenMP threads",
            "name": "openmp_max_threads"
        },
        {
            "default": false,
            "description": "Enable PLUMED support",
            "name": "plumed"
        },
        {
            "default": false,
            "description": "GMX_RELAXED_DOUBLE_PRECISION, use only for Fujitsu PRIMEHPC",
            "name": "relaxed_double_precision"
        },
        {
            "default": true,
            "description": "Enables the build of shared libraries",
            "name": "shared"
        },
        {
            "default": true,
            "description": "Enable SVE on aarch64 if available",
            "name": "sve"
        },
        {
            "default": false,
            "description": "Enable SYCL support",
            "name": "sycl"
        }
    ],
    "versions": [
        {
            "branch": "main",
            "name": "main"
        },
        {
            "name": "2025.2",
            "sha256": "0df09f9d45a99ef00e66b9baa9493a27e906813763a3b6c7672217c66b43ea11"
        },
        {
            "name": "2025.1",
            "sha256": "0adf621a80fd8043f8defec84ce02811c0cdf42a052232890932d81f25c4d28a"
        },
        {
            "name": "2025.0",
            "sha256": "a27ad35a646295bbec129abe684d9d03d1e2e0bd76b0d625e9055746aaefae82"
        },
        {
            "name": "2024.5",
            "sha256": "fecf06b186cddb942cfb42ee8da5f3eb2b9993e6acc0a2f18d14ac0b014424f3"
        },
        {
            "name": "2024.4",
            "sha256": "ac618ece2e58afa86b536c5a2c4fcb937f0760318f12d18f10346b6bdebd86a8"
        },
        {
            "name": "2024.3",
            "sha256": "bbda056ee59390be7d58d84c13a9ec0d4e3635617adf2eb747034922cba1f029"
        },
        {
            "name": "2024.2",
            "sha256": "802a7e335f2e895770f57b159e4ec368ebb0ff2ce6daccf706c6e8025c36852b"
        },
        {
            "name": "2024.1",
            "sha256": "937d8f12a36fffbf2af7add71adbb5aa5c5537892d46c9a76afbecab1aa0aac7"
        },
        {
            "name": "2024",
            "sha256": "04d226d52066a8bc3a42e00d6213de737b4ec292e26703065924ff01956801e2"
        },
        {
            "name": "2019.6",
            "sha256": "bebe396dc0db11a9d4cc205abc13b50d88225617642508168a2195324f06a358"
        }
    ],
    "versions_deprecated": [
        {
            "branch": "main",
            "name": "master"
        },
        {
            "name": "2023.5",
            "sha256": "9cc491d3601a5fe0ec0de727e4432c34877f596fe8a463d4cf0f0f53fb34d08b"
        },
        {
            "name": "2023.4",
            "sha256": "e5d6c4d9e7ccacfaccb0888619bd21b5ea8911f82b410e68d6db5d40f695f231"
        },
        {
            "name": "2023.3",
            "sha256": "4ec8f8d0c7af76b13f8fd16db8e2c120e749de439ae9554d9f653f812d78d1cb"
        },
        {
            "name": "2023.2",
            "sha256": "bce1480727e4b2bb900413b75d99a3266f3507877da4f5b2d491df798f9fcdae"
        },
        {
            "name": "2023.1",
            "sha256": "eef2bb4a6cb6314cf9da47f26df2a0d27af4bf7b3099723d43601073ab0a42f4"
        },
        {
            "name": "2023",
            "sha256": "ac92c6da72fbbcca414fd8a8d979e56ecf17c4c1cdabed2da5cfb4e7277b7ba8"
        },
        {
            "name": "2022.6",
            "sha256": "75d277138475679dd3e334e384a71516570cde767310476687f2a5b72333ea41"
        },
        {
            "name": "2022.5",
            "sha256": "083cc3c424bb93ffe86c12f952e3e5b4e6c9f6520de5338761f24b75e018c223"
        },
        {
            "name": "2022.4",
            "sha256": "c511be602ff29402065b50906841def98752639b92a95f1b0a1060d9b5e27297"
        },
        {
            "name": "2022.3",
            "sha256": "14cfb130ddaf8f759a3af643c04f5a0d0d32b09bc3448b16afa5b617f5e35dae"
        },
        {
            "name": "2022.2",
            "sha256": "656404f884d2fa2244c97d2a5b92af148d0dbea94ad13004724b3fcbf45e01bf"
        },
        {
            "name": "2022.1",
            "sha256": "85ddab5197d79524a702c4959c2c43be875e0fc471df3a35224939dce8512450"
        },
        {
            "name": "2022",
            "sha256": "fad60d606c02e6164018692c6c9f2c159a9130c2bf32e8c5f4f1b6ba2dda2b68"
        }
    ]
}