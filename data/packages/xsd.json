{
    "aliases": [],
    "build_system": "MakefilePackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=makefile"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "libtool -- library building part of autotools.",
            "name": "libtool"
        },
        {
            "description": "Xerces-C++ is a validating XML parser written in a portable subset of\nC++. Xerces-C++ makes it easy to give your application the ability to\nread and write XML data. A shared library is provided for parsing,\ngenerating, manipulating, and validating XML documents using the DOM,\nSAX, and SAX2 APIs.",
            "name": "xerces-c"
        }
    ],
    "dependent_to": [
        {
            "description": "Damaris is a middleware for I/O and in situ analytics targeting large-\nscale, MPI-based HPC simulations.",
            "name": "damaris"
        }
    ],
    "description": "CodeSynthesis XSD is an open-source, cross-platform W3C XML Schema to\nC++ data binding compiler. It support in-memory and event-driven XML\nprocessing models and is available for a wide range of C++ compilers and\nplatforms.\n",
    "homepage": "https://www.codesynthesis.com",
    "latest_version": "4.0.0",
    "maintainers": [],
    "name": "xsd",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.xsd",
            "reverse": false,
            "sha256": "d57e0aed8784d2b947983209b6513c81ac593c9936c3d7b809b4cd60d4c28607",
            "url": "https://git.codesynthesis.com/cgit/libxsd-frontend/libxsd-frontend/patch/?id=5029f8665190879285787a9dcdaf5f997cadd2e2",
            "version": "",
            "working_dir": "libxsd-frontend"
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "makefile",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "14",
            "description": "Use the specified C++ standard when building",
            "name": "cxxstd"
        }
    ],
    "versions": [
        {
            "name": "4.0.0",
            "sha256": "eca52a9c8f52cdbe2ae4e364e4a909503493a0d51ea388fc6c9734565a859817"
        }
    ],
    "versions_deprecated": []
}