{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "NEURON is a simulation environment for single and networks of neurons.\nNEURON is a simulation environment for modeling individual and networks\nof neurons. NEURON models individual neurons via the use of sections\nthat are automatically subdivided into individual compartments, instead\nof requiring the user to manually create compartments.",
            "name": "neuron"
        },
        {
            "description": "Distributed Evolutionary Algorithms in Python.",
            "name": "py-deap"
        },
        {
            "description": "The Electrophys Feature Extract Library (eFEL) allows neuroscientists to\nautomatically extract features from time series data recorded from\nneurons (both in vitro and in silico). Examples are the action potential\nwidth and amplitude in voltage traces recorded during whole-cell patch\nclamp experiments. The user of the library provides a set of traces and\nselects the features to be calculated. The library will then extract the\nrequested features and return the values to the user.",
            "name": "py-efel"
        },
        {
            "description": "Clean single-source support for Python 3 and 2",
            "name": "py-future"
        },
        {
            "description": "IPython's architecture for parallel and distributed computing.",
            "name": "py-ipyparallel"
        },
        {
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment.",
            "name": "py-jinja2"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage.",
            "name": "py-pandas"
        },
        {
            "description": "Threading and multiprocessing eye-candy.",
            "name": "py-pebble"
        },
        {
            "description": "Tiny 'shelve'-like database with concurrency support",
            "name": "py-pickleshare"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "SCOOP (Scalable COncurrent Operations in Python) is a distributed task\nmodule allowing concurrent parallel programming on various environments,\nfrom heterogeneous grids to supercomputers.",
            "name": "py-scoop"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Python library to optimize and evaluate electrical models.",
            "name": "py-bluepyemodel"
        },
        {
            "description": "Python morphology manipulation toolkit",
            "name": "py-morph-tool"
        }
    ],
    "description": "Bluebrain Python Optimisation Library\n",
    "homepage": "https://github.com/BlueBrain/BluePyOpt",
    "latest_version": "1.14.11",
    "maintainers": [],
    "name": "py-bluepyopt",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.py-bluepyopt",
            "relative_path": "pmi_rank.patch",
            "reverse": false,
            "sha256": "dc37639246b3a3320c840f1c4f635940b8510a896a667d4707c3d355d9c6fb81",
            "version": "",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Use BluePyOpt together with py-scoop",
            "name": "scoop"
        }
    ],
    "versions": [
        {
            "name": "1.14.11",
            "sha256": "fe2830c36699a93d2ef9ddef316da42f9c57ca6654c92356eab973ee2298ebf7"
        },
        {
            "name": "1.14.4",
            "sha256": "7567fd736053250ca06030f67ad93c607b100c2b98df8dc588c26b64cb3e171c"
        }
    ],
    "versions_deprecated": []
}