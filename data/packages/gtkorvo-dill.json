{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [
        {
            "description": "FFS is a middleware library for data communication, including\nrepresentation, processing and marshaling that preserves the performance\nof traditional approaches while relaxing the requirement of a priori\nknowledge and providing complex run-time flexibility.",
            "name": "libffs"
        }
    ],
    "description": "DILL provides instruction-level code generation, register allocation and\nsimple optimizations for generating executable code directly into memory\nregions for immediate use.\n",
    "homepage": "https://github.com/GTkorvo/dill",
    "latest_version": "2.4",
    "maintainers": [],
    "name": "gtkorvo-dill",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.gtkorvo-dill",
            "relative_path": "2.4-fix-clear_cache.patch",
            "reverse": false,
            "sha256": "77b5e50d8a01f757eea8d9212127481ea0b2fa35e38e2903816f39f37a2a5790",
            "version": "@2.4",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.gtkorvo-dill",
            "relative_path": "2.1-fix-clear_cache.patch",
            "reverse": false,
            "sha256": "7b6bb68a79a9088c90d568f991409a16f1318ffe62018b1b8eb9cc793fa9621d",
            "version": "@2.1",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "develop"
        },
        {
            "name": "2.4",
            "sha256": "ed7745d13e8c6a556f324dcc0e48a807fc993bdd5bb1daa94c1df116cb7e81fa"
        },
        {
            "name": "2.1",
            "sha256": "7671e1f3c25ac6a4ec2320cec2c342a2f668efb170e3dba186718ed17d2cf084"
        }
    ],
    "versions_deprecated": []
}