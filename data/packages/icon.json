{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "gpu=none",
            "spec": "+mpi-gpu"
        },
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "ecCodes is a package developed by ECMWF for processing meteorological\ndata in GRIB (1/2), BUFR (3/4) and GTS header formats.",
            "name": "eccodes"
        },
        {
            "description": "The GNU Find Utilities are the basic directory searching utilities of\nthe GNU operating system.",
            "name": "findutils"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "Fully feature complete YAML parser and emitter, supporting the latest\nYAML spec and passing the full YAML testsuite.",
            "name": "libfyaml"
        },
        {
            "description": "Libxml2 is the XML C parser and toolkit developed for the Gnome project\n(but usable outside of the Gnome platform), it is free software\navailable under the MIT License.",
            "name": "libxml2"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the C distribution.",
            "name": "netcdf-c"
        },
        {
            "description": "NetCDF (network Common Data Form) is a set of software libraries and\nmachine-independent data formats that support the creation, access, and\nsharing of array-oriented scientific data. This is the Fortran\ndistribution.",
            "name": "netcdf-fortran"
        },
        {
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development.",
            "name": "perl"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "Serialbox is a serialization library and tools for C/C++, Python3 and\nFortran. Serialbox is used in several projects for building validation\nframeworks against reference runs.",
            "name": "serialbox"
        }
    ],
    "dependent_to": [],
    "description": "ICON - is a modeling framework for weather, climate, and environmental\nprediction. It solves the full three-dimensional non-hydrostatic and\ncompressible Navier-Stokes equations on an icosahedral grid and allows\nseamless predictions from local to global scales.\n",
    "homepage": "https://www.icon-model.org",
    "latest_version": "2025.04",
    "maintainers": [
        "Try2Code",
        "skosukhin"
    ],
    "name": "icon",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": true,
            "description": "Enable the AES physics package",
            "name": "aes"
        },
        {
            "default": false,
            "description": "Enable the aerosols and reactive trace component ART",
            "name": "art"
        },
        {
            "default": true,
            "description": "Enable the atmosphere component",
            "name": "atmo"
        },
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable usage of the parallel features of CDI",
            "name": "cdi-pio"
        },
        {
            "default": false,
            "description": "Enable the ICON community interfaces",
            "name": "comin"
        },
        {
            "default": true,
            "description": "Enable the coupling",
            "name": "coupling"
        },
        {
            "default": false,
            "description": "Enable usage of the ECMWF radiation scheme (ECRAD)",
            "name": "ecrad"
        },
        {
            "default": "none",
            "description": "Enable GPU support for the specified architecture",
            "name": "gpu"
        },
        {
            "default": false,
            "description": "Enable GRIB2 I/O",
            "name": "grib2"
        },
        {
            "default": true,
            "description": "Enable the land component JSBACH",
            "name": "jsbach"
        },
        {
            "default": true,
            "description": "Enable the Large-Eddy Simulation component",
            "name": "les"
        },
        {
            "default": false,
            "description": "Enable mixed-precision dynamical core",
            "name": "mixed-precision"
        },
        {
            "default": true,
            "description": "Enable MPI (parallelization) support",
            "name": "mpi"
        },
        {
            "default": true,
            "description": "Enable usage of the GPU-aware MPI features",
            "name": "mpi-gpu"
        },
        {
            "default": true,
            "description": "Enable the NWP physics package",
            "name": "nwp"
        },
        {
            "default": true,
            "description": "Enable the ocean component",
            "name": "ocean"
        },
        {
            "default": false,
            "description": "Enable OpenMP support",
            "name": "openmp"
        },
        {
            "default": false,
            "description": "Enable usage of the parallel features of NetCDF",
            "name": "parallel-netcdf"
        },
        {
            "default": true,
            "description": "Enable usage of the RTE+RRTMGP toolbox for radiation calculations",
            "name": "rte-rrtmgp"
        },
        {
            "default": "none",
            "description": "Enable the Serialbox2 serialization",
            "name": "serialization"
        },
        {
            "default": true,
            "description": "Enable the upper atmosphere component",
            "name": "upatmo"
        },
        {
            "default": true,
            "description": "Enable the ocean surface wave component",
            "name": "waves"
        },
        {
            "default": false,
            "description": "Enable the YAXT data exchange",
            "name": "yaxt"
        }
    ],
    "versions": [
        {
            "commit": "1be2ca66ea0de149971d2e77e88a9f11c764bd22",
            "name": "2025.04",
            "tag": "icon-2025.04-public"
        },
        {
            "name": "2024.10",
            "sha256": "5c461c783eb577c97accd632b18140c3da91c1853d836ca2385f376532e9bad1"
        },
        {
            "name": "2024.07",
            "sha256": "f53043ba1b36b8c19d0d2617ab601c3b9138b90f8ff8ca6db0fd079665eb5efa"
        },
        {
            "name": "2024.01-1",
            "sha256": "3e57608b7e1e3cf2f4cb318cfe2fdb39678bd53ca093955d99570bd6d7544184"
        },
        {
            "name": "2024.01",
            "sha256": "d9408fdd6a9ebf5990298e9a09c826e8c15b1e79b45be228f7a5670a3091a613"
        }
    ],
    "versions_deprecated": []
}