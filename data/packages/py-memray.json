{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "description": "py-memray: Memray only works on Linux",
            "name": "arch=darwin-None-None",
            "spec": "@:1.9"
        },
        {
            "description": "py-memray: Memray only works on Linux and macOS",
            "name": "arch=windows-None-None",
            "spec": ""
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "elfutils is a collection of various binary tools such as eu-objdump, eu-\nreadelf, and other utilities that allow you to inspect and manipulate\nELF files. Refer to Table 5.Tools Included in elfutils for Red Hat\nDeveloper for a complete list of binary tools that are distributed with\nthe Red Hat Developer Toolset version of elfutils.",
            "name": "elfutils"
        },
        {
            "description": "A portable and efficient C programming interface (API) to determine the\ncall-chain of a program.",
            "name": "libunwind"
        },
        {
            "description": "LZ4 is lossless compression algorithm, providing compression speed at\n400 MB/s per core, scalable with multi-cores CPU. It also features an\nextremely fast decoder, with speed in multiple GB/s per core, typically\nreaching RAM speed limits on multi-core systems.",
            "name": "lz4"
        },
        {
            "description": "The Cython compiler for writing C extensions for the Python language.",
            "name": "py-cython"
        },
        {
            "description": "Jinja2 is a template engine written in pure Python. It provides a Django\ninspired non-XML syntax but supports inline expressions and an optional\nsandboxed environment.",
            "name": "py-jinja2"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Interface Python with pkg-config.",
            "name": "py-pkgconfig"
        },
        {
            "description": "Rich is a Python library for rich text and beautiful formatting in the\nterminal.",
            "name": "py-rich"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Textual is a Rapid Application Development framework for Python.",
            "name": "py-textual"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [],
    "description": "A memory profiler for Python applications.\n",
    "homepage": "https://github.com/bloomberg/memray",
    "latest_version": "1.15.0",
    "maintainers": [],
    "name": "py-memray",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "1.15.0",
            "sha256": "1beffa2bcba3dbe0f095d547927286eca46e272798b83026dd1b5db58e16ed56"
        },
        {
            "name": "1.1.0",
            "sha256": "876e46e0cd42394be48b33f81314bc946f4eb023b04bf1def084c25ccf1d2bb6"
        }
    ],
    "versions_deprecated": []
}