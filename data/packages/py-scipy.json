{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [
        {
            "description": "py-scipy: SciPy requires Apple Clang >= 10",
            "name": "%apple-clang@:9",
            "spec": "@1.10:"
        },
        {
            "description": "py-scipy: SciPy 1.10-1.13 requires GCC >= 8.0",
            "name": "%gcc@:7",
            "spec": "@1.10:"
        },
        {
            "description": "py-scipy: SciPy requires at least vc142 (default with Visual Studio 2019) when building with MSVC",
            "name": "%msvc@:19.19",
            "spec": "@1.10:"
        },
        {
            "description": "py-scipy: SciPy 1.14: requires GCC >= 9.1",
            "name": "%gcc@:9.0",
            "spec": "@1.14:"
        },
        {
            "description": "py-scipy: SciPy 1.14: Use Intel LLVM instead of Intel Classic",
            "name": "%intel",
            "spec": "@1.14:"
        },
        {
            "description": null,
            "name": "%oneapi@:2023.0",
            "spec": "@1.9:"
        },
        {
            "description": null,
            "name": "^openblas@0.3.26:",
            "spec": "@:1.12"
        },
        {
            "description": null,
            "name": "arch=darwin-None-aarch64:",
            "spec": "@:1.7.2"
        },
        {
            "description": null,
            "name": "%oneapi@2024:",
            "spec": "@:1.8"
        },
        {
            "description": null,
            "name": "%apple-clang@15:",
            "spec": "@:1.9"
        },
        {
            "description": "py-scipy: SciPy requires GCC >= 4.8",
            "name": "%gcc@:4.7",
            "spec": "@:1.9"
        },
        {
            "description": null,
            "name": "^py-cython@3.0.3",
            "spec": ""
        },
        {
            "description": null,
            "name": "@1.4.0:1.4.1",
            "spec": "arch=None-None-ppc64le:"
        }
    ],
    "dependencies": [
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "blas"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "Lightweight but flexible shim designed to rectify the incompatibilities\nbetween the Accelerate/vecLib BLAS and LAPACK libraries shipped with\nmacOS and FORTRAN code compiled with modern compilers such as GNU\nFortran.",
            "name": "lapack"
        },
        {
            "description": "Meson is a portable open source build system meant to be both extremely\nfast, and as user friendly as possible.",
            "name": "meson"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        },
        {
            "description": "The Cython compiler for writing C extensions for the Python language.",
            "name": "py-cython"
        },
        {
            "description": "A library for property based testing.",
            "name": "py-hypothesis"
        },
        {
            "description": "Meson Python build backend (PEP 517).",
            "name": "py-meson-python"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Pooch manages your Python library's sample data files: it automatically\ndownloads and stores them in a local directory, with support for\nversioning and corruption checks.",
            "name": "py-pooch"
        },
        {
            "description": "pybind11 -- Seamless operability between C++11 and Python. pybind11 is a\nlightweight header-only library that exposes C++ types in Python and\nvice versa, mainly to create Python bindings of existing C++ code. Its\ngoals and syntax are similar to the excellent Boost.Python library by\nDavid Abrahams: to minimize boilerplate code in traditional extension\nmodules by inferring type information using compile-time introspection.",
            "name": "py-pybind11"
        },
        {
            "description": "pytest: simple powerful testing with Python.",
            "name": "py-pytest"
        },
        {
            "description": "Ahead of Time compiler for numeric kernels.",
            "name": "py-pythran"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Akantu means a little element in Kinyarwanda, a Bantu language. From\nnow on it is also an opensource object-oriented Finite Element library\nwhich has the ambition to be generic and efficient.",
            "name": "akantu"
        },
        {
            "description": "The ALPS project (Algorithms and Libraries for Physics Simulations)\naims at providing generic parallel algorithms for classical and quantum\nlattice models and provides utility classes and algorithm for many\nothers.",
            "name": "alps"
        },
        {
            "description": "AmberTools is a free, useful standalone package and a prerequisite for\ninstalling Amber itself. The AmberTools suite is free of charge, and its\ncomponents are mostly released under the GNU General Public License\n(GPL). A few components are included that are in the public domain or\nwhich have other, open-source, licenses. The libsander and libpbsa\nlibraries use the LGPL license.",
            "name": "ambertools"
        },
        {
            "description": "CallFlow is an interactive visual analysis tool that provides a high-\nlevel overview of CCTs together with semantic refinement operations to\nprogressively explore the CCTs.",
            "name": "callflow"
        },
        {
            "description": "Cantera is a suite of object-oriented software tools for problems\ninvolving chemical kinetics, thermodynamics, and/or transport processes.",
            "name": "cantera"
        },
        {
            "description": "A generalist algorithm for cell and nucleus segmentation that can be\noptimized for your own data",
            "name": "cellpose"
        },
        {
            "description": "CosmoMC is a Fortran 2008 Markov-Chain Monte-Carlo (MCMC) engine for\nexploring cosmological parameter space, together with Fortran and python\ncode for analysing Monte-Carlo samples and importance sampling (plus a\nsuite of scripts for building grids of runs, plotting and presenting\nresults).",
            "name": "cosmomc"
        },
        {
            "description": "costo stand for COSimulation TOols. Its a layer above MPI to share data\nbetween meshes.",
            "name": "costo"
        },
        {
            "description": "CryoDRGN is a neural network based algorithm for heterogeneous cryo-EM\nreconstruction. In particular, the method models a continuous\ndistribution over 3D structures by using a neural network based\nrepresentation for the volume",
            "name": "cryodrgn"
        },
        {
            "description": "DSQSS is a program package for solving quantum many-body problems\ndefined on lattices. It is based on the quantum Monte Carlo method in\nFeynman's path integral representation.",
            "name": "dsqss"
        },
        {
            "description": "Faiss is a library for efficient similarity search and clustering of\ndense vectors. Faiss contains algorithms that search in sets of vectors\nof any size, up to ones that possibly do not fit in RAM. It also\ncontains supporting code for evaluation and parameter tuning. Faiss is\nwritten in C++ with complete wrappers for Python/numpy. Some of the most\nuseful algorithms are implemented on the GPU. It is developed by\nFacebook AI Research.",
            "name": "faiss"
        },
        {
            "description": "Python tools for GATE, see https://github.com/OpenGATE/Gate",
            "name": "gatetools"
        },
        {
            "description": "Organelle Genome Assembly Toolkit (Chloroplast/Mitocondrial/ITS)",
            "name": "getorganelle"
        },
        {
            "description": "Halide is a programming language designed to make it easier to write\nhigh-performance image and array processing code on modern machines.",
            "name": "halide"
        },
        {
            "description": "HybPiper was designed for targeted sequence capture, in which DNA\nsequencing libraries are enriched for gene regions of interest,\nespecially for phylogenetics. HybPiper is a suite of Python scripts that\nwrap and connect bioinformatics tools in order to extract target\nsequences from high-throughput DNA sequencing reads",
            "name": "hybpiper"
        },
        {
            "description": "A python pipeline to identify IS (Insertion Sequence) elements in genome\nand metagenome",
            "name": "isescan"
        },
        {
            "description": "IsoQuant: Transcript discovery and quantification with long RNA reads",
            "name": "isoquant"
        },
        {
            "description": "ldsc is a command line tool for estimating heritability and genetic\ncorrelation from GWAS summary statistics. ldsc also computes LD scores",
            "name": "ldsc"
        },
        {
            "description": "LvArray portable HPC containers.",
            "name": "lvarray"
        },
        {
            "description": "Wavelet and simulated Annealing SliP inversion (WASP). This code uses a\nnonlinear simulated annealing inversion method to model slip amplitude,\nrake, rupture time, and rise time on a discretized fault plane, finding\nthe solution that best fits the observations in the wavelet domain.",
            "name": "neic-finitefault"
        },
        {
            "description": "NEST is a simulator for spiking neural network models It focuses on the\ndynamics, size and structure of neural systems rather than on the exact\nmorphology of individual neurons.",
            "name": "nest"
        },
        {
            "description": "Node Resource Manager",
            "name": "nrm"
        },
        {
            "description": "OCTA is an integrated simulation system for soft materials.",
            "name": "octa"
        },
        {
            "description": "OrthoFiller: Identifying missing annotations for evolutionarily\nconserved genes.",
            "name": "orthofiller"
        },
        {
            "description": "OrthoFinder is a fast, accurate and comprehensive analysis tool for\ncomparative genomics. It finds orthologues and orthogroups infers rooted\ngene trees for all orthogroups and infers a rooted species tree for the\nspecies being analysed. OrthoFinder also provides comprehensive\nstatistics for comparative genomic analyses. OrthoFinder is simple to\nuse and all you need to run it is a set of protein sequence files (one\nper species) in FASTA format.",
            "name": "orthofinder"
        },
        {
            "description": "Parallel Global Multiobjective Optimizer (and its Python alter ego\nPyGMO) is a C++ / Python platform to perform parallel computations of\noptimisation tasks (global and local) via the asynchronous generalized\nisland model.",
            "name": "pagmo"
        },
        {
            "description": "A library for numerically computing the Pfaffian of a real or complex\nskew-symmetric matrix. This is based on computing the tridiagonal form\nof the matrix under unitary congruence transformations.",
            "name": "pfapack"
        },
        {
            "description": "Possvm (Phylogenetic Ortholog Sorting with Species oVerlap and MCL) is a\npython tool to analyse pre-computed gene trees and identify pairs and\nclusters of orthologous genes. It takes advantage of the species overlap\nalgorithm implemented in the ETE toolkit to parse the phylogeny and\nidentify orthologous gene pairs, and MCL clustering for orthogroup\nidentification.",
            "name": "possvm"
        },
        {
            "description": "ABCpy is a highly modular, scientific library for approximate Bayesian\ncomputation (ABC) written in Python. It is designed to run all included\nABC algorithms in parallel, either using multiple cores of a single\ncomputer or using an Apache Spark or MPI enabled cluster.",
            "name": "py-abcpy"
        },
        {
            "description": "Python package to automate ABINIT calculations and analyze the results.",
            "name": "py-abipy"
        },
        {
            "description": "AHPy is an implementation of the Analytic Hierarchy Process (AHP), a\nmethod used to structure, synthesize and evaluate the elements of a\ndecision problem.",
            "name": "py-ahpy"
        },
        {
            "description": "AlphaFold is an AI system developed by DeepMind that predicts a\nprotein's 3D structure from its amino acid sequence. It regularly\nachieves accuracy competitive with experiment.",
            "name": "py-alphafold"
        },
        {
            "description": "anndata is a Python package for handling annotated data matrices in\nmemory and on disk, positioned between pandas and xarray.",
            "name": "py-anndata"
        },
        {
            "description": "Advanced Normalization Tools in Python.",
            "name": "py-antspyx"
        },
        {
            "description": "ANUGA (pronounced \"AHnooGAH\") is open-source software for the simulation\nof the shallow water equation, in particular it can be used to model\ntsunamis and floods.",
            "name": "py-anuga"
        },
        {
            "description": "Anvi\u2019o is a comprehensive platform that brings together many aspects of\ntoday\u2019s cutting-edge computational strategies of data-enabled\nmicrobiology, including genomics, metagenomics, metatranscriptomics,\npangenomics, metapangenomics, phylogenomics, and microbial population\ngenetics in an integrated and easy-to-use fashion through extensive\ninteractive visualization capabilities.",
            "name": "py-anvio"
        },
        {
            "description": "Autoregressive Conditional Heteroskedasticity (ARCH) and other tools for\nfinancial econometrics, written in Python (with Cython and/or Numba used\nto improve performance)",
            "name": "py-arch"
        },
        {
            "description": "This is the python client for Arkouda.",
            "name": "py-arkouda"
        },
        {
            "description": "Python ARM Radar Toolkit. A growing collection of weather radar\nalgorithms and utilities build on top of the Scientific Python stack and\ndistributed under the 3-Clause BSD license. Py-ART is used by the\nAtmospheric Radiation Measurement (ARM) Climate Research Facility for\nworking with data from a number of precipitation and cloud radars, but\nhas been designed so that it can be used by others in the radar and\natmospheric communities to examine, processes, and analyse data from\nmany types of weather radars.",
            "name": "py-arm-pyart"
        },
        {
            "description": "ArviZ (pronounced \"AR-vees\") is a Python package for exploratory\nanalysis of Bayesian models. Includes functions for posterior analysis,\nmodel checking, comparison and diagnostics.",
            "name": "py-arviz"
        },
        {
            "description": "The Atomic Simulation Environment (ASE) is a set of tools and Python\nmodules for setting up, manipulating, running, visualizing and analyzing\natomistic simulations.",
            "name": "py-ase"
        },
        {
            "description": "The Astropy Project is a community effort to develop a single core\npackage for Astronomy in Python and foster interoperability between\nPython astronomy packages.",
            "name": "py-astropy"
        },
        {
            "description": "autograd compatible approximations to the derivatives of the Gamma-\nfamily of functions.",
            "name": "py-autograd-gamma"
        },
        {
            "description": "Adaptive experimentation is the machine-learning guided process of\niteratively exploring a (possibly infinite) parameter space in order to\nidentify optimal configurations in a resource-efficient manner. Ax\ncurrently supports Bayesian optimization and bandit optimization as\nexploration strategies. Bayesian optimization in Ax is powered by\nBoTorch, a modern library for Bayesian optimization research built on\nPyTorch.",
            "name": "py-ax-platform"
        },
        {
            "description": "Pure Python implementation of bayesian global optimization with gaussian\nprocesses.",
            "name": "py-bayesian-optimization"
        },
        {
            "description": "BigDFT: the python interface of BigDFT for electronic structure\ncalculation based on Daubechies wavelets.",
            "name": "py-bigdft"
        },
        {
            "description": "The BIOM file format (canonically pronounced biome) is designed to be a\ngeneral-use format for representing biological sample by observation\ncontingency tables.",
            "name": "py-biom-format"
        },
        {
            "description": "Reading structures from trajectory files.",
            "name": "py-biotraj"
        },
        {
            "description": "Blue Brain Python E-feature extraction",
            "name": "py-bluepyefe"
        },
        {
            "description": "Python library to optimize and evaluate electrical models.",
            "name": "py-bluepyemodel"
        },
        {
            "description": "The Brain Modeling Toolkit",
            "name": "py-bmtk"
        },
        {
            "description": "BoTorch is a library for Bayesian Optimization built on PyTorch.",
            "name": "py-botorch"
        },
        {
            "description": "A clock-driven simulator for spiking neural networks",
            "name": "py-brian"
        },
        {
            "description": "The carputils framework for running simulations with the openCARP\nsoftware.",
            "name": "py-carputils"
        },
        {
            "description": "Cartopy - a cartographic python library with matplotlib support.",
            "name": "py-cartopy"
        },
        {
            "description": "CellProfiler cell image analysis software. CellProfiler is a free open-\nsource software designed to enable biologists without training in\ncomputer vision or programming to quantitatively measure phenotypes from\nthousands of images automatically.",
            "name": "py-cellprofiler"
        },
        {
            "description": "Core classes and components used by CellProfiler.",
            "name": "py-cellprofiler-core"
        },
        {
            "description": "An open source image processing library.",
            "name": "py-centrosome"
        },
        {
            "description": "Assess the quality of microbial genomes recovered from isolates, single\ncells, and metagenomes",
            "name": "py-checkm-genome"
        },
        {
            "description": "This repository contains an implementation for the Convolutive transfer\nfunction Invariant Signal-to-Distortion Ratio objective for PyTorch as\ndescribed in the publication Convolutive Transfer Function Invariant SDR\ntraining criteria for Multi-Channel Reverberant Speech Separation",
            "name": "py-ci-sdr"
        },
        {
            "description": "A set of python tools for reading, writing and viewing Cinema databases",
            "name": "py-cinemasci"
        },
        {
            "description": "ClimaX: A foundation model for weather and climate.",
            "name": "py-climax"
        },
        {
            "description": "CMSeq is a set of commands to provide an interface to .bam files for\ncoverage and sequence consensus.",
            "name": "py-cmseq"
        },
        {
            "description": "Coclust provides both a Python package which implements several diagonal\nand non-diagonal co-clustering algorithms, and a ready to use script to\nperform co- clustering",
            "name": "py-coclust"
        },
        {
            "description": "An analysis tool providing insight into the portability and\nmaintainability of an application's source code.",
            "name": "py-codebasin"
        },
        {
            "description": "Creation and manipulation of parameter configuration spaces for\nautomated algorithm configuration and hyperparameter tuning.",
            "name": "py-configspace"
        },
        {
            "description": "A clean and simple data loading library for Continual Learning",
            "name": "py-continuum"
        },
        {
            "description": "The Python Control Systems Library is a Python module that implements\nbasic operations for analysis and design of feedback control systems.",
            "name": "py-control"
        },
        {
            "description": "This toolkit contains tools to extract conversational features and\nanalyze social phenomena in conversations, using a single unified\ninterface inspired by (and compatible with) scikit-learn.",
            "name": "py-convokit"
        },
        {
            "description": "Copulas is a Python library for modeling multivariate distributions and\nsampling from them using copula functions. Given a table containing\nnumerical data, we can use Copulas to learn the distribution and later\non generate new synthetic rows following the same statistical\nproperties.",
            "name": "py-copulas"
        },
        {
            "description": "cuML is a suite of libraries that implement machine learning algorithms\nand mathematical primitives functions that share compatible APIs with\nother RAPIDS projects.",
            "name": "py-cuml"
        },
        {
            "description": "CuPy is an open-source array library accelerated with NVIDIA CUDA. CuPy\nprovides GPU accelerated computing with Python. CuPy uses CUDA-related\nlibraries including cuBLAS, cuDNN, cuRand, cuSolver, cuSPARSE, cuFFT and\nNCCL to make full use of the GPU architecture.",
            "name": "py-cupy"
        },
        {
            "description": "scipy Linear operators for curvature matrices in PyTorch.",
            "name": "py-curvlinops-for-pytorch"
        },
        {
            "description": "Convex optimization, for everyone.",
            "name": "py-cvxpy"
        },
        {
            "description": "A Python interface for CLP, CBC, and CGL. CyLP is a Python interface to\nCOIN-OR's Linear and mixed-integer program solvers (CLP, CBC, and CGL).\nCyLP's unique feature is that you can use it to alter the solution\nprocess of the solvers from within Python.",
            "name": "py-cylp"
        },
        {
            "description": "Fit population genetic models of demography and selection using\ndiffusion approximations to the allele frequency spectrum",
            "name": "py-dadi"
        },
        {
            "description": "Pre- and post-processing tools for DAMASK",
            "name": "py-damask"
        },
        {
            "description": "Python utilities to interact with Darshan log records of HPC\napplications.",
            "name": "py-darshan"
        },
        {
            "description": "Dask-glm is a library for fitting Generalized Linear Models on large\ndatasets.",
            "name": "py-dask-glm"
        },
        {
            "description": "Scalable Machine Learning with Dask.",
            "name": "py-dask-ml"
        },
        {
            "description": "Datashader is a data rasterization pipeline for automating the process\nof creating meaningful representations of large amounts of data",
            "name": "py-datashader"
        },
        {
            "description": "Scalable asynchronous hyperparameter optimization, neural architecture\nsearch, and parallel ensemble of predictive models.",
            "name": "py-deephyper"
        },
        {
            "description": "deep-significance: Easy and Better Significance Testing for Deep Neural\nNetworks",
            "name": "py-deepsig"
        },
        {
            "description": "deepTools addresses the challenge of handling the large amounts of data\nthat are now routinely generated from DNA sequencing centers.",
            "name": "py-deeptools"
        },
        {
            "description": "Devito is a Python package to implement optimized stencil computation.\n(e.g., finite differences, image processing, machine learning) from\nhigh-level symbolic problem definitions. Devito builds on SymPy and\nemploys automated code generation and just-in-time compilation to\nexecute optimized computational kernels on several computer platforms,\nincluding CPUs, GPUs, and clusters thereof.",
            "name": "py-devito"
        },
        {
            "description": "Deep Graph Library (DGL). DGL is an easy-to-use, high performance and\nscalable Python package for deep learning on graphs. DGL is framework\nagnostic, meaning if a deep graph model is a component of an end-to-end\napplication, the rest of the logics can be implemented in any major\nframeworks, such as PyTorch, Apache MXNet or TensorFlow.",
            "name": "py-dgl"
        },
        {
            "description": "A Modified version of scikit-optimize a Sequential model-based\noptimization toolbox for DeepHyper. Scikit-Optimize, or skopt, is a\nsimple and efficient library to minimize (very) expensive and noisy\nblack-box functions. It implements several methods for sequential model-\nbased optimization. skopt aims to be accessible and easy to use in many\ncontexts. The library is built on top of NumPy, SciPy and Scikit-Learn.",
            "name": "py-dh-scikit-optimize"
        },
        {
            "description": "Dinosaur: differentiable dynamics for global atmospheric modeling.",
            "name": "py-dinosaur"
        },
        {
            "description": "Diffusion MRI utilities in python. DIPY is the paragon 3D/4D+ imaging\nlibrary in Python. Contains generic methods for spatial normalization,\nsignal processing, machine learning, statistical analysis and\nvisualization of medical images. Additionally, it contains specialized\nmethods for computational anatomy including diffusion, perfusion and\nstructural imaging.",
            "name": "py-dipy"
        },
        {
            "description": "DXchange provides an interface with tomoPy and raw tomographic data\ncollected at different synchrotron facilities.",
            "name": "py-dxchange"
        },
        {
            "description": "This is the Python package for ECOS: Embedded Cone Solver.",
            "name": "py-ecos"
        },
        {
            "description": "I/O support for EEGLAB files in Python.",
            "name": "py-eeglabio"
        },
        {
            "description": "Elephant is a package for analysis of electrophysiology data in Python",
            "name": "py-elephant"
        },
        {
            "description": "General Equation Parser and Evaluator",
            "name": "py-equation"
        },
        {
            "description": "Evolutionary Scale Modeling",
            "name": "py-fair-esm"
        },
        {
            "description": "You can use fastai without any installation by using Google Colab. In\nfact, every page of this documentation is also available as an\ninteractive notebook - click \"Open in colab\" at the top of any page to\nopen it (be sure to change the Colab runtime to \"GPU\" to have it run\nfast!) See the fast.ai documentation on Using Colab for more\ninformation.",
            "name": "py-fastai"
        },
        {
            "description": "Optimizing Protein Structure Prediction Model Training and Inference on\nGPU Clusters.",
            "name": "py-fastfold"
        },
        {
            "description": "This library provides Kalman filtering and various related optimal and\nnon-optimal filtering software written in Python.",
            "name": "py-filterpy"
        },
        {
            "description": "Tools for manipulating FITS images using primarily scipy & native python\nroutines",
            "name": "py-fits-tools"
        },
        {
            "description": "fitter package provides a simple class to identify the distribution from\nwhich a data samples is generated from. It uses 80 distributions from\nScipy and allows you to plot the results to check what is the most\nprobable distribution and the best parameters.",
            "name": "py-fitter"
        },
        {
            "description": "Fast & furious GroupBy operations for dask.array.",
            "name": "py-flox"
        },
        {
            "description": "Framework for studying fluid dynamics.",
            "name": "py-fluiddyn"
        },
        {
            "description": "Framework for studying fluid dynamics with simulations.",
            "name": "py-fluidsim"
        },
        {
            "description": "Formulaic is a high-performance implementation of Wilkinson formulas for\nPython.",
            "name": "py-formulaic"
        },
        {
            "description": "Free Unified Rendering in Python.",
            "name": "py-fury"
        },
        {
            "description": "Gensim is a Python library for topic modelling, document indexing and\nsimilarity retrieval with large corpora. Target audience is the natural\nlanguage processing (NLP) and information retrieval (IR) community.",
            "name": "py-gensim"
        },
        {
            "description": "Tool to convert geopandas vector data into rasterized xarray data.",
            "name": "py-geocube"
        },
        {
            "description": "This is a Python wrapper for the fortran library used in the R package\nglmnet.",
            "name": "py-glmnet"
        },
        {
            "description": "This is a python version of the popular glmnet library (beta release).\nGlmnet fits the entire lasso or elastic-net regularization path for\nlinear regression, logistic and multinomial regression models, poisson\nregression and the cox model.",
            "name": "py-glmnet-python"
        },
        {
            "description": "A toolbox for accurate single-trial estimates in fMRI time-series data.",
            "name": "py-glmsingle"
        },
        {
            "description": "GluonCV provides implementations of state-of-the-art (SOTA) deep\nlearning algorithms in computer vision. It aims to help engineers,\nresearchers, and students quickly prototype products, validate new ideas\nand learn computer vision.",
            "name": "py-gluoncv"
        },
        {
            "description": "Python scripts to find enrichment of GO terms",
            "name": "py-goatools"
        },
        {
            "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation\nenvironment (ASE).",
            "name": "py-gpaw"
        },
        {
            "description": "The Gaussian Process Toolbox.",
            "name": "py-gpy"
        },
        {
            "description": "Performs global optimization with different acquisition functions. Among\nother functionalities, it is possible to use GPyOpt to optimize physical\nexperiments (sequentially or in batches) and tune the parameters of\nMachine Learning algorithms. It is able to handle large data sets via\nsparse Gaussian process models.",
            "name": "py-gpyopt"
        },
        {
            "description": "GPyTorch is a Gaussian process library implemented using PyTorch.\nGPyTorch is designed for creating scalable, flexible, and modular\nGaussian process models with ease.",
            "name": "py-gpytorch"
        },
        {
            "description": "GraphCast: Learning skillful medium-range global weather forecasting.",
            "name": "py-graphcast"
        },
        {
            "description": "The gridDataFormats package provides classes to unify reading and\nwriting n-dimensional datasets. One can read grid data from files, make\nthem available as a Grid object, and write out the data again.",
            "name": "py-griddataformats"
        },
        {
            "description": "OpenAI Gym is a toolkit for developing and comparing reinforcement\nlearning algorithms. This is the gym open-source library, which gives\nyou access to a standardized set of environments.",
            "name": "py-gym"
        },
        {
            "description": "Cloud-native genomic dataframes and batch computing (Python API)",
            "name": "py-hail"
        },
        {
            "description": "Hclust2 is a handy tool for plotting heat-maps with several useful\noptions to produce high quality figures that can be used in publication.",
            "name": "py-hclust2"
        },
        {
            "description": "HDBSCAN - Hierarchical Density-Based Spatial Clustering of Applications\nwith Noise. Performs DBSCAN over varying epsilon values and integrates\nthe result to find a clustering that gives the best stability over\nepsilon. This allows HDBSCAN to find clusters of varying densities\n(unlike DBSCAN), and be more robust to parameter selection. In practice\nthis means that HDBSCAN returns a good clustering straight away with\nlittle or no parameter tuning -- and the primary parameter, minimum\ncluster size, is intuitive and easy to select. HDBSCAN is ideal for\nexploratory data analysis; it's a fast and robust algorithm that you can\ntrust to return meaningful clusters (if there are any).",
            "name": "py-hdbscan"
        },
        {
            "description": "healpy is a Python package to handle pixelated data on the sphere.",
            "name": "py-healpy"
        },
        {
            "description": "Heat is a flexible and seamless open-source software for high\nperformance data analytics and machine learning. It provides highly\noptimized algorithms and data structures for tensor computations using\nCPUs, GPUs and distributed cluster systems on top of MPI.",
            "name": "py-heat"
        },
        {
            "description": "Machine Learning for High Energy Physics",
            "name": "py-hep-ml"
        },
        {
            "description": "hepstats is a library for statistical inference aiming to cover the\nneeds in High Energy Physics. It is part of the Scikit-HEP project.",
            "name": "py-hepstats"
        },
        {
            "description": "Hist classes and utilities",
            "name": "py-hist"
        },
        {
            "description": "hmmlearn is a set of algorithms for unsupervised learning and inference\nof Hidden Markov Models.",
            "name": "py-hmmlearn"
        },
        {
            "description": "A distributed Hyperband implementation with lots of room for\nimprovement",
            "name": "py-hpbandster"
        },
        {
            "description": "HTSeq is a Python package that provides infrastructure to process data\nfrom high-throughput sequencing assays.",
            "name": "py-htseq"
        },
        {
            "description": "Hyperopt is a Python library for serial and parallel optimization over\nawkward search spaces, which may include real-valued, discrete, and\nconditional dimensions.",
            "name": "py-hyperopt"
        },
        {
            "description": "A Python Perceptual Image Hashing Module",
            "name": "py-imagehash"
        },
        {
            "description": "imbalanced-learn is a python package offering a number of re-sampling\ntechniques commonly used in datasets showing strong between-class\nimbalance. It is compatible with scikit-learn and is part of scikit-\nlearn-contrib projects.",
            "name": "py-imbalanced-learn"
        },
        {
            "description": "A library for image augmentation in machine learning experiments,\nparticularly convolutional neural networks. Supports the augmentation of\nimages, keypoints/landmarks, bounding boxes, heatmaps and segmentation\nmaps in a variety of different ways.",
            "name": "py-imgaug"
        },
        {
            "description": "Normalize intensities of images from various MRI modalities",
            "name": "py-intensity-normalization"
        },
        {
            "description": "An interactive toolkit for assembly and analysis of restriction-site\nassociated genomic data sets (e.g., RAD, ddRAD, GBS) for population\ngenetic and phylogenetic studies.",
            "name": "py-ipyrad"
        },
        {
            "description": "Bacis iterative statistics implementation.",
            "name": "py-iterative-stats"
        },
        {
            "description": "Differentiate, compile, and transform Numpy code. JAX is a Python\nlibrary for accelerator-oriented array computation and program\ntransformation, designed for high-performance numerical computing and\nlarge-scale machine learning.",
            "name": "py-jax"
        },
        {
            "description": "XLA library for Jax. jaxlib is the support library for JAX. While JAX\nitself is a pure Python package, jaxlib contains the binary (C/C++)\nparts of the library, including Python bindings, the XLA compiler, the\nPJRT runtime, and a handful of handwritten kernels.",
            "name": "py-jaxlib"
        },
        {
            "description": "Python implementations of the k-modes and k-prototypes clustering\nalgorithms for clustering categorical data.",
            "name": "py-kmodes"
        },
        {
            "description": "Kosh allows codes to store, query, share data via an easy-to-use Python\nAPI. Kosh lies on top of Sina and can use any database backend supported\nby Sina. In adition Kosh aims to make data access and sharing as simple\nas possible.",
            "name": "py-kosh"
        },
        {
            "description": "Wavelet scattering transforms in Python with GPU acceleration.",
            "name": "py-kymatio"
        },
        {
            "description": "This Python module contain freestanding implementations of electrostatic\nforward models incorporated in LFPy",
            "name": "py-lfpykit"
        },
        {
            "description": "Latin Hypercube Sampling with Multi-Dimensional Uniformity (LHS-MDU)\nfrom Deutsch and Deutsch, Latin hypercube sampling with multidimensional\nuniformity.",
            "name": "py-lhsmdu"
        },
        {
            "description": "Library for managing ensemble-like collections of computations.",
            "name": "py-libensemble"
        },
        {
            "description": "A python package for music and audio analysis.",
            "name": "py-librosa"
        },
        {
            "description": "Survival analysis was originally developed and applied heavily by the\nactuarial and medical community. Its purpose was to answer *why do\nevents occur now versus later* under uncertainty (where *events* might\nrefer to deaths, disease remission, etc.). *lifelines* is a pure Python\nimplementation of the best parts of survival analysis.",
            "name": "py-lifelines"
        },
        {
            "description": "LightGBM is a gradient boosting framework that uses tree based learning\nalgorithms.",
            "name": "py-lightgbm"
        },
        {
            "description": "A linear operator implementation, primarily designed for finite-\ndimensional positive definite operators (i.e. kernel matrices).",
            "name": "py-linear-operator"
        },
        {
            "description": "A python library to build Model Trees with Linear Models at the leaves.",
            "name": "py-linear-tree"
        },
        {
            "description": "The line enhancer is only used by crYOLO internally",
            "name": "py-lineenhancer"
        },
        {
            "description": "Least-Squares Minimization with Bounds and Constraints",
            "name": "py-lmfit"
        },
        {
            "description": "Tools for calculating sequence properties of disordered proteins",
            "name": "py-localcider"
        },
        {
            "description": "Work with Loom files for single-cell RNA-seq data.",
            "name": "py-loompy"
        },
        {
            "description": "LPIPS Similarity metric",
            "name": "py-lpips"
        },
        {
            "description": "Fast spectrogram phase recovery using Local Weighted Sums",
            "name": "py-lws"
        },
        {
            "description": "MACS: Model-based Analysis for ChIP-Seq",
            "name": "py-macs3"
        },
        {
            "description": "Classification Schemes for Choropleth Maps.",
            "name": "py-mapclassify"
        },
        {
            "description": "Implementation of the Markov clustering (MCL) algorithm in python",
            "name": "py-markov-clustering"
        },
        {
            "description": "MDAnalysis is a Python toolkit to analyze molecular dynamics\ntrajectories generated by a wide range of popular simulation packages\nincluding DL_Poly, CHARMM, Amber, NAMD, LAMMPS, and Gromacs. (See the\nlists of supported trajectory formats and topology formats.)",
            "name": "py-mdanalysis"
        },
        {
            "description": "MELD is a tool for inferring the structure of biomolecules from sparse,\nambiguous, or noisy data.",
            "name": "py-meldmd"
        },
        {
            "description": "Melissa is a file-avoiding, adaptive, fault-tolerant and elastic\nframework, to run large-scale sensitivity analysis or deep-surrogate\ntraining on supercomputers. This package builds the launcher and server\nmodules.",
            "name": "py-melissa-core"
        },
        {
            "description": "MetaPhlAn is a computational tool for profiling the composition of\nmicrobial communities (Bacteria, Archaea and Eukaryotes) from\nmetagenomic shotgun sequencing data (i.e. not 16S) with species-level.",
            "name": "py-metaphlan"
        },
        {
            "description": "Collection of tools for reading, visualizing and performing calculations\nwith weather data.",
            "name": "py-metpy"
        },
        {
            "description": "metric-learn contains efficient Python implementations of several\npopular supervised and weakly-supervised metric learning algorithms. As\npart of scikit-learn-contrib, the API of metric-learn is compatible with\nscikit-learn, the leading library for machine learning in Python. This\nallows to use all the scikit-learn routines (for pipelining, model\nselection, etc) with metric learning algorithms through a unified\ninterface.",
            "name": "py-metric-learn"
        },
        {
            "description": "Repository of scripts and libraries for using the MG-RAST API and MG-\nRAST data.",
            "name": "py-mg-rast-tools"
        },
        {
            "description": "Mikado is a lightweight Python3 pipeline whose purpose is to facilitate\nthe identification of expressed loci from RNA-Seq data * and to select\nthe best models in each locus.",
            "name": "py-mikado"
        },
        {
            "description": "MISO (Mixture of Isoforms) is a probabilistic framework that quantitates\nthe expression level of alternatively spliced genes from RNA-Seq data,\nand identifies differentially regulated isoforms or exons across\nsamples.",
            "name": "py-misopy"
        },
        {
            "description": "Mizani is a scales package for graphics. It is based on Hadley Wickham's\nScales package.",
            "name": "py-mizani"
        },
        {
            "description": "MLflow: A Platform for ML Development and Productionization.",
            "name": "py-mlflow"
        },
        {
            "description": "Mlxtend (machine learning extensions) is a Python library of useful\ntools for the day-to-day data science tasks.",
            "name": "py-mlxtend"
        },
        {
            "description": "MNE python project for MEG and EEG data analysis.",
            "name": "py-mne"
        },
        {
            "description": "MNE-BIDS: Organizing MEG, EEG, and iEEG data according to the BIDS\nspecification and facilitating their analysis with MNE-Python.",
            "name": "py-mne-bids"
        },
        {
            "description": "The py-motmetrics library provides a Python implementation of metrics\nfor benchmarking multiple object trackers (MOT).",
            "name": "py-motmetrics"
        },
        {
            "description": "Plotting scripts for long read sequencing data",
            "name": "py-nanoplot"
        },
        {
            "description": "Nested sampling algorithms for evaluating Bayesian evidence.",
            "name": "py-nestle"
        },
        {
            "description": "NetKet is an open-source project, delivering cutting-edge methods for\nthe study of many-body quantum systems with artificial neural networks\nand machine learning techniques.",
            "name": "py-netket"
        },
        {
            "description": "Netpyne: A python package to facilitate the development, parallel\nsimulation, optimization and analysis of multiscale biological neuronal\nnetworks in NEURON.",
            "name": "py-netpyne"
        },
        {
            "description": "NetworKit is a growing open-source toolkit for large-scale network\nanalysis. Its aim is to provide tools for the analysis of large networks\nin the size range from thousands to billions of edges. For this purpose,\nit implements efficient graph algorithms, many of them parallel to\nutilize multicore architectures. These are meant to compute standard\nmeasures of network analysis, such as degree sequences, clustering\ncoefficients, and centrality measures. In this respect, NetworKit is\ncomparable to packages such as NetworkX, albeit with a focus on\nparallelism and scalability.",
            "name": "py-networkit"
        },
        {
            "description": "NetworkX is a Python package for the creation, manipulation, and study\nof the structure, dynamics, and functions of complex networks.",
            "name": "py-networkx"
        },
        {
            "description": "The Python Toolbox for Neurophysiological Signal Processing. This\npackage is the continuation of NeuroKit 1. It's a user-friendly package\nproviding easy access to advanced biosignal processing routines.\nResearchers and clinicians without extensive knowledge of programming or\nbiomedical signal processing can analyze physiological data with only\ntwo lines of code.",
            "name": "py-neurokit2"
        },
        {
            "description": "Python library neuron morphology analysis",
            "name": "py-neurom"
        },
        {
            "description": "A Python Toolbox for Multimodal Neural Data Representation Analysis.",
            "name": "py-neurora"
        },
        {
            "description": "A collection of tools for representing and anlyzing neuroscientific\ndata.",
            "name": "py-neurotools"
        },
        {
            "description": "Statistical learning for neuroimaging in Python.",
            "name": "py-nilearn"
        },
        {
            "description": "Neuroimaging in Python: Pipelines and Interfaces.",
            "name": "py-nipype"
        },
        {
            "description": "Modeling and Statistical analysis of fMRI data in Python.",
            "name": "py-nistats"
        },
        {
            "description": "NiTransforms -- Neuroimaging spatial transforms in Python.",
            "name": "py-nitransforms"
        },
        {
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)",
            "name": "py-niworkflows"
        },
        {
            "description": "Solves automatic numerical differentiation problems in one or more\nvariables.",
            "name": "py-numdifftools"
        },
        {
            "description": "This package creates a quaternion type in python, and further enables\nnumpy to create and manipulate arrays of quaternions. The usual\nalgebraic operations (addition and multiplication) are available, along\nwith numerous properties like norm and various types of distance\nmeasures between two quaternions. There are also additional functions\nlike \"squad\" and \"slerp\" interpolation, and conversions to and from\naxis-angle, matrix, and Euler-angle representations of rotations. The\ncore of the code is written in C for speed.",
            "name": "py-numpy-quaternion"
        },
        {
            "description": "ObsPy is an open-source project dedicated to provide a Python framework\nfor processing seismological data",
            "name": "py-obspy"
        },
        {
            "description": "The OpenAI Python library provides convenient access to the OpenAI API\nfrom applications written in the Python language. It includes a pre-\ndefined set of classes for API resources that initialize themselves\ndynamically from API responses which makes it compatible with a wide\nrange of versions of the OpenAI API.",
            "name": "py-openai"
        },
        {
            "description": "OpenMC is a community-developed Monte Carlo neutron and photon transport\nsimulation code. It is capable of performing fixed source, k-eigenvalue,\nand subcritical multiplication calculations on models built using either\na constructive solid geometry or CAD representation. OpenMC supports\nboth continuous-energy and multigroup transport. The continuous-energy\nparticle interaction data is based on a native HDF5 format that can be\ngenerated from ACE files produced by NJOY. Parallelism is enabled via a\nhybrid MPI and OpenMP programming model.",
            "name": "py-openmc"
        },
        {
            "description": "Python visualization tools for openPMD files",
            "name": "py-openpmd-viewer"
        },
        {
            "description": "The Output Parse-Plot Python (OPPPY) library is a python based data\nanalysis library designed to extract, store, and plot information from\noutput and dump files generated by scientific software packages.",
            "name": "py-opppy"
        },
        {
            "description": "OSQP: The Operator Splitting QP Solver",
            "name": "py-osqp"
        },
        {
            "description": "A Bacterial Pangenome Analysis Pipeline",
            "name": "py-panaroo"
        },
        {
            "description": "The Parameterization Framework.",
            "name": "py-paramz"
        },
        {
            "description": "Ancestral character reconstruction and visualisation for rooted\nphylogenetic trees.",
            "name": "py-pastml"
        },
        {
            "description": "An open-source toolkit for computational pathology and machine learning.",
            "name": "py-pathml"
        },
        {
            "description": "A Python package for describing statistical models and for building\ndesign matrices.",
            "name": "py-patsy"
        },
        {
            "description": "PennyLane is a Python quantum machine learning library by Xanadu Inc.",
            "name": "py-pennylane"
        },
        {
            "description": "Phonopy is an open source package for phonon calculations at harmonic\nand quasi-harmonic levels.",
            "name": "py-phonopy"
        },
        {
            "description": "phydms enables phylogenetic analyses using deep mutational scanning data\nto inform the substitution models. It implements Experimentally informed\ncodon models (ExpCM) for phylogenetic inference and the detection of\nbiologically interesting selection.",
            "name": "py-phydms"
        },
        {
            "description": "Standard input format for Particle-In-Cell codes",
            "name": "py-picmistandard"
        },
        {
            "description": "plotnine is an implementation of a grammar of graphics in Python, it is\nbased on ggplot2. The grammar allows users to compose plots by\nexplicitly mapping data to the visual objects that make up the plot.",
            "name": "py-plotnine"
        },
        {
            "description": "Fast, flexible and easy to use probabilistic modelling in Python.",
            "name": "py-pomegranate"
        },
        {
            "description": "This repository contains a Python package named PostCactus for\npostprocessing data from numerical simulations performed with the\nEinstein Toolkit.",
            "name": "py-postcactus"
        },
        {
            "description": "This open source Python library provide several solvers for\noptimization problems related to Optimal Transport for signal, image\nprocessing and machine learning.",
            "name": "py-pot"
        },
        {
            "description": "ProjectQ is an open-source software framework for quantum computing\nstarted at ETH Zurich. It allows users to implement their quantum\nprograms in Python using a powerful and intuitive syntax. ProjectQ can\nthen translate these programs to any type of back-end, be it a simulator\nrun on a classical computer of an actual quantum chip.",
            "name": "py-projectq"
        },
        {
            "description": "Proper scoring rules in Python.",
            "name": "py-properscoring"
        },
        {
            "description": "Code Generator for Small Sparse Matrix Multiplication",
            "name": "py-pspamm"
        },
        {
            "description": "A wrapper for the 6S Radiative Transfer Model to make it easy to run\nsimulations with a variety of input parameters, and to produce outputs\nin an easily processable form.",
            "name": "py-py6s"
        },
        {
            "description": "A Python package for forward and inverse Abel transforms.",
            "name": "py-pyabel"
        },
        {
            "description": "PyAMG is a library of Algebraic Multigrid (AMG) solvers with a\nconvenient Python interface.",
            "name": "py-pyamg"
        },
        {
            "description": "pyani is a Python3 module that provides support for calculating average\nnucleotide identity (ANI) and related measures for whole genome\ncomparisons, and rendering relevant graphical summary output. Where\navailable, it takes advantage of multicore systems, and can integrate\nwith SGE/OGE-type job schedulers for the sequence comparisons.",
            "name": "py-pyani"
        },
        {
            "description": "bids: interface with datasets conforming to BIDS",
            "name": "py-pybids"
        },
        {
            "description": "Py-BOBYQA is a flexible package for solving bound-constrained general\nobjective minimization, without requiring derivatives of the objective.",
            "name": "py-pybobyqa"
        },
        {
            "description": "PyBrain is the Swiss army knife for neural networking.",
            "name": "py-pybrain"
        },
        {
            "description": "PyCBC is a software package used to explore astrophysical sources of\ngravitational waves. It contains algorithms to analyze gravitational-\nwave data from the LIGO and Virgo detectors, detect coalescing compact\nbinaries, and measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational waves and\nis used in the flagship analysis of LIGO and Virgo data.",
            "name": "py-pycbc"
        },
        {
            "description": "Python Cortical mapping software for fMRI data.",
            "name": "py-pycortex"
        },
        {
            "description": "An implementation of the Data Access Protocol.",
            "name": "py-pydap"
        },
        {
            "description": "PyDMD is a Python package that uses Dynamic Mode Decomposition for a\ndata-driven model simplification based on spatiotemporal coherent\nstructures.",
            "name": "py-pydmd"
        },
        {
            "description": "The pyDOE package is designed to help the scientist, engineer,\nstatistician, etc., to construct appropriate experimental designs",
            "name": "py-pydoe"
        },
        {
            "description": "pyDOE2 is a fork of the pyDOE package that is designed to help the\nscientist, engineer, statistician, etc., to construct appropriate\nexperimental designs.",
            "name": "py-pydoe2"
        },
        {
            "description": "PDV is a 1D graphics and data analysis tool, heavily based on the ULTRA\nplotting tool",
            "name": "py-pydv"
        },
        {
            "description": "pyGPs is a Python library for Gaussian Process (GP) Regression and\nClassification.",
            "name": "py-pygps"
        },
        {
            "description": "CERN PyHEADTAIL numerical n-body simulation code for simulating macro-\nparticle beam dynamics with collective effects.",
            "name": "py-pyheadtail"
        },
        {
            "description": "Many useful operators, however, do not lend themselves to an explicit\nmatrix representation when used to solve large-scale problems. PyLops\noperators, on the other hand, still represent a matrix and can be\ntreated in a similar way, but do not rely on the explicit creation of a\ndense (or sparse) matrix itself. Conversely, the forward and adjoint\noperators are represented by small pieces of codes that mimic the effect\nof the matrix on a vector or another matrix.",
            "name": "py-pylops"
        },
        {
            "description": "Python Materials Genomics is a robust materials analysis code that\ndefines core object representations for structures and molecules with\nsupport for many electronic structure codes. It is currently the core\nanalysis code powering the Materials Project.",
            "name": "py-pymatgen"
        },
        {
            "description": "Convenient reader for Matlab mat files.",
            "name": "py-pymatreader"
        },
        {
            "description": "PyMC3 is a Python package for Bayesian statistical modeling and\nProbabilistic Machine Learning focusing on advanced Markov chain Monte\nCarlo (MCMC) and variational inference (VI) algorithms. Its flexibility\nand extensibility make it applicable to a large suite of problems.",
            "name": "py-pymc3"
        },
        {
            "description": "Multi-Objective Optimization in Python",
            "name": "py-pymoo"
        },
        {
            "description": "PyNNDescent is a Python nearest neighbor descent for approximate nearest\nneighbors.",
            "name": "py-pynndescent"
        },
        {
            "description": "PyNucleus is a finite element code that specifically targets nonlocal\noperators.",
            "name": "py-pynucleus"
        },
        {
            "description": "Pyomo is a Python-based open-source software package that supports a\ndiverse set of optimization capabilities for formulating and analyzing\noptimization models.",
            "name": "py-pyomo"
        },
        {
            "description": "Pulse is a package used to handle PSRFITS files and perform subsequent\nanalyses on pulse profiles.",
            "name": "py-pypulse"
        },
        {
            "description": "Pyrocko is an open source seismology toolbox and library, written in the\nPython programming language",
            "name": "py-pyrocko"
        },
        {
            "description": "PySCF is a collection of electronic structure programs powered by\nPython.",
            "name": "py-pyscf"
        },
        {
            "description": "Sequence Elements Enrichment Analysis (SEER), python implementation",
            "name": "py-pyseer"
        },
        {
            "description": "Simulate electronic circuit using Python and the Ngspice / Xyce\nsimulators",
            "name": "py-pyspice"
        },
        {
            "description": "Cortical neuroimaging visualization in Python.",
            "name": "py-pysurfer"
        },
        {
            "description": "A set of command line utilities and Python modules that implement the\nFMASK algorithm for Landsat and Sentinel-2",
            "name": "py-python-fmask"
        },
        {
            "description": "Preconditoned ICA for Real Data.",
            "name": "py-python-picard"
        },
        {
            "description": "pyts is a Python package for time series classification. It aims to make\ntime series classification easily accessible by providing preprocessing\nand utility tools, and implementations of state-of-the-art algorithms.\nMost of these algorithms transform time series, thus pyts provides\nseveral tools to perform these transformations.",
            "name": "py-pyts"
        },
        {
            "description": "Work with triangular unstructured grids and the data on them.",
            "name": "py-pyugrid"
        },
        {
            "description": "Pyvolve is an open-source Python module for simulating sequences along a\nphylogenetic tree according to continuous-time Markov models of sequence\nevolution",
            "name": "py-pyvolve"
        },
        {
            "description": "Python interface to the QDLDL free LDL factorization routine for quasi-\ndefinite linear systems: Ax = b.",
            "name": "py-qdldl"
        },
        {
            "description": "Aer is a high performance simulator for quantum circuits that includes\nnoise models",
            "name": "py-qiskit-aer"
        },
        {
            "description": "Qiskit Nature is an open-source framework which supports solving quantum\nmechanical natural science problems using quantum computing algorithms",
            "name": "py-qiskit-nature"
        },
        {
            "description": "Qiskit is an open-source SDK for working with quantum computers at the\nlevel of extended quantum circuits, operators, and algorithms.",
            "name": "py-qiskit-terra"
        },
        {
            "description": "Unified interface to convex Quadratic Programming (QP) solvers available\nin Python.",
            "name": "py-qpsolvers"
        },
        {
            "description": "Qsymm is a symmetry finder and symmetric Hamiltonian generator. It\nautomatically generates model Hamiltonians from symmetry constraints and\nfinds the full symmetry group of your Hamiltonian.",
            "name": "py-qsymm"
        },
        {
            "description": "Interpret numpy arrays as quaternionic arrays with numba acceleration",
            "name": "py-quaternionic"
        },
        {
            "description": "QuTiP: The Quantum Toolbox in Python",
            "name": "py-qutip"
        },
        {
            "description": "The QuTiP quantum information processing package",
            "name": "py-qutip-qip"
        },
        {
            "description": "RDT is a Python library used to transform data for data science\nlibraries and preserve the transformations in order to revert them as\nneeded.",
            "name": "py-rdt"
        },
        {
            "description": "The reproject package is a Python package to reproject astronomical\nimages using various techniques via a uniform interface. By\nreprojection, we mean the re-gridding of images from one world\ncoordinate system to another (for example changing the pixel resolution,\norientation, coordinate system). Currently, we have implemented\nreprojection of celestial images by interpolation (like SWARP), as well\nas by finding the exact overlap between pixels on the celestial sphere\n(like Montage). It can also reproject to/from HEALPIX projections by\nrelying on the astropy-healpix package.",
            "name": "py-reproject"
        },
        {
            "description": "Efficient sample rate conversion in python",
            "name": "py-resampy"
        },
        {
            "description": "rasterio xarray extension.",
            "name": "py-rioxarray"
        },
        {
            "description": "River is a Python library for online machine learning. It aims to be the\nmost user-friendly library for doing machine learning on streaming data.\nRiver is the result of a merge between creme and scikit-multiflow.",
            "name": "py-river"
        },
        {
            "description": "Robocrystallographer is a tool to generate text descriptions of crystal\nstructures. Similar to how a real-life crystallographer would analyse a\nstructure, robocrystallographer looks at the symmetry, local\nenvironment, and extended connectivity when generating a description.\nThe package includes utilities for identifying molecule names, component\norientations, heterostructure information, and more.",
            "name": "py-robocrys"
        },
        {
            "description": "Representational Similarity Analysis (RSA) in Python.",
            "name": "py-rsatoolbox"
        },
        {
            "description": "Python implementations of commonly used sensitivity analysis methods.",
            "name": "py-salib"
        },
        {
            "description": "Scanpy is a scalable toolkit for analyzing single-cell gene expression\ndata built jointly with anndata.",
            "name": "py-scanpy"
        },
        {
            "description": "Fuzzy logic toolkit for SciPy",
            "name": "py-scikit-fuzzy"
        },
        {
            "description": "Image processing algorithms for SciPy, including IO, morphology,\nfiltering, warping, color manipulation, object detection, etc.",
            "name": "py-scikit-image"
        },
        {
            "description": "A set of python modules for machine learning and data mining.",
            "name": "py-scikit-learn"
        },
        {
            "description": "A set of useful tools compatible with scikit-learn scikit-learn-extra is\na Python module for machine learning that extends scikit-learn. It\nincludes algorithms that are useful but do not satisfy the scikit-learn\ninclusion criteria, for instance due to their novelty or lower citation\nnumber.",
            "name": "py-scikit-learn-extra"
        },
        {
            "description": "Scikit-Optimize, or skopt, is a simple and efficient library to minimize\n(very) expensive and noisy black-box functions. It implements several\nmethods for sequential model-based optimization. skopt aims to be\naccessible and easy to use in many contexts. The library is built on top\nof NumPy, SciPy and Scikit-Learn.",
            "name": "py-scikit-optimize"
        },
        {
            "description": "Sparse matrix tools extending scipy.sparse, but with incompatible\nlicenses",
            "name": "py-scikit-sparse"
        },
        {
            "description": "Odes is a scikit toolkit for scipy to add extra ode solvers.\nSpecifically it interfaces the Sundials solvers cvode, cvodes, ida and\nidas. It this way it provides extra modern ode and dae solvers you can\nuse, extending the capabilities offered in scipy.integrade.ode.",
            "name": "py-scikits-odes"
        },
        {
            "description": "Software driving the automated exploration of chemical reaction networks",
            "name": "py-scine-chemoton"
        },
        {
            "description": "Calculation handler for SCINE Chemoton",
            "name": "py-scine-puffin"
        },
        {
            "description": "SCS: splitting conic solver",
            "name": "py-scs"
        },
        {
            "description": "The SDMetrics library provides a set of dataset-agnostic tools for\nevaluating the quality of a synthetic database by comparing it to the\nreal database that it is modeled after.",
            "name": "py-sdmetrics"
        },
        {
            "description": "Seaborn: statistical data visualization. Seaborn is a library for making\nattractive and informative statistical graphics in Python. It is built\non top of matplotlib and tightly integrated with the PyData stack,\nincluding support for numpy and pandas data structures and statistical\nroutines from scipy and statsmodels.",
            "name": "py-seaborn"
        },
        {
            "description": "SfePy (https://sfepy.org/) is a software for solving systems of coupled\npartial differential equations (PDEs) by the finite element method in\n1D, 2D and 3D. It can be viewed both as black-box PDE solver, and as a\nPython package which can be used for building custom applications.",
            "name": "py-sfepy"
        },
        {
            "description": "SHAP (SHapley Additive exPlanations): a unified approach to explain the\noutput of any machine learning model.",
            "name": "py-shap"
        },
        {
            "description": "Convert scikit-learn models to ONNX",
            "name": "py-skl2onnx"
        },
        {
            "description": "SMAC is a tool for algorithm configuration to optimize the parameters of\narbitrary algorithms, including hyperparameter optimization of Machine\nLearning algorithms.",
            "name": "py-smac"
        },
        {
            "description": "Variants of the synthetic minority oversampling technique (SMOTE) for\nimbalanced learning",
            "name": "py-smote-variants"
        },
        {
            "description": "SNCosmo is a Python library for high-level supernova cosmology analysis.",
            "name": "py-sncosmo"
        },
        {
            "description": "Sobol sequence implementation in python",
            "name": "py-sobol-seq"
        },
        {
            "description": "This package is implementation of Improving spherical k-means for\ndocument clustering. Fast initialization, sparse centroid projection,\nand efficient cluster labeling (Kim et al., 2020).",
            "name": "py-soyclustering"
        },
        {
            "description": "This library provides multi-dimensional sparse arrays.",
            "name": "py-sparse"
        },
        {
            "description": "SPGL1 is a solver for large-scale one-norm regularized least squares. It\nis designed to solve any of the following three problems: Basis pursuit\ndenoise (BPDN): minimize ||x||_1 subject to ||Ax - b||_2 <= sigma, Basis\npursuit (BP): minimize ||x||_1 subject to Ax = b Lasso: minimize ||Ax -\nb||_2 subject to ||x||_1 <= tau, The matrix A can be defined explicitly,\nor as an operator that returns both both Ax and A'b. SPGL1 can solve\nthese three problems in both the real and complex domains.",
            "name": "py-spgl1"
        },
        {
            "description": "Utilities for analyzing electrophysiological data",
            "name": "py-spykeutils"
        },
        {
            "description": "Python code for calculating non-parametric morphological diagnostics of\ngalaxy images.",
            "name": "py-statmorph"
        },
        {
            "description": "Statistical computations and models for use with SciPy",
            "name": "py-statsmodels"
        },
        {
            "description": "Open source library for continuous-variable quantum computation",
            "name": "py-strawberryfields"
        },
        {
            "description": "Symbolic Fitting; fitting as it should be.",
            "name": "py-symfit"
        },
        {
            "description": "A python library to define the components of a synchrotron beamline and\ntheir positions. They can be read/write to json files. It is used by\nOASYS as a common tool to define sources and optical systems that are\nthen exported to the different add-ons.",
            "name": "py-syned"
        },
        {
            "description": "TensorFlow is an open source machine learning framework for everyone.",
            "name": "py-tensorflow"
        },
        {
            "description": "TensorLy is a Python library that aims at making tensor learning simple\nand accessible. It allows to easily perform tensor decomposition, tensor\nlearning and tensor algebra. Its backend system allows to seamlessly\nperform computation with NumPy, PyTorch, JAX, MXNet, TensorFlow or CuPy,\nand run methods at scale on CPU or GPU.",
            "name": "py-tensorly"
        },
        {
            "description": "The TF-Keras library is a pure TensorFlow implementation of Keras, based\non the legacy tf.keras codebase. Note that the \"main\" version of Keras\nis now Keras 3 (formerly Keras Core), which is a multi-backend\nimplementation of Keras, supporting JAX, PyTorch, and TensorFlow. Keras\n3 is being developed at keras-team/keras.",
            "name": "py-tf-keras"
        },
        {
            "description": "Optimizing compiler for evaluating mathematical expressions on CPUs and\nGPUs.",
            "name": "py-theano"
        },
        {
            "description": "A library for the calculation of hafnians, Hermite polynomials and\nGaussian boson sampling.",
            "name": "py-thewalrus"
        },
        {
            "description": "TomoPy is an open-source Python package for tomographic data processing\nand image reconstruction.",
            "name": "py-tomopy"
        },
        {
            "description": "PyTorch Extension Library of Optimized Graph Cluster Algorithms.",
            "name": "py-torch-cluster"
        },
        {
            "description": "High-fidelity performance metrics for generative models in PyTorch",
            "name": "py-torch-fidelity"
        },
        {
            "description": "Graph Neural Network Library for PyTorch.",
            "name": "py-torch-geometric"
        },
        {
            "description": "PyTorch Extension Library of Optimized Autograd Sparse Matrix\nOperations.",
            "name": "py-torch-sparse"
        },
        {
            "description": "A collection of open source benchmarks used to evaluate PyTorch\nperformance.",
            "name": "py-torchbenchmark"
        },
        {
            "description": "ODE solvers and adjoint sensitivity analysis in PyTorch.",
            "name": "py-torchdiffeq"
        },
        {
            "description": "TorchGeo: datasets, samplers, transforms, and pre-trained models for\ngeospatial data.",
            "name": "py-torchgeo"
        },
        {
            "description": "Machine learning metrics for distributed, scalable PyTorch applications.",
            "name": "py-torchmetrics"
        },
        {
            "description": "A Python Automated Machine Learning tool that optimizes machine\nlearning pipelines using genetic programming.",
            "name": "py-tpot"
        },
        {
            "description": "Import, export, process, analyze and view triangular meshes",
            "name": "py-trimesh"
        },
        {
            "description": "UCSF pyem is a collection of Python modules and command-line utilities\nfor electron microscopy of biological samples.",
            "name": "py-ucsf-pyem"
        },
        {
            "description": "Ultralytics YOLOv8, developed by Ultralytics, is a cutting-edge, state-\nof-the-art (SOTA) model that builds upon the success of previous YOLO\nversions and introduces new features and improvements to further boost\nperformance and flexibility. YOLOv8 is designed to be fast, accurate,\nand easy to use, making it an excellent choice for a wide range of\nobject detection, image segmentation and image classification tasks.",
            "name": "py-ultralytics"
        },
        {
            "description": "Uniform Manifold Approximation and Projection (UMAP) is a dimension\nreduction technique that can be used for visualisation similarly to\nt-SNE, but also for general non-linear dimension reduction.",
            "name": "py-umap-learn"
        },
        {
            "description": "Tools for handling Unique Molecular Identifiers in NGS data sets",
            "name": "py-umi-tools"
        },
        {
            "description": "Uncertainty Toolbox: a python toolbox for predictive uncertainty\nquantification, calibration, metrics, and visualization.",
            "name": "py-uncertainty-toolbox"
        },
        {
            "description": "Xarray extension for unstructured climate and global weather data\nanalysis and visualization",
            "name": "py-uxarray"
        },
        {
            "description": "Python library for reading, writing, and manipulating large-scale\nvasculature datasets",
            "name": "py-vascpy"
        },
        {
            "description": "VCF-kit is a command-line based collection of utilities for performing\nanalysis on Variant Call Format (VCF) files.",
            "name": "py-vcf-kit"
        },
        {
            "description": "Visdom aims to facilitate visualization of (remote) data with an\nemphasis on supporting scientific experimentation.",
            "name": "py-visdom"
        },
        {
            "description": "WAVES (LANL code C23004) is a computational science and engineering\nworkflow tool that integrates parametric studies with traditional\nsoftware build systems.",
            "name": "py-waves"
        },
        {
            "description": "wradlib is designed to assist you in the most important steps of\nprocessing weather radar data. These may include: reading common data\nformats, georeferencing, converting reflectivity to rainfall intensity,\nidentifying and correcting typical error sources (such as clutter or\nattenuation) and visualising the data.",
            "name": "py-wradlib"
        },
        {
            "description": "N-D labeled arrays and datasets in Python",
            "name": "py-xarray"
        },
        {
            "description": "Regridding utility for xarray",
            "name": "py-xarray-regrid"
        },
        {
            "description": "XGBoost is an optimized distributed gradient boosting library designed\nto be highly efficient, flexible and portable.",
            "name": "py-xgboost"
        },
        {
            "description": "Metrics for verifying forecasts.",
            "name": "py-xskillscore"
        },
        {
            "description": "YAHMM is a HMM package for Python, implemented in Cython for speed.",
            "name": "py-yahmm"
        },
        {
            "description": "Python library to read and process pulsar data in several different\nformats",
            "name": "py-your"
        },
        {
            "description": "Volumetric Data Analysis yt is a python package for analyzing and\nvisualizing volumetric, multi-resolution data from astrophysical\nsimulations, radio telescopes, and a burgeoning interdisciplinary\ncommunity.",
            "name": "py-yt"
        },
        {
            "description": "scalable pythonic model fitting for high energy physics",
            "name": "py-zfit"
        },
        {
            "description": "REDItools: python scripts for RNA editing detection by RNA-Seq data.\nREDItools are simple python scripts conceived to facilitate the\ninvestigation of RNA editing at large-scale and devoted to research\ngroups that would to explore such phenomenon in own data but don't have\nsufficient bioinformatics skills. They work on main operating systems\n(although unix/linux-based OS are preferred), can handle reads from\nwhatever platform in the standard BAM format and implement a variety of\nfilters.",
            "name": "reditools"
        },
        {
            "description": "salome-medcoupling is a part of SALOME platform to manipulate meshes and\nfields in memory, and use salome-med format for files.",
            "name": "salome-medcoupling"
        },
        {
            "description": "Contains functionality which is used in most SCINE modules.",
            "name": "scine-utilities"
        },
        {
            "description": "Seissol - A scientific software for the numerical simulation of seismic\nwave phenomena and earthquake dynamics.",
            "name": "seissol"
        },
        {
            "description": "SGpp is a library and framework for sparse grids in different flavors.\nSGpp supports both hierarchical spatially-adaptive sparse grids and the\ndimensionally-adaptive sparse grid combination technique.",
            "name": "sgpp"
        },
        {
            "description": "SICER2: a redesigned and improved ChIP-seq broad peak calling tool",
            "name": "sicer2"
        },
        {
            "description": "Domain specific library for electronic structure calculations",
            "name": "sirius"
        },
        {
            "description": "Sourmash: Quickly search, compare, and analyze genomic and metagenomic\ndata sets with k-mer sketches.",
            "name": "sourmash"
        },
        {
            "description": "small RNA-PARE Target Analyzer (sPARTA) is a tool which utilizes high-\nthroughput sequencing to profile genome-wide cleavage products.",
            "name": "sparta"
        },
        {
            "description": "The SpECTRE numerical relativity code. SpECTRE is an open-source code\nfor multi-scale, multi-physics problems in astrophysics and\ngravitational physics. In the future, we hope that it can be applied to\nproblems across discipline boundaries in fluid dynamics, geoscience,\nplasma physics, nuclear physics, and engineering. It runs at petascale\nand is designed for future exascale computers. SpECTRE is being\ndeveloped in support of our collaborative Simulating eXtreme Spacetimes\n(SXS) research program into the multi-messenger astrophysics of neutron\nstar mergers, core-collapse supernovae, and gamma-ray bursts.",
            "name": "spectre"
        },
        {
            "description": "STochastic Engine for Pathway Simulation",
            "name": "steps"
        },
        {
            "description": "SU2 is a suite of open-source software tools written in C++ for the\nnumerical solution of partial differential equations (PDE) and\nperforming PDE constrained optimization.",
            "name": "su2"
        },
        {
            "description": "Tamaas is a C++ library with a Python interface that efficiently solves\ncontact mechanics problems with periodic rough surfaces, plasticity,\nadhesion and friction.",
            "name": "tamaas"
        },
        {
            "description": "topaz: Pipeline for particle picking in cryo-electron microscopy images\nusing convolutional neural networks trained from positive and unlabeled\nexamples. Also featuring micrograph and tomogram denoising with DNNs.",
            "name": "topaz"
        },
        {
            "description": "Treelite is a model compiler for efficient deployment of decision tree\nensembles.",
            "name": "treelite"
        },
        {
            "description": "Sandia Uncertainty Quantification Toolkit. The UQ Toolkit (UQTk) is a\ncollection of libraries and tools for the quantification of uncertainty\nin numerical model predictions",
            "name": "uqtk"
        },
        {
            "description": "VAPOR is the Visualization and Analysis Platform for Ocean, Atmosphere,\nand Solar Researchers. VAPOR provides an interactive 3D visualization\nenvironment that can also produce animations and still frame images.",
            "name": "vapor"
        }
    ],
    "description": "Fundamental algorithms for scientific computing in Python.\n",
    "homepage": "https://www.scipy.org/",
    "latest_version": "1.16.0",
    "maintainers": [
        "adamjstewart",
        "rgommers"
    ],
    "name": "py-scipy",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.py-scipy",
            "reverse": false,
            "sha256": "5433f60831cb554101520a8f8871ac5a32c95f7a971ccd68b69049535b106780",
            "url": "https://git.sagemath.org/sage.git/plain/build/pkgs/scipy/patches/extern_decls.patch?id=711fe05025795e44b84233e065d240859ccae5bd",
            "version": "@:1.5.3",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.py-scipy",
            "relative_path": "scipy-clang.patch",
            "reverse": false,
            "sha256": "bc9d5dc869d1bf9c85d3fd372070cc87bd359ea019eee2fe20e6a154229dfcc4",
            "version": "@1.5.0:1.6.3 %clang",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.py-scipy",
            "reverse": false,
            "sha256": "37209324c6c2d9bf9284bf4726ec3ea7ecafabf736c7a72cf6789af97aebd30b",
            "url": "https://github.com/scipy/scipy/commit/ab7d08c6148286059f6498ab5c3070268d13cbd9.patch?full_index=1",
            "version": "@1.8.0:1.14.0",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "branch": "main",
            "name": "main"
        },
        {
            "name": "1.16.0",
            "sha256": "b5ef54021e832869c8cfb03bc3bf20366cbcd426e02a58e8a58d7584dfbb8f62"
        },
        {
            "name": "1.15.3",
            "sha256": "eae3cf522bc7df64b42cad3925c876e1b0b6c35c1337c93e12c0f366f55b0eaf"
        },
        {
            "name": "1.15.2",
            "sha256": "cd58a314d92838f7e6f755c8a2167ead4f27e1fd5c1251fd54289569ef3495ec"
        },
        {
            "name": "1.15.1",
            "sha256": "033a75ddad1463970c96a88063a1df87ccfddd526437136b6ee81ff0312ebdf6"
        },
        {
            "name": "1.15.0",
            "sha256": "300742e2cc94e36a2880ebe464a1c8b4352a7b0f3e36ec3d2ac006cdbe0219ac"
        },
        {
            "name": "1.14.1",
            "sha256": "5a275584e726026a5699459aa72f828a610821006228e841b94275c4a7c08417"
        },
        {
            "name": "1.14.0",
            "sha256": "b5923f48cb840380f9854339176ef21763118a7300a88203ccd0bdd26e58527b"
        },
        {
            "name": "1.13.1",
            "sha256": "095a87a0312b08dfd6a6155cbbd310a8c51800fc931b8c0b84003014b874ed3c"
        },
        {
            "name": "1.13.0",
            "sha256": "58569af537ea29d3f78e5abd18398459f195546bb3be23d16677fb26616cc11e"
        },
        {
            "name": "1.12.0",
            "sha256": "4bf5abab8a36d20193c698b0f1fc282c1d083c94723902c447e5d2f1780936a3"
        },
        {
            "name": "1.11.4",
            "sha256": "90a2b78e7f5733b9de748f589f09225013685f9b218275257f8a8168ededaeaa"
        },
        {
            "name": "1.11.3",
            "sha256": "bba4d955f54edd61899776bad459bf7326e14b9fa1c552181f0479cc60a568cd"
        },
        {
            "name": "1.11.2",
            "sha256": "b29318a5e39bd200ca4381d80b065cdf3076c7d7281c5e36569e99273867f61d"
        },
        {
            "name": "1.11.1",
            "sha256": "fb5b492fa035334fd249f0973cc79ecad8b09c604b42a127a677b45a9a3d4289"
        },
        {
            "name": "1.11.0",
            "sha256": "f9b0248cb9d08eead44cde47cbf6339f1e9aa0dfde28f5fb27950743e317bd5d"
        },
        {
            "name": "1.10.1",
            "sha256": "2cf9dfb80a7b4589ba4c40ce7588986d6d5cebc5457cad2c2880f6bc2d42f3a5"
        },
        {
            "name": "1.10.0",
            "sha256": "c8b3cbc636a87a89b770c6afc999baa6bcbb01691b5ccbbc1b1791c7c0a07540"
        },
        {
            "name": "1.9.3",
            "sha256": "fbc5c05c85c1a02be77b1ff591087c83bc44579c6d2bd9fb798bb64ea5e1a027"
        },
        {
            "name": "1.9.2",
            "sha256": "99e7720caefb8bca6ebf05c7d96078ed202881f61e0c68bd9e0f3e8097d6f794"
        },
        {
            "name": "1.9.1",
            "sha256": "26d28c468900e6d5fdb37d2812ab46db0ccd22c63baa095057871faa3a498bc9"
        },
        {
            "name": "1.9.0",
            "sha256": "c0dfd7d2429452e7e94904c6a3af63cbaa3cf51b348bd9d35b42db7e9ad42791"
        },
        {
            "name": "1.8.1",
            "sha256": "9e3fb1b0e896f14a85aa9a28d5f755daaeeb54c897b746df7a55ccb02b340f33"
        },
        {
            "name": "1.8.0",
            "sha256": "31d4f2d6b724bc9a98e527b5849b8a7e589bf1ea630c33aa563eda912c9ff0bd"
        },
        {
            "name": "1.7.3",
            "sha256": "ab5875facfdef77e0a47d5fd39ea178b58e60e454a4c85aa1e52fcb80db7babf"
        },
        {
            "name": "1.7.2",
            "sha256": "fa2dbabaaecdb502641b0b3c00dec05fb475ae48655c66da16c9ed24eda1e711"
        },
        {
            "name": "1.7.1",
            "sha256": "6b47d5fa7ea651054362561a28b1ccc8da9368a39514c1bbf6c0977a1c376764"
        },
        {
            "name": "1.7.0",
            "sha256": "998c5e6ea649489302de2c0bc026ed34284f531df89d2bdc8df3a0d44d165739"
        }
    ],
    "versions_deprecated": [
        {
            "name": "1.6.3",
            "sha256": "a75b014d3294fce26852a9d04ea27b5671d86736beb34acdfc05859246260707"
        },
        {
            "name": "1.6.2",
            "sha256": "e9da33e21c9bc1b92c20b5328adb13e5f193b924c9b969cd700c8908f315aa59"
        },
        {
            "name": "1.6.1",
            "sha256": "c4fceb864890b6168e79b0e714c585dbe2fd4222768ee90bc1aa0f8218691b11"
        },
        {
            "name": "1.6.0",
            "sha256": "cb6dc9f82dfd95f6b9032a8d7ea70efeeb15d5b5fd6ed4e8537bb3c673580566"
        },
        {
            "name": "1.5.4",
            "sha256": "4a453d5e5689de62e5d38edf40af3f17560bfd63c9c5bd228c18c1f99afa155b"
        },
        {
            "name": "1.5.3",
            "sha256": "ddae76784574cc4c172f3d5edd7308be16078dd3b977e8746860c76c195fa707"
        },
        {
            "name": "1.5.2",
            "sha256": "066c513d90eb3fd7567a9e150828d39111ebd88d3e924cdfc9f8ce19ab6f90c9"
        },
        {
            "name": "1.5.1",
            "sha256": "039572f0ca9578a466683558c5bf1e65d442860ec6e13307d528749cfe6d07b8"
        },
        {
            "name": "1.5.0",
            "sha256": "4ff72877d19b295ee7f7727615ea8238f2d59159df0bdd98f91754be4a2767f0"
        },
        {
            "name": "1.4.1",
            "sha256": "dee1bbf3a6c8f73b6b218cb28eed8dd13347ea2f87d572ce19b289d6fd3fbc59"
        },
        {
            "name": "1.4.0",
            "sha256": "31f7cfa93b01507c935c12b535e24812594002a02a56803d7cd063e9920d25e8"
        },
        {
            "name": "1.3.3",
            "sha256": "64bf4e8ae0db2d42b58477817f648d81e77f0b381d0ea4427385bba3f959380a"
        },
        {
            "name": "1.3.2",
            "sha256": "a03939b431994289f39373c57bbe452974a7da724ae7f9620a1beee575434da4"
        }
    ]
}