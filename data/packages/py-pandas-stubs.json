{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Poetry PEP 517 Build Backend.",
            "name": "py-poetry-core"
        },
        {
            "description": "This is a PEP 561 type stub package for the pytz package. It can be used\nby type-checking tools like mypy, pyright, pytype, PyCharm, etc. to\ncheck code that uses pytz.",
            "name": "py-types-pytz"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "The Astropy Project is a community effort to develop a single core\npackage for Astronomy in Python and foster interoperability between\nPython astronomy packages.",
            "name": "py-astropy"
        },
        {
            "description": "The OpenAI Python library provides convenient access to the OpenAI API\nfrom applications written in the Python language. It includes a pre-\ndefined set of classes for API resources that initialize themselves\ndynamically from API responses which makes it compatible with a wide\nrange of versions of the OpenAI API.",
            "name": "py-openai"
        }
    ],
    "description": "These are public type stubs for pandas, following the convention of\nproviding stubs in a separate package, as specified in PEP 561. The\nstubs cover the most typical use cases of pandas. In general, these\nstubs are narrower than what is possibly allowed by pandas, but follow a\nconvention of suggesting best recommended practices for using pandas.\n",
    "homepage": "https://pandas.pydata.org/",
    "latest_version": "2.0.2.230605",
    "maintainers": [],
    "name": "py-pandas-stubs",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "2.0.2.230605",
            "sha256": "624c7bb06d38145a44b61be459ccd19b038e0bf20364a025ecaab78fea65e858"
        }
    ],
    "versions_deprecated": []
}