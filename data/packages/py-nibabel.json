{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Hatch plugin for versioning with your preferred VCS",
            "name": "py-hatch-vcs"
        },
        {
            "description": "Modern, extensible Python build backend.",
            "name": "py-hatchling"
        },
        {
            "description": "Read resources from Python packages",
            "name": "py-importlib-resources"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "Core utilities for Python packages.",
            "name": "py-packaging"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "pytest: simple powerful testing with Python.",
            "name": "py-pytest"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Python 2 and 3 compatibility utilities.",
            "name": "py-six"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Advanced Normalization Tools in Python.",
            "name": "py-antspyx"
        },
        {
            "description": "Converts and organises raw MRI data-sets according to the Brain Imaging\nData Structure (BIDS).",
            "name": "py-bidscoin"
        },
        {
            "description": "DataLad extension package for neuro/medical imaging",
            "name": "py-datalad-neuroimaging"
        },
        {
            "description": "Diffusion MRI utilities in python. DIPY is the paragon 3D/4D+ imaging\nlibrary in Python. Contains generic methods for spatial normalization,\nsignal processing, machine learning, statistical analysis and\nvisualization of medical images. Additionally, it contains specialized\nmethods for computational anatomy including diffusion, perfusion and\nstructural imaging.",
            "name": "py-dipy"
        },
        {
            "description": "A toolbox for accurate single-trial estimates in fMRI time-series data.",
            "name": "py-glmsingle"
        },
        {
            "description": "Normalize intensities of images from various MRI modalities",
            "name": "py-intensity-normalization"
        },
        {
            "description": "MNE python project for MEG and EEG data analysis.",
            "name": "py-mne"
        },
        {
            "description": "Combine multi-echoes from a multi-echo fMRI acquisition.",
            "name": "py-multiecho"
        },
        {
            "description": "A Python Toolbox for Multimodal Neural Data Representation Analysis.",
            "name": "py-neurora"
        },
        {
            "description": "BetaSeries Correlations implemented in Nipype.",
            "name": "py-nibetaseries"
        },
        {
            "description": "Statistical learning for neuroimaging in Python.",
            "name": "py-nilearn"
        },
        {
            "description": "Neuroimaging in Python: Pipelines and Interfaces.",
            "name": "py-nipype"
        },
        {
            "description": "Modeling and Statistical analysis of fMRI data in Python.",
            "name": "py-nistats"
        },
        {
            "description": "NiTransforms -- Neuroimaging spatial transforms in Python.",
            "name": "py-nitransforms"
        },
        {
            "description": "Common workflows for MRI (anatomical, functional, diffusion, etc)",
            "name": "py-niworkflows"
        },
        {
            "description": "bids: interface with datasets conforming to BIDS",
            "name": "py-pybids"
        },
        {
            "description": "Python Cortical mapping software for fMRI data.",
            "name": "py-pycortex"
        },
        {
            "description": "A script to remove facial structure from MRI images.",
            "name": "py-pydeface"
        },
        {
            "description": "Cortical neuroimaging visualization in Python.",
            "name": "py-pysurfer"
        },
        {
            "description": "Experiments with new file format for tractography.",
            "name": "py-trx-python"
        }
    ],
    "description": "Access a multitude of neuroimaging data formats\n",
    "homepage": "https://nipy.org/nibabel",
    "latest_version": "5.2.1",
    "maintainers": [
        "ChristopherChristofi"
    ],
    "name": "py-nibabel",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "5.2.1",
            "sha256": "b6c80b2e728e4bc2b65f1142d9b8d2287a9102a8bf8477e115ef0d8334559975"
        },
        {
            "name": "5.1.0",
            "sha256": "ce73ca5e957209e7219a223cb71f77235c9df2acf4d3f27f861ba38e9481ac53"
        },
        {
            "name": "4.0.2",
            "sha256": "45c49b5349351b45f6c045a91aa02b4f0d367686ff3284632ef95ac65b930786"
        },
        {
            "name": "3.2.2",
            "sha256": "b0dcc174b30405ce9e8fec1eab3cbbb20f5c5e4920976c08b22e050b7c124f94"
        },
        {
            "name": "3.2.1",
            "sha256": "4d2ff9426b740011a1c916b54fc25da9348282e727eaa2ea163f42e00f1fc29e"
        },
        {
            "name": "2.4.1",
            "sha256": "f165ff1cb4464902d6594eb2694e2cfb6f8b9fe233b856c976c3cff623ee0e17"
        }
    ],
    "versions_deprecated": []
}