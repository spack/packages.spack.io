{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [
        {
            "description": "ABACUS (Atomic-orbital Based Ab-initio Computation at UStc) is an open-\nsource computer code package aiming for large-scale electronic-structure\nsimulations from first principles",
            "name": "abacus"
        },
        {
            "description": "FunHPC: Functional HPC Programming",
            "name": "funhpc"
        },
        {
            "description": "Hermes Shared Memory contains a variety of data structures and\nsynchronization primitives which are compatible with shared memory.",
            "name": "hermes-shm"
        },
        {
            "description": "LBANN: Livermore Big Artificial Neural Network Toolkit. A distributed\nmemory, HPC-optimized, model and data parallel training toolkit for deep\nneural networks.",
            "name": "lbann"
        },
        {
            "description": "mlpack is an intuitive, fast, and flexible header-only C++ machine\nlearning library with bindings to other languages. It is meant to be a\nmachine learning analog to LAPACK, and aims to implement a wide array of\nmachine learning methods and functions as a \"swiss army knife\" for\nmachine learning researchers.",
            "name": "mlpack"
        },
        {
            "description": "A Mochi C++14 library wrapping Margo, Mercury, and Argobots and\nproviding an object-oriented way to use these libraries.",
            "name": "mochi-thallium"
        },
        {
            "description": "Salmon is a tool for quantifying the expression of transcripts using\nRNA-seq data.",
            "name": "salmon"
        },
        {
            "description": "Sparrow: fast semiempirical quantum chemical calculations. When\npublishing results obtained with Sparrow, please cite the corresponding\nrelease as archived on Zenodo (DOI 10.5281/zenodo.3244105; please use\nthe DOI of the respective release). In addition, we kindly request you\nto cite the following article when using Sparrow: T. Husch, A. C.\nVaucher, M. Reiher, \"Semiempirical molecular orbital models based on the\nneglect of diatomic differential overlap approximation\", Int. J. Quantum\nChem., 2018, 118, e25799.",
            "name": "scine-sparrow"
        },
        {
            "description": "The SEACAS Project contains the Exodus and IOSS I/O libraries and a\ncollection of applications which create, query, modify, or translate\nExodus databases. Exodus is a finite element mesh and results database\nfile format. Default is to build the Exodus and IOSS libraries and the\nio_shell, io_info, io_modify, struc_to_unstruc apps.",
            "name": "seacas"
        },
        {
            "description": "Sparrow: fast semiempirical quantum chemical calculations. When\npublishing results obtained with Sparrow, please cite the corresponding\nrelease as archived on Zenodo (DOI 10.5281/zenodo.3244105; please use\nthe DOI of the respective release). In addition, we kindly request you\nto cite the following article when using Sparrow: T. Husch, A. C.\nVaucher, M. Reiher, \"Semiempirical molecular orbital models based on the\nneglect of diatomic differential overlap approximation\", Int. J. Quantum\nChem., 2018, 118, e25799.",
            "name": "sparrow"
        },
        {
            "description": "SymEngine is a fast symbolic manipulation library, written in C++.",
            "name": "symengine"
        },
        {
            "description": "Simulates whole cell models using discrete event simulation.",
            "name": "wcs"
        }
    ],
    "description": "cereal is a header-only C++11 serialization library. cereal takes\narbitrary data types and reversibly turns them into different\nrepresentations, such as compact binary encodings, XML, or JSON. cereal\nwas designed to be fast, light-weight, and easy to extend - it has no\nexternal dependencies and can be easily bundled with other code or used\nstandalone.\n",
    "homepage": "https://uscilab.github.io/cereal/",
    "latest_version": "1.3.2",
    "maintainers": [],
    "name": "cereal",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.cereal",
            "relative_path": "Boost.patch",
            "reverse": false,
            "sha256": "720265382f29b744488d67e8df5000f2ca1b4dceb2018835fb5dc7a3a1c23f75",
            "version": "@:1.3.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cereal",
            "relative_path": "LockGuard-default-ctor.patch",
            "reverse": false,
            "sha256": "27c9b597010237598d72a7cb08df40d15338d5039e2b59cee30299ba51db5eaf",
            "version": "@:1.3.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cereal",
            "relative_path": "Boost2.patch",
            "reverse": false,
            "sha256": "91f968e9ac3964e1a689a9ad379ab16f7803ac3d34d24f87ebcaecaa3f9a2f16",
            "version": "@1.2.2:1.3.0",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.cereal",
            "relative_path": "pointers.patch",
            "reverse": false,
            "sha256": "2dfa0bff9816d0ebd8a1bcc70ced4483b3cda83a982ea5027f1aaadceaa15aac",
            "version": "",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        }
    ],
    "versions": [
        {
            "name": "1.3.2",
            "sha256": "16a7ad9b31ba5880dac55d62b5d6f243c3ebc8d46a3514149e56b5e7ea81f85f"
        },
        {
            "name": "1.3.1",
            "sha256": "65ea6ddda98f4274f5c10fb3e07b2269ccdd1e5cbb227be6a2fd78b8f382c976"
        },
        {
            "name": "1.3.0",
            "sha256": "329ea3e3130b026c03a4acc50e168e7daff4e6e661bc6a7dfec0d77b570851d5"
        },
        {
            "name": "1.2.2",
            "sha256": "1921f26d2e1daf9132da3c432e2fd02093ecaedf846e65d7679ddf868c7289c4"
        },
        {
            "name": "1.2.1",
            "sha256": "7d321c22ea1280b47ddb06f3e9702fcdbb2910ff2f3df0a2554804210714434e"
        },
        {
            "name": "1.2.0",
            "sha256": "1ccf3ed205a7a2f0d6a060415b123f1ae0d984cd4435db01af8de11a2eda49c1"
        },
        {
            "name": "1.1.2",
            "sha256": "45607d0de1d29e84d03bf8eecf221eb2912005b63f02314fbade9fbabfd37b8d"
        },
        {
            "name": "1.1.1",
            "sha256": "ec5e2b2c8f145d86eb7c079300360bb06f708527187834f3f127e9a12b07e9cf"
        },
        {
            "name": "1.1.0",
            "sha256": "69113debdac9de561f499af4cf7755b2e8c3afa92649b8178b34a7c6bbe4f12f"
        },
        {
            "name": "1.0.0",
            "sha256": "51c31c84d4c9e410e56d8bfc3424076b3234f11aa349ac8cda3db9f18118c125"
        },
        {
            "name": "0.9.1",
            "sha256": "2a99722df9c3d0f75267f732808a4d7e564cb5a35318a3d1c00086e2ef139385"
        }
    ],
    "versions_deprecated": []
}