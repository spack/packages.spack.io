{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "Autoconf -- system configuration part of autotools",
            "name": "autoconf"
        },
        {
            "description": "Automake -- make file builder part of autotools",
            "name": "automake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "A userspace library for accessing the DRM, direct rendering manager, on\nLinux, BSD and other systems supporting the ioctl interface.",
            "name": "libdrm"
        },
        {
            "description": "libtool -- library building part of autotools.",
            "name": "libtool"
        },
        {
            "description": "libX11 - Core X11 protocol client library.",
            "name": "libx11"
        },
        {
            "description": "libXext - library for common extensions to the X11 protocol.",
            "name": "libxext"
        },
        {
            "description": "GNU M4 is an implementation of the traditional Unix macro processor.",
            "name": "m4"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        }
    ],
    "dependent_to": [
        {
            "description": "rocDecode is a high performance video decode SDK for AMD hardware",
            "name": "rocdecode"
        },
        {
            "description": "rocJPEG is a high-performance jpeg decode SDK for decoding jpeg images\nusing a hardware-accelerated jpeg decoder on AMD's GPUs.",
            "name": "rocjpeg"
        }
    ],
    "description": "Libva is an implementation for VA-API (Video Acceleration API). VA-API\nis an open-source library and API specification, which provides access\nto graphics hardware acceleration capabilities for video processing. It\nconsists of a main library and driver-specific acceleration backends for\neach supported hardware vendor.\n",
    "homepage": "https://github.com/intel/libva",
    "latest_version": "2.22.0",
    "maintainers": [],
    "name": "libva",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "2.22.0",
            "sha256": "467c418c2640a178c6baad5be2e00d569842123763b80507721ab87eb7af8735"
        }
    ],
    "versions_deprecated": []
}