{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "The libffi library provides a portable, high level programming interface\nto various calling conventions. This allows a programmer to call any\nfunction specified by a call interface description at run time.",
            "name": "libffi"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A complete parser of the C language, written in pure python.",
            "name": "py-pycparser"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Clingo: A grounder and solver for logic programs Clingo is part of the\nPotassco project for Answer Set Programming (ASP). ASP offers a simple\nand powerful modeling language to describe combinatorial problems as\nlogic programs. The clingo system then takes such a logic program and\ncomputes answer sets representing solutions to the given problem.",
            "name": "clingo"
        },
        {
            "description": "Clingo with some options used for bootstrapping",
            "name": "clingo-bootstrap"
        },
        {
            "description": "Generally Applicable Atomic-Charge Dependent London Dispersion\nCorrection",
            "name": "dftd4"
        },
        {
            "description": "A next-generation resource manager (pre-alpha)",
            "name": "flux-core"
        },
        {
            "description": "Python bindings for the flux resource manager API",
            "name": "flux-python"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Runtime is designed to\nenhance energy efficiency of applications through active hardware\nconfiguration.",
            "name": "geopm-runtime"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Service provides a user\ninterface for accessing hardware telemetry and settings securely. Note:\nGEOPM interfaces with hardware using Model Specific Registers (MSRs).\nFor proper usage make sure MSRs are made available via the msr or msr-\nsafe kernel modules by your administrator.",
            "name": "geopm-service"
        },
        {
            "description": "BEE is a workflow orchestration system designed to build containerized\nHPC applications and orchestrate workflows across HPC and cloud systems.\nBEE has adopted the Common Workflow Language (CWL) for specifying\nworkflows. Complex scientific workflows specified by CWL are managed and\nvisualized through a graph database, giving the user the ability to\nmonitor the state of each task in the workflow. BEE runs jobs using the\nworkload scheduler (i.e. Slurm or Flux) on the HPC system that tasks are\nspecified to run on.",
            "name": "hpc-beeflow"
        },
        {
            "description": "Legion is a data-centric parallel programming system for writing\nportable high performance programs targeted at distributed heterogeneous\narchitectures. Legion presents abstractions which allow programmers to\ndescribe properties of program data (e.g. independence, locality). By\nmaking the Legion programming system aware of the structure of program\ndata, it can automate many of the tedious tasks programmers currently\nface, including correctly extracting task- and data-level parallelism\nand moving data around complex memory hierarchies. A novel mapping\ninterface provides explicit programmer controlled placement of data in\nthe memory hierarchy and assignment of tasks to processors in a way that\nis orthogonal to correctness, thereby enabling easy porting and tuning\nof Legion applications to new architectures.",
            "name": "legion"
        },
        {
            "description": "A memory-driven algorithm to map parallel codes to heterogeneous\narchitectures",
            "name": "mpibind"
        },
        {
            "description": "The secure Argon2 password hashing algorithm..",
            "name": "py-argon2-cffi"
        },
        {
            "description": "Low-level CFFI bindings for Argon2.",
            "name": "py-argon2-cffi-bindings"
        },
        {
            "description": "Azure Data Lake Store Filesystem Client Library for Python.",
            "name": "py-azure-datalake-store"
        },
        {
            "description": "Modern password hashing for your software and your servers",
            "name": "py-bcrypt"
        },
        {
            "description": "Python binding to the Brotli library.",
            "name": "py-brotlipy"
        },
        {
            "description": "cairocffi is a CFFI-based drop-in replacement for Pycairo, a set of\nPython bindings and object-oriented API for cairo. Cairo is a 2D vector\ngraphics library with support for multiple backends including image\nbuffers, PNG, PostScript, PDF, and SVG file output.",
            "name": "py-cairocffi"
        },
        {
            "description": "Python interface to map GRIB files to the NetCDF Common Data Model\nfollowing the CF Convention using ecCodes.",
            "name": "py-cfgrib"
        },
        {
            "description": "Charm4py (Charm++ for Python) is a distributed computing and parallel\nprogramming framework for Python, for the productive development of\nfast, parallel and scalable applications. It is built on top of Charm++,\na C++ adaptive runtime system that has seen extensive use in the\nscientific and high-performance computing (HPC) communities across many\ndisciplines, and has been used to develop applications that run on a\nwide range of devices: from small multi-core devices up to the largest\nsupercomputers.",
            "name": "py-charm4py"
        },
        {
            "description": "cryptography is a package which provides cryptographic recipes and\nprimitives to Python developers",
            "name": "py-cryptography"
        },
        {
            "description": "Python utilities to interact with Darshan log records of HPC\napplications.",
            "name": "py-darshan"
        },
        {
            "description": "Python interface to the ecCodes GRIB and BUFR decoder/encoder.",
            "name": "py-eccodes"
        },
        {
            "description": "Python interface to the next generation FEniCS problem solving\nenvironment",
            "name": "py-fenics-dolfinx"
        },
        {
            "description": "Next generation FEniCS Form Compiler",
            "name": "py-fenics-ffcx"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Service provides a user\ninterface for accessing hardware telemetry and settings securely.",
            "name": "py-geopmdpy"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Service provides a user\ninterface for accessing hardware telemetry and settings securely.",
            "name": "py-geopmpy"
        },
        {
            "description": "gevent is a coroutine-based Python networking library.",
            "name": "py-gevent"
        },
        {
            "description": "GF256 is an implementation of GF(2**8). This Galois Field allows you to\nperform finite field arithmetic on byte sized integers.",
            "name": "py-gf256"
        },
        {
            "description": "Horovod is a distributed deep learning training framework for\nTensorFlow, Keras, PyTorch, and Apache MXNet.",
            "name": "py-horovod"
        },
        {
            "description": "medaka is a tool to create consensus sequences and variant calls from\nnanopore sequencing data. This task is performed using neural networks\napplied a pileup of individual sequencing reads against a draft\nassembly. It provides state-of-the-art results outperforming sequence-\ngraph based methods and signal-based methods, whilst also being faster.",
            "name": "py-medaka"
        },
        {
            "description": "Use numba-compiled kernels from within Jax",
            "name": "py-numba4jax"
        },
        {
            "description": "pycares is a Python module which provides an interface to c-ares. c-ares\nis a C library that performs DNS requests and name resolutions\nasynchronously.",
            "name": "py-pycares"
        },
        {
            "description": "Pygit2 is a set of Python bindings to the libgit2 shared library,\nlibgit2 implements the core of Git.",
            "name": "py-pygit2"
        },
        {
            "description": "Python binding to the Networking and Cryptography (NaCl) library.",
            "name": "py-pynacl"
        },
        {
            "description": "Simulate electronic circuit using Python and the Ngspice / Xyce\nsimulators",
            "name": "py-pyspice"
        },
        {
            "description": "PyZMQ: Python bindings for zeromq.",
            "name": "py-pyzmq"
        },
        {
            "description": "rpy2 is a redesign and rewrite of rpy. It is providing a low-level\ninterface to R from Python, a proposed high-level interface, including\nwrappers to graphical libraries, as well as R-like structures and\nfunctions.",
            "name": "py-rpy2"
        },
        {
            "description": "SoundFile is an audio library based on libsndfile, CFFI and NumPy.",
            "name": "py-soundfile"
        },
        {
            "description": "Tensors and Dynamic neural networks in Python with strong GPU\nacceleration.",
            "name": "py-torch"
        },
        {
            "description": "A python interface to access extended file attributes, sans libattr\ndependency.",
            "name": "py-xattr"
        },
        {
            "description": "Python API for the extended tight binding program package",
            "name": "py-xtb"
        },
        {
            "description": "Python bindings to the Zstandard (zstd) compression library.",
            "name": "py-zstandard"
        },
        {
            "description": "Simple reimplementation of the DFT-D3 dispersion correction",
            "name": "simple-dftd3"
        },
        {
            "description": "Sourmash: Quickly search, compare, and analyze genomic and metagenomic\ndata sets with k-mer sketches.",
            "name": "sourmash"
        },
        {
            "description": "Light-weight tight-binding framework",
            "name": "tblite"
        }
    ],
    "description": "Foreign Function Interface for Python calling C code\n",
    "homepage": "https://cffi.readthedocs.io/en/latest/",
    "latest_version": "1.17.1",
    "maintainers": [],
    "name": "py-cffi",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.py-cffi",
            "reverse": false,
            "sha256": "db836e67e2973ba7d3f4185b385fda49e2398281fc10362e5e413b75fdf93bf0",
            "url": "https://raw.githubusercontent.com/conda-forge/cffi-feedstock/refs/heads/main/recipe/0003-apple-api.patch",
            "version": "@1.16: arch=darwin-None-None",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "1.17.1",
            "sha256": "1c39c6016c32bc48dd54561950ebd6836e1670f2ae46128f67cf49e789c52824"
        },
        {
            "name": "1.16.0",
            "sha256": "bcb3ef43e58665bbda2fb198698fcae6776483e0c4a631aa5647806c25e02cc0"
        },
        {
            "name": "1.15.1",
            "sha256": "d400bfb9a37b1351253cb402671cea7e89bdecc294e8016a707f6d1d8ac934f9"
        },
        {
            "name": "1.15.0",
            "sha256": "920f0d66a896c2d99f0adbb391f990a84091179542c205fa53ce5787aff87954"
        },
        {
            "name": "1.14.6",
            "sha256": "c9a875ce9d7fe32887784274dd533c57909b7b1dcadcc128a2ac21331a9765dd"
        },
        {
            "name": "1.14.3",
            "sha256": "f92f789e4f9241cd262ad7a555ca2c648a98178a953af117ef7fad46aa1d5591"
        }
    ],
    "versions_deprecated": [
        {
            "name": "1.13.0",
            "sha256": "8fe230f612c18af1df6f348d02d682fe2c28ca0a6c3856c99599cdacae7cf226"
        },
        {
            "name": "1.12.2",
            "sha256": "e113878a446c6228669144ae8a56e268c91b7f1fafae927adc4879d9849e0ea7"
        },
        {
            "name": "1.11.5",
            "sha256": "e90f17980e6ab0f3c2f3730e56d1fe9bcba1891eeea58966e89d352492cc74f4"
        },
        {
            "name": "1.10.0",
            "sha256": "b3b02911eb1f6ada203b0763ba924234629b51586f72a21faacc638269f4ced5"
        },
        {
            "name": "1.1.2",
            "sha256": "390970b602708c91ddc73953bb6929e56291c18a4d80f360afa00fad8b6f3339"
        }
    ]
}