{
    "aliases": [],
    "build_system": "PerlPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development.",
            "name": "perl"
        }
    ],
    "dependent_to": [
        {
            "description": "The Biopieces are a collection of bioinformatics tools that can be\npieced together in a very easy and flexible manner to perform both\nsimple and complex tasks.",
            "name": "biopieces"
        },
        {
            "description": "MAKER is a portable and easily configurable genome annotation pipeline.\nIt's purpose is to allow smaller eukaryotic and prokaryotic\ngenomeprojects to independently annotate their genomes and to create\ngenome databases. MAKER identifies repeats, aligns ESTs and proteins to\na genome, produces ab-initio gene predictions and automatically\nsynthesizes these data into gene annotations having evidence-based\nquality values. MAKER is also easily trainable: outputs of preliminary\nruns can be used to automatically retrain its gene prediction algorithm,\nproducing higher quality gene-models on subsequent runs. MAKER's inputs\nare minimal and its ouputs can be directly loaded into a GMOD database.\nThey can also be viewed in the Apollo genome browser; this feature of\nMAKER provides an easy means to annotate, view and edit individual\ncontigs and BACs without the overhead of a database. MAKER should prove\nespecially useful for emerging model organism projects with minimal\nbioinformatics expertise and computer resources. Note: MAKER requires\nregistration. Fill out the form at\nhttp://yandell.topaz.genetics.utah.edu/cgi-bin/maker_license.cgi to get\na download link. Spack will search your current directory for the\ndownload file. Alternatively, add this file to a mirror so that Spack\ncan find it. For instructions on how to set up a mirror, see\nhttps://spack.readthedocs.io/en/latest/mirrors.html",
            "name": "maker"
        },
        {
            "description": "Perl SVN extension.",
            "name": "perl-alien-svn"
        },
        {
            "description": "Bio::DB::BigFile -- Low-level interface to BigWig & BigBed files for\nperl",
            "name": "perl-bio-bigfile"
        },
        {
            "description": "Bio::DB::HTS - This is a Perl interface to the HTS Library.",
            "name": "perl-bio-db-hts"
        },
        {
            "description": "BioPerl is the product of a community effort to produce Perl code which\nis useful in biology. Examples include Sequence objects, Alignment\nobjects and database searching objects. These objects not only do what\nthey are advertised to do in the documentation, but they also interact -\nAlignment objects are made from the Sequence objects, Sequence objects\nhave access to Annotation and SeqFeature objects and databases, Blast\nobjects can be converted to Alignment objects, and so on. This means\nthat the objects provide a coordinated and extensible framework to do\ncomputational biology. BioPerl development focuses on Perl classes, or\ncode that is used to create objects representing biological entities.\nThere are scripts provided in the scripts/ and examples/ directories but\nscripts are not the main focus of the BioPerl developers. Of course, as\nthe objects do most of the hard work for you, all you have to do is\ncombine a number of objects together sensibly to make useful scripts.\nThe intent of the BioPerl development effort is to make reusable tools\nthat aid people in creating their own sites or job-specific\napplications. The BioPerl website at https://bioperl.org/ also attempts\nto maintain links and archives of standalone bio-related Perl tools that\nare not affiliated or related to the core BioPerl effort. Check the site\nfor useful code ideas and contribute your own if possible.",
            "name": "perl-bioperl"
        },
        {
            "description": "The Error package provides two interfaces. Firstly Error provides a\nprocedural interface to exception handling. Secondly Error is a base\nclass for errors/exceptions that can either be thrown, for subsequent\ncatch, or can simply be recorded.",
            "name": "perl-error"
        },
        {
            "description": "File::Remove - Remove files and directories",
            "name": "perl-file-remove"
        },
        {
            "description": "Install shared files",
            "name": "perl-file-sharedir-install"
        },
        {
            "description": "Interface to Gd Graphics Library",
            "name": "perl-gd"
        },
        {
            "description": "By default, this module exports a single function prompt. It prompts the\nuser to enter some input, and returns an object that represents the user\ninput. You may specify various flags to the function to affect its\nbehaviour; most notably, it defaults to automatically chomp the input,\nunless the -line flag is specified. Two other functions are exported at\nrequest: hand_print, which simulates hand-typing to the console; and\nget_input, which is the lower-level function that actually prompts the\nuser for a suitable input. Note that this is an interim re-release. A\nfull release with better documentation will follow in the near future.\nMeanwhile, please consult the examples directory from this module's CPAN\ndistribution to better understand how to make use of this module.",
            "name": "perl-io-prompt"
        },
        {
            "description": "Implements the data type \"matrix of real numbers\" (and consequently also\n\"vector of real numbers\").",
            "name": "perl-math-matrixreal"
        },
        {
            "description": "Math::Symbolic - Symbolic calculations.",
            "name": "perl-math-symbolic"
        },
        {
            "description": "Module::Build::Tiny - A tiny replacement for Module::Build",
            "name": "perl-module-build-tiny"
        },
        {
            "description": "Module::Install - Standalone, extensible Perl module installer",
            "name": "perl-module-install"
        },
        {
            "description": "Runtime module handling",
            "name": "perl-module-runtime"
        },
        {
            "description": "Implements inside-out objects as anonymous scalar references that are\nblessed into a class with the scalar containing the ID for the object\n(usually a sequence number).",
            "name": "perl-object-insideout"
        },
        {
            "description": "Params::Validate - Validate method/function parameters",
            "name": "perl-params-validate"
        },
        {
            "description": "Generate Recursive-Descent Parsers",
            "name": "perl-parse-recdescent"
        },
        {
            "description": "Perl4::CoreLibs - libraries historically supplied with Perl 4",
            "name": "perl-perl4-corelibs"
        },
        {
            "description": "This module provides a fast and correct UTF-8 PerlIO layer.",
            "name": "perl-perlio-utf8-strict"
        },
        {
            "description": "A simple Perl implementation of Principal Component Analysis.",
            "name": "perl-statistics-pca"
        },
        {
            "description": "An object-oriented Perl library to handle Swiss-Prot entries",
            "name": "perl-swissknife"
        },
        {
            "description": "Test strings and data structures and show differences if not ok",
            "name": "perl-test-differences"
        },
        {
            "description": "Text::Format - Various subroutines to format text",
            "name": "perl-text-format"
        },
        {
            "description": "This modules provides simple URI (Percent) encoding/decoding",
            "name": "perl-uri-encode"
        }
    ],
    "description": "Module::Build is a system for building, testing, and installing Perl\nmodules. It is meant to be an alternative to ExtUtils::MakeMaker.\nDevelopers may alter the behavior of the module through subclassing in a\nmuch more straightforward way than with MakeMaker. It also does not\nrequire a make on your system - most of the Module::Build code is pure-\nperl and written in a very cross-platform way.\n",
    "homepage": "https://metacpan.org/pod/Module::Build",
    "latest_version": "0.4234",
    "maintainers": [],
    "name": "perl-module-build",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "perl",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.4234",
            "sha256": "66aeac6127418be5e471ead3744648c766bd01482825c5b66652675f2bc86a8f"
        },
        {
            "name": "0.4232",
            "sha256": "67c82ee245d94ba06decfa25572ab75fdcd26a9009094289d8f45bc54041771b"
        },
        {
            "name": "0.4224",
            "sha256": "a6ca15d78244a7b50fdbf27f85c85f4035aa799ce7dd018a0d98b358ef7bc782"
        },
        {
            "name": "0.4220",
            "sha256": "fb1207c7e799366f7a8adda3f135bf8141c4d6068505650d4db2b2d3ce34b5a2"
        }
    ],
    "versions_deprecated": []
}