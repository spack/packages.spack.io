{
    "aliases": [],
    "build_system": "CMakePackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        }
    ],
    "dependent_to": [
        {
            "description": "AMD Optimizing CPU Libraries (AOCL) - AOCL is a set of numerical\nlibraries tuned specifically for AMD EPYC processor family. They have a\nsimple interface to take advantage of the latest hardware innovations.\nThe tuned implementations of industry standard math libraries enable\nfast development of scientific and high performance computing projects\nLICENSING INFORMATION: By downloading, installing and using this\nsoftware, you agree to the terms and conditions of the AMD AOCL license\nagreement. You may obtain a copy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/aocl-eula.html\nhttps://www.amd.com/en/developer/aocl/eula/aocl-4-1-eula.html",
            "name": "amd-aocl"
        }
    ],
    "description": " AOCL-LibMem is a Linux library of data movement and manipulation\nfunctions (such as memcpy and strcpy) highly optimized for AMD Zen\nmicro-architecture. This library has multiple implementations of each\nfunction that can be chosen based on the application requirements as per\nalignments, instruction choice, threshold values, and tunable\nparameters. By default, this library will choose the best fit\nimplementation based on the underlying micro-architectural support for\nCPU features and instructions. LICENSING INFORMATION: By downloading,\ninstalling and using this software, you agree to the terms and\nconditions of the AMD AOCL-LibMem license agreement. You may obtain a\ncopy of this license agreement from\nhttps://www.amd.com/en/developer/aocl/libmem/eula/libmem-4-2-eula.html\n",
    "homepage": "https://www.amd.com/en/developer/aocl/libmem.html",
    "latest_version": "5.0",
    "maintainers": [
        "amd-toolchain-support"
    ],
    "name": "aocl-libmem",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.aocl-libmem",
            "relative_path": "cmake.patch",
            "reverse": false,
            "sha256": "43453a83f322de7c89264439b2e9cbde855e50f550e13ebc884d13d959002092",
            "version": "@5.0",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "cmake",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "Release",
            "description": "CMake build type",
            "name": "build_type"
        },
        {
            "default": "make",
            "description": "the build system generator to use",
            "name": "generator"
        },
        {
            "default": false,
            "description": "CMake interprocedural optimization",
            "name": "ipo"
        },
        {
            "default": false,
            "description": "Enable/Disable logger",
            "name": "logging"
        },
        {
            "default": true,
            "description": "build shared library",
            "name": "shared"
        },
        {
            "default": false,
            "description": "Enable/Disable user input",
            "name": "tunables"
        },
        {
            "default": "auto",
            "description": "Use hardware vectorization support",
            "name": "vectorization"
        }
    ],
    "versions": [
        {
            "name": "5.0",
            "sha256": "d3148db1a57fec4f3468332c775cade356e8133bf88385991964edd7534b7e22"
        },
        {
            "name": "4.2",
            "sha256": "4ff5bd8002e94cc2029ef1aeda72e7cf944b797c7f07383656caa93bcb447569"
        }
    ],
    "versions_deprecated": []
}