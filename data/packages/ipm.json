{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "Autoconf -- system configuration part of autotools",
            "name": "autoconf"
        },
        {
            "description": "Automake -- make file builder part of autotools",
            "name": "automake"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "libtool -- library building part of autotools.",
            "name": "libtool"
        },
        {
            "description": "A portable and efficient C programming interface (API) to determine the\ncall-chain of a program.",
            "name": "libunwind"
        },
        {
            "description": "GNU M4 is an implementation of the traditional Unix macro processor.",
            "name": "m4"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "PAPI provides the tool designer and application engineer with a\nconsistent interface and methodology for use of the performance counter\nhardware found in most major microprocessors. PAPI enables software\nengineers to see, in near real time, the relation between software\nperformance and processor events. In addition Component PAPI provides\naccess to a collection of components that expose performance measurement\nopportunities across the hardware and software stack.",
            "name": "papi"
        },
        {
            "description": "Perl 5 is a highly capable, feature-rich programming language with over\n27 years of development.",
            "name": "perl"
        },
        {
            "description": "Ploticus can produce various types of plots and graphs.",
            "name": "ploticus"
        }
    ],
    "dependent_to": [],
    "description": "IPM is a portable profiling infrastructure for parallel codes. It\nprovides a low-overhead profile of application performance and resource\nutilization in a parallel program. Communication, computation, and IO\nare the primary focus.\n",
    "homepage": "https://github.com/nerscadmin/IPM",
    "latest_version": "2.0.6",
    "maintainers": [
        "Christoph-TU"
    ],
    "name": "ipm",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.ipm",
            "relative_path": "remove_MPI_2COMPLEX_and_MPI_2DOUBLE_COMPLEX.patch",
            "reverse": false,
            "sha256": "087f2fbf4f83bf7ad936eab6f980d19ed72e27026ea7fbda138dbe607a44c410",
            "version": "+coll_details",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable detailed monitoring of collective operations (experimental)",
            "name": "coll_details"
        },
        {
            "default": false,
            "description": "Enable CUDA",
            "name": "cuda"
        },
        {
            "default": false,
            "description": "Enable libunwind",
            "name": "libunwind"
        },
        {
            "default": false,
            "description": "Enable PAPI",
            "name": "papi"
        },
        {
            "default": false,
            "description": "Enable PAPI multiplexing",
            "name": "papi_multiplexing"
        },
        {
            "default": false,
            "description": "Add dependencies for running ipm_parse",
            "name": "parser"
        },
        {
            "default": false,
            "description": "Enable power monitoring module",
            "name": "pmon"
        },
        {
            "default": false,
            "description": "Enable POSIXIO",
            "name": "posixio"
        }
    ],
    "versions": [
        {
            "branch": "master",
            "name": "master"
        },
        {
            "commit": "b008141ee16d39b33e20bffde615564afa107575",
            "name": "2.0.6",
            "tag": "2.0.6"
        }
    ],
    "versions_deprecated": []
}