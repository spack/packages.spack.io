{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": "geopm-service: Requires C++17 support",
            "name": "%clang@:4",
            "spec": ""
        },
        {
            "description": "geopm-service: Requires C++17 support",
            "name": "%gcc@:7.2",
            "spec": ""
        },
        {
            "description": "geopm-service: LevelZero and NVML support are mutually exclusive",
            "name": "+nvml",
            "spec": "+level_zero"
        },
        {
            "description": "geopm-service: Only available on x86_64",
            "name": "arch=None-None-aarch64:",
            "spec": "@3.0.1"
        },
        {
            "description": "geopm-service: Only available on x86_64",
            "name": "arch=None-None-ppc64:",
            "spec": "@3.0.1"
        },
        {
            "description": "geopm-service: Only available on x86_64",
            "name": "arch=None-None-ppc64le:",
            "spec": "@3.0.1"
        },
        {
            "description": "geopm-service: Darwin is not supported",
            "name": "arch=darwin-None-None",
            "spec": ""
        },
        {
            "description": "geopm-service: Windows is not supported",
            "name": "arch=windows-None-None",
            "spec": ""
        },
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "Autoconf -- system configuration part of autotools",
            "name": "autoconf"
        },
        {
            "description": "Automake -- make file builder part of autotools",
            "name": "automake"
        },
        {
            "description": "Programmable completion functions for bash.",
            "name": "bash-completion"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "Doxygen is the de facto standard tool for generating documentation from\nannotated C++ sources, but it also supports other popular programming\nlanguages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba,\nMicrosoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some\nextent D..",
            "name": "doxygen"
        },
        {
            "description": "The file command is \"a file type guesser\", that is, a command-line tool\nthat tells you in words what kind of data a file contains",
            "name": "file"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "Libcap implements the user-space interfaces to the POSIX 1003.1e\ncapabilities available in Linux kernels. These capabilities are a\npartitioning of the all powerful root privilege into a set of distinct\nprivileges.",
            "name": "libcap"
        },
        {
            "description": "libtool -- library building part of autotools.",
            "name": "libtool"
        },
        {
            "description": "Linux-native io_uring I/O access library. liburing provides helpers to\nsetup and teardown io_uring instances, and a simplified interface for\napplications that don't need (or want) to deal with the full kernel side\nimplementation. It enables high-performance asynchronous I/O operations\non Linux systems supporting the io_uring interface.",
            "name": "liburing"
        },
        {
            "description": "oneAPI Level Zero Loader. Applications that need low-level control of a\noneAPI level zero device link against the loader. The loader depends on\na separately installed level zero driver. See https://dgpu-\ndocs.intel.com/technologies/level-zero.html for information on how to\ninstall the driver.",
            "name": "oneapi-level-zero"
        },
        {
            "description": "Foreign Function Interface for Python calling C code",
            "name": "py-cffi"
        },
        {
            "description": "Dasbus is a DBus library written in Python 3, based on GLib and inspired\nby pydbus.",
            "name": "py-dasbus"
        },
        {
            "description": "Parse Python docstrings in reST, Google and Numpydoc format.",
            "name": "py-docstring-parser"
        },
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Service provides a user\ninterface for accessing hardware telemetry and settings securely.",
            "name": "py-geopmdpy"
        },
        {
            "description": "Jsonschema: An(other) implementation of JSON Schema for Python.",
            "name": "py-jsonschema"
        },
        {
            "description": "psutil is a cross-platform library for retrieving information on running\nprocesses and system utilization (CPU, memory, disks, network) in\nPython.",
            "name": "py-psutil"
        },
        {
            "description": "Pygments is a syntax highlighting package written in Python.",
            "name": "py-pygments"
        },
        {
            "description": "PyYAML is a YAML parser and emitter for Python.",
            "name": "py-pyyaml"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The blessed package to manage your versions by scm tags.",
            "name": "py-setuptools-scm"
        },
        {
            "description": "Sphinx Documentation Generator.",
            "name": "py-sphinx"
        },
        {
            "description": "ReadTheDocs.org theme for Sphinx.",
            "name": "py-sphinx-rtd-theme"
        },
        {
            "description": "Create tabbed content in Sphinx documentation when building HTML.",
            "name": "py-sphinx-tabs"
        },
        {
            "description": "An extension to use emoji codes in your Sphinx documentation!",
            "name": "py-sphinxemoji"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        },
        {
            "description": "systemd is a suite of basic building blocks for a Linux system. It\nprovides a system and service manager that runs as PID 1 and starts the\nrest of the system.",
            "name": "systemd"
        },
        {
            "description": "Unzip is a compression and file packaging/archive utility.",
            "name": "unzip"
        }
    ],
    "dependent_to": [
        {
            "description": "The Global Extensible Open Power Manager (GEOPM) Runtime is designed to\nenhance energy efficiency of applications through active hardware\nconfiguration.",
            "name": "geopm-runtime"
        }
    ],
    "description": "The Global Extensible Open Power Manager (GEOPM) Service provides a user\ninterface for accessing hardware telemetry and settings securely. Note:\nGEOPM interfaces with hardware using Model Specific Registers (MSRs).\nFor proper usage make sure MSRs are made available via the msr or msr-\nsafe kernel modules by your administrator.\n",
    "homepage": "https://geopm.github.io",
    "latest_version": "3.1.0",
    "maintainers": [
        "bgeltz",
        "cmcantalupo"
    ],
    "name": "geopm-service",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.geopm-service",
            "relative_path": "0001-Support-NVML-via-CUDA-installation.patch",
            "reverse": false,
            "sha256": "fdc608e50e074423c0798e6cf4da3a43150e38e3598246b3a033bd82f709d46a",
            "version": "+nvml",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable debug",
            "name": "debug"
        },
        {
            "default": true,
            "description": "Create man pages with Sphinx",
            "name": "docs"
        },
        {
            "default": false,
            "description": "Assume C compiler uses gnu-ld",
            "name": "gnu-ld"
        },
        {
            "default": false,
            "description": "Enables the use of oneAPI Level Zero loader",
            "name": "level_zero"
        },
        {
            "default": true,
            "description": "Enables the use of libcap to do capabilities checks",
            "name": "libcap"
        },
        {
            "default": true,
            "description": "Enables the use of liburing for batch I/O",
            "name": "liburing"
        },
        {
            "default": false,
            "description": "Enable NVML support",
            "name": "nvml"
        },
        {
            "default": true,
            "description": "Enable direct use of standard msr device driver",
            "name": "rawmsr"
        },
        {
            "default": true,
            "description": "Enable use of systemd/DBus",
            "name": "systemd"
        }
    ],
    "versions": [
        {
            "branch": "dev",
            "name": "develop"
        },
        {
            "name": "3.1.0",
            "sha256": "2d890cad906fd2008dc57f4e06537695d4a027e1dc1ed92feed4d81bb1a1449e"
        },
        {
            "name": "3.0.1",
            "sha256": "32ba1948de58815ee055470dcdea64593d1113a6cad70ce00ab0286c127f8234"
        }
    ],
    "versions_deprecated": []
}