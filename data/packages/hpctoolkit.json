{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": "hpctoolkit: hpctoolkit requires gnu gcc 7.x or later",
            "name": "%gcc@:6",
            "spec": "@2021.00:2022.6"
        },
        {
            "description": "hpctoolkit: hpcprof-mpi is not available in 2022.10.01",
            "name": "+cray",
            "spec": "@2022.10.01"
        },
        {
            "description": "hpctoolkit: hpcprof-mpi is not available in 2022.10.01",
            "name": "+mpi",
            "spec": "@2022.10.01"
        },
        {
            "description": "hpctoolkit: hpctoolkit requires gnu gcc 8.x or later",
            "name": "%gcc@:7",
            "spec": "@2022.10:"
        },
        {
            "description": "hpctoolkit: hpctoolkit requires gnu gcc 5.x or later",
            "name": "%gcc@:4",
            "spec": "@:2020"
        },
        {
            "description": "hpctoolkit: rocm 5.3 requires hpctoolkit 2023.03.01 or later",
            "name": "^hip@5.3:",
            "spec": "@:2022.12"
        },
        {
            "description": null,
            "name": "^intel-xed@2023.08:",
            "spec": "@:2023.9"
        },
        {
            "description": "hpctoolkit: rocm 6.0 requires hpctoolkit 2024.01.1 or later",
            "name": "^hip@6:",
            "spec": "@:2023"
        },
        {
            "description": "hpctoolkit: avoid binutils 2.35 and 2.35.1 (spews errors)",
            "name": "^binutils@2.35:2.35.1",
            "spec": ""
        },
        {
            "description": "hpctoolkit: avoid elfutils 0.191 (known critical errors in hpcstruct for CUDA binaries)",
            "name": "^elfutils@0.191:",
            "spec": ""
        },
        {
            "description": "hpctoolkit: avoid xz 5.2.7:5.2.8 (broken symbol versions)",
            "name": "^xz@5.2.7:5.2.8",
            "spec": ""
        },
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        },
        {
            "description": null,
            "name": "^python@3.12:",
            "spec": "build_system=meson ^meson@:1.0"
        }
    ],
    "dependencies": [
        {
            "description": "Autoconf -- system configuration part of autotools",
            "name": "autoconf"
        },
        {
            "description": "Automake -- make file builder part of autotools",
            "name": "automake"
        },
        {
            "description": "GNU binutils, which contain the linker, assembler, objdump and others",
            "name": "binutils"
        },
        {
            "description": "Boost provides free peer-reviewed portable C++ source libraries,\nemphasizing libraries that work well with the C++ Standard Library.\nBoost libraries are intended to be widely useful, and usable across a\nbroad spectrum of applications. The Boost license encourages both\ncommercial and non-commercial use.",
            "name": "boost"
        },
        {
            "description": "bzip2 is a freely available, patent free high-quality data compressor.\nIt typically compresses files to within 10% to 15% of the best available\ntechniques (the PPM family of statistical compressors), whilst being\naround twice as fast at compression and six times faster at\ndecompression.",
            "name": "bzip2"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "A cross-platform, open-source build system. CMake is a family of tools\ndesigned to build, test and package software.",
            "name": "cmake"
        },
        {
            "description": "CUDA is a parallel computing platform and programming model invented by\nNVIDIA. It enables dramatic increases in computing performance by\nharnessing the power of the graphics processing unit (GPU). Note: This\npackage does not currently install the drivers necessary to run CUDA.\nThese will need to be installed manually. See:\nhttps://docs.nvidia.com/cuda/ for details.",
            "name": "cuda"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "cxx"
        },
        {
            "description": "API for dynamic binary instrumentation. Modify programs while they are\nexecuting without recompiling, re-linking, or re-executing.",
            "name": "dyninst"
        },
        {
            "description": "elfutils is a collection of various binary tools such as eu-objdump, eu-\nreadelf, and other utilities that allow you to inspect and manipulate\nELF files. Refer to Table 5.Tools Included in elfutils for Red Hat\nDeveloper for a complete list of binary tools that are distributed with\nthe Red Hat Developer Toolset version of elfutils.",
            "name": "elfutils"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "Google test framework for C++. Also called gtest.",
            "name": "googletest"
        },
        {
            "description": "C software library for shared library function wrapping, enables tools\nto intercept calls into shared libraries",
            "name": "gotcha"
        },
        {
            "description": "HIP is a C++ Runtime API and Kernel Language that allows developers to\ncreate portable applications for AMD and NVIDIA GPUs from single source\ncode.",
            "name": "hip"
        },
        {
            "description": "Binary distribution of hpcviewer and integrated hpctraceviewer for the\nRice HPCToolkit (Linux x86_64, ppc64le and aarch64, and MacOSX x86_64\nand M1/M2). Note: hpctoolkit databases are platform independent, so you\ndon't need to install hpctoolkit to run the viewers and it's common to\nrun hpcrun and hpcviewer on different machines.",
            "name": "hpcviewer"
        },
        {
            "description": "This repository includes the user mode API nterfaces and libraries\nnecessary for host applications to launch computer kernels to available\nHSA ROCm kernel agents.AMD Heterogeneous System Architecture HSA - Linux\nHSA Runtime for Boltzmann (ROCm) platforms.",
            "name": "hsa-rocr-dev"
        },
        {
            "description": "Intel(R) GtPin is a dynamic binary instrumentation framework for GEN\n(Intel(R) graphics) Architecture. It is a unique SW platform for\nprofiling a code running on GEN Execution Units (EUs). GTPin includes a\nbinary instrumentation engine for Intel(R) GPUs EUs, along with an API\nfor developing analysis tools, and many sample tools. GTPin allows you\nto capture a range of dynamic profiling data at the finest granularity\nof the specific GPU EU instruction. GTPin supports both compute and\ngraphics workloads. It operates on regular, real-world GPU applications,\nas well as on pre-captured API streams. The technology enables fast and\naccurate dynamic analysis of the code that is executing on the GPU EUs.\nGTPin opens up new opportunities to perform dynamic, low level workload\nand HW analysis on an Intel(R) GPU, with greater efficiency than other\ncurrent solutions. Some of the GTPin capabilities are integrated into\nIntel(R) VTune(TM) Profiler, Intel(R) Advisor, and the Intel(R) Graphics\nPerformance Analyzers (Intel(R) GPA). GTPin is available, along with a\nset of analysis tools based on the GTPin framework. It also enables more\nadvanced users to develop their own analysis tools. GTPin can analyze\nany GPU application. It also collects dynamic profiling data which the\napplication executes on the GPU.",
            "name": "intel-gtpin"
        },
        {
            "description": "Widely used C++ template library for task parallelism. Intel Threading\nBuilding Blocks (Intel TBB) lets you easily write parallel C++ programs\nthat take full advantage of multicore performance, that are portable and\ncomposable, and that have future-proof scalability.",
            "name": "intel-tbb"
        },
        {
            "description": "The Intel X86 Encoder Decoder library for encoding and decoding x86\nmachine instructions (64- and 32-bit). Also includes libxed-ild, a\nlightweight library for decoding the length of an instruction.",
            "name": "intel-xed"
        },
        {
            "description": "The DWARF Debugging Information Format is of interest to programmers\nworking on compilers and debuggers (and any one interested in reading or\nwriting DWARF information). It was developed by a committee (known as\nthe PLSIG at the time) starting around 1991. Starting around 1991 SGI\ndeveloped the libdwarf and dwarfdump tools for internal use and as part\nof SGI IRIX developer tools. Since that time dwarfdump and libdwarf have\nbeen shipped (as an executable and archive respectively, not source)\nwith every release of the SGI MIPS/IRIX C compiler.",
            "name": "libdwarf"
        },
        {
            "description": "The libiberty.a library from GNU binutils. Libiberty provides demangling\nand support functions for the GNU toolchain.",
            "name": "libiberty"
        },
        {
            "description": "Libmonitor is a library providing callback functions for the begin and\nend of processes and threads. It provides a layer on which to build\nprocess monitoring tools and profilers.",
            "name": "libmonitor"
        },
        {
            "description": "libpfm4 is a userspace library to help setup performance events for use\nwith the perf_events Linux kernel interface.",
            "name": "libpfm4"
        },
        {
            "description": "libtool -- library building part of autotools.",
            "name": "libtool"
        },
        {
            "description": "A portable and efficient C programming interface (API) to determine the\ncall-chain of a program.",
            "name": "libunwind"
        },
        {
            "description": "GNU M4 is an implementation of the traditional Unix macro processor.",
            "name": "m4"
        },
        {
            "description": "mbed TLS (formerly known as PolarSSL) makes it trivially easy for\ndevelopers to include cryptographic and SSL/TLS capabilities in their\n(embedded) products, facilitating this functionality with a minimal\ncoding footprint.",
            "name": "mbedtls"
        },
        {
            "description": "The memkind library is a user extensible heap manager built on top of\njemalloc which enables control of memory characteristics and a\npartitioning of the heap between kinds of memory. The kinds of memory\nare defined by operating system memory policies that have been applied\nto virtual address ranges. Memory characteristics supported by memkind\nwithout user extension include control of NUMA and page size features.\nThe jemalloc non-standard interface has been extended to enable\nspecialized arenas to make requests for virtual memory from the\noperating system through the memkind partition interface. Through the\nother memkind interfaces the user can control and extend memory\npartition features and allocate memory while selecting enabled features.",
            "name": "memkind"
        },
        {
            "description": "Meson is a portable open source build system meant to be both extremely\nfast, and as user friendly as possible.",
            "name": "meson"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "Ninja is a small build system with a focus on speed. It differs from\nother build systems in two major respects: it is designed to have its\ninput files generated by a higher-level build system, and it is designed\nto run builds as fast as possible.",
            "name": "ninja"
        },
        {
            "description": "The Intel Graphics Compiler for OpenCL is an LLVM based compiler for\nOpenCL targeting Intel Gen graphics hardware architecture.",
            "name": "oneapi-igc"
        },
        {
            "description": "oneAPI Level Zero Loader. Applications that need low-level control of a\noneAPI level zero device link against the loader. The loader depends on\na separately installed level zero driver. See https://dgpu-\ndocs.intel.com/technologies/level-zero.html for information on how to\ninstall the driver.",
            "name": "oneapi-level-zero"
        },
        {
            "description": "OpenCL (Open Computing Language) C header files",
            "name": "opencl-c-headers"
        },
        {
            "description": "PAPI provides the tool designer and application engineer with a\nconsistent interface and methodology for use of the performance counter\nhardware found in most major microprocessors. PAPI enables software\nengineers to see, in near real time, the relation between software\nperformance and processor events. In addition Component PAPI provides\naccess to a collection of components that expose performance measurement\nopportunities across the hardware and software stack.",
            "name": "papi"
        },
        {
            "description": "pkgconf is a program which helps to configure compiler and linker flags\nfor development frameworks. It is similar to pkg-config from\nfreedesktop.org, providing additional functionality while also\nmaintaining compatibility.",
            "name": "pkgconfig"
        },
        {
            "description": "Docutils is an open-source text processing system for processing\nplaintext documentation into useful formats, such as HTML, LaTeX, man-\npages, open-document or XML. It includes reStructuredText, the easy to\nread, easy to use, what-you-see-is-what-you-get plaintext markup\nlanguage.",
            "name": "py-docutils"
        },
        {
            "description": "A Sphinx and Docutils extension to parse MyST, a rich and extensible\nflavour of Markdown for authoring technical and scientific\ndocumentation.",
            "name": "py-myst-parser"
        },
        {
            "description": "Sphinx Documentation Generator.",
            "name": "py-sphinx"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "ROCPROFILER library for AMD HSA runtime API extension support",
            "name": "rocprofiler-dev"
        },
        {
            "description": "ROC-tracer library: Runtimes Generic Callback/Activity APIs. The goal of\nthe implementation is to provide a generic independent from specific\nruntime profiler to trace API and asyncronous activity.",
            "name": "roctracer-dev"
        },
        {
            "description": "Widely used C++ template library for task parallelism. Intel Threading\nBuilding Blocks (Intel TBB) lets you easily write parallel C++ programs\nthat take full advantage of multicore performance, that are portable and\ncomposable, and that have future-proof scalability.",
            "name": "tbb"
        },
        {
            "description": "Xerces-C++ is a validating XML parser written in a portable subset of\nC++. Xerces-C++ makes it easy to give your application the ability to\nread and write XML data. A shared library is provided for parsing,\ngenerating, manipulating, and validating XML documents using the DOM,\nSAX, and SAX2 APIs.",
            "name": "xerces-c"
        },
        {
            "description": "xxHash is an Extremely fast Hash algorithm, running at RAM speed limits.\nIt successfully completes the SMHasher test suite which evaluates\ncollision, dispersion and randomness qualities of hash functions. Code\nis highly portable, and hashes are identical on all platforms (little /\nbig endian).",
            "name": "xxhash"
        },
        {
            "description": "XZ Utils is free general-purpose data compression software with high\ncompression ratio. XZ Utils were written for POSIX-like systems, but\nalso work on some not-so-POSIX systems. XZ Utils are the successor to\nLZMA Utils.",
            "name": "xz"
        },
        {
            "description": "A YAML parser and emitter in C++",
            "name": "yaml-cpp"
        },
        {
            "description": "A free, general-purpose, legally unencumbered lossless data-compression\nlibrary.",
            "name": "zlib"
        },
        {
            "description": "zlib replacement with optimizations for next generation systems.",
            "name": "zlib-api"
        }
    ],
    "dependent_to": [],
    "description": "HPCToolkit is an integrated suite of tools for measurement and analysis\nof program performance on computers ranging from multicore desktop\nsystems to the nation's largest supercomputers. By using statistical\nsampling of timers and hardware performance counters, HPCToolkit\ncollects accurate measurements of a program's work, resource\nconsumption, and inefficiency and attributes them to the full calling\ncontext in which they occur.\n",
    "homepage": "https://hpctoolkit.org",
    "latest_version": "2024.01.1",
    "maintainers": [
        "mwkrentel"
    ],
    "name": "hpctoolkit",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.hpctoolkit",
            "relative_path": "gcc10-enum.patch",
            "reverse": false,
            "sha256": "0ef29bcf8372658b07bb01742b35eaa40a5db2127b716cffc311e2d00a9db5d9",
            "version": "@2020.01.01:2020.8 %gcc@10.0:",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.hpctoolkit",
            "relative_path": "511afd95b01d743edc5940c84e0079f462b2c23e.patch",
            "reverse": false,
            "sha256": "ccf7a319be0362d8a047953aa5d594b386acc7d6ea21fdc15925e926f83c7bd0",
            "version": "@2019.08.01:2021.3 %gcc@11.0:",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.hpctoolkit",
            "relative_path": "python3.patch",
            "reverse": false,
            "sha256": "bb1b19ca762b1e2aa135f41ad410018c62cd9a5fdbcc79b413e5dd0a8f943361",
            "version": "@2020.03:2020.8",
            "working_dir": "."
        },
        {
            "level": 1,
            "owner": "builtin.hpctoolkit",
            "relative_path": "correcting-hsa-include-path.patch",
            "reverse": false,
            "sha256": "cfbd41ad911c4daff0606b14e9ca5296f920da97859526c16c511501b8cde501",
            "version": "@2024.01 ^hip@6.0:",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": "release",
            "description": "Meson build type",
            "name": "buildtype"
        },
        {
            "default": false,
            "description": "Build hpcprof-mpi for Cray systems (may require --dirty).",
            "name": "cray"
        },
        {
            "default": false,
            "description": "Build old rev of hpcprof-mpi statically on Cray systems.",
            "name": "cray-static"
        },
        {
            "default": false,
            "description": "Support CUDA on NVIDIA GPUs.",
            "name": "cuda"
        },
        {
            "default": false,
            "description": "Build in debug (develop) mode.",
            "name": "debug"
        },
        {
            "default": "shared",
            "description": "Build shared libs, static libs or both",
            "name": "default_library"
        },
        {
            "default": false,
            "description": "Include extra documentation (user's manual)",
            "name": "docs"
        },
        {
            "default": false,
            "description": "Support instrumenting Intel GPU kernels with Intel GT-Pin",
            "name": "gtpin"
        },
        {
            "default": false,
            "description": "Support Level Zero on Intel GPUs.",
            "name": "level_zero"
        },
        {
            "default": false,
            "description": "Build hpcprof-mpi, the MPI version of hpcprof (not available for 2022.10.01).",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Support offloading with OpenCL.",
            "name": "opencl"
        },
        {
            "default": true,
            "description": "Use PAPI instead of perfmon for access to the hardware performance counters.",
            "name": "papi"
        },
        {
            "default": false,
            "description": "Support unwinding Python source.",
            "name": "python"
        },
        {
            "default": false,
            "description": "Support ROCM on AMD GPUs.",
            "name": "rocm"
        },
        {
            "default": false,
            "description": "Strip targets on install",
            "name": "strip"
        },
        {
            "default": true,
            "description": "Include hpcviewer.",
            "name": "viewer"
        }
    ],
    "versions": [
        {
            "branch": "develop",
            "name": "develop"
        },
        {
            "branch": "release/2024.01",
            "name": "2024.01.stable"
        },
        {
            "commit": "0672b9a9a2a1e3846c5e2059fb73a07a129f22cd",
            "name": "2024.01.1",
            "tag": "2024.01.1"
        },
        {
            "branch": "release/2023.08",
            "name": "2023.08.stable"
        },
        {
            "commit": "753a72affd584a5e72fe153d1e8c47a394a3886e",
            "name": "2023.08.1",
            "tag": "2023.08.1"
        },
        {
            "branch": "release/2023.03",
            "name": "2023.03.stable"
        },
        {
            "commit": "9e0daf2ad169f6c7f6c60408475b3c2f71baebbf",
            "name": "2023.03.01"
        },
        {
            "commit": "e8a5cc87e8f5ddfd14338459a4106f8e0d162c83",
            "name": "2022.10.01"
        }
    ],
    "versions_deprecated": [
        {
            "commit": "8ac72d9963c4ed7b7f56acb65feb02fbce353479",
            "name": "2022.05.15"
        },
        {
            "commit": "a92fdad29fc180cc522a9087bba9554a829ee002",
            "name": "2022.04.15"
        },
        {
            "commit": "0238e9a052a696707e4e65b2269f342baad728ae",
            "name": "2022.01.15"
        },
        {
            "commit": "a8f289e4dc87ff98e05cfc105978c09eb2f5ea16",
            "name": "2021.10.15"
        },
        {
            "commit": "004ea0c2aea6a261e7d5d216c24f8a703fc6c408",
            "name": "2021.05.15"
        },
        {
            "commit": "68a051044c952f0f4dac459d9941875c700039e7",
            "name": "2021.03.01"
        },
        {
            "commit": "d9d13c705d81e5de38e624254cf0875cce6add9a",
            "name": "2020.08.03"
        },
        {
            "commit": "4e56c780cffc53875aca67d6472a2fb3678970eb",
            "name": "2020.07.21"
        },
        {
            "commit": "ac6ae1156e77d35596fea743ed8ae768f7222f19",
            "name": "2020.06.12"
        },
        {
            "commit": "94ede4e6fa1e05e6f080be8dc388240ea027f769",
            "name": "2020.03.01"
        },
        {
            "commit": "b4e1877ff96069fd8ed0fdf0e36283a5b4b62240",
            "name": "2019.12.28"
        },
        {
            "commit": "6ea44ed3f93ede2d0a48937f288a2d41188a277c",
            "name": "2019.08.14"
        }
    ]
}