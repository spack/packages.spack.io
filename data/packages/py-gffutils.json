{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Bash tab completion for argparse.",
            "name": "py-argcomplete"
        },
        {
            "description": "An argparse wrapper that doesn't make you say \"argh\" each time you deal\nwith it. Building a command-line interface? Found yourself uttering\n\"argh!\" while struggling with the API of argparse? Don't like the\ncomplexity but need the power? Argh is a smart wrapper for argparse.\nArgparse is a very powerful tool; Argh just makes it easy to use.",
            "name": "py-argh"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "pyfaidx: efficient pythonic random access to fasta subsequences",
            "name": "py-pyfaidx"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Simplejson is a simple, fast, extensible JSON encoder/decoder for Python",
            "name": "py-simplejson"
        },
        {
            "description": "Python 2 and 3 compatibility utilities.",
            "name": "py-six"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "BCFtools is a set of utilities that manipulate variant calls in the\nVariant Call Format (VCF) and its binary counterpart BCF. All commands\nwork transparently with both VCFs and BCFs, both uncompressed and BGZF-\ncompressed.",
            "name": "bcftools"
        },
        {
            "description": "IsoQuant: Transcript discovery and quantification with long RNA reads",
            "name": "isoquant"
        },
        {
            "description": "Liftoff is a tool that accurately maps annotations in GFF or GTF between\nassemblies of the same, or closely-related species.",
            "name": "liftoff"
        },
        {
            "description": "A Bacterial Pangenome Analysis Pipeline",
            "name": "py-panaroo"
        },
        {
            "description": "Quality assessment of de novo transcriptome assemblies from RNA-Seq data\nrnaQUAST is a tool for evaluating RNA-Seq assemblies using reference\ngenome and gene database. In addition, rnaQUAST is also capable of\nestimating gene database coverage by raw reads and de novo quality\nassessment using third-party software.",
            "name": "rnaquast"
        }
    ],
    "description": "GFF and GTF file manipulation and interconversion gffutils is a Python\npackage for working with and manipulating the GFF and GTF format files\ntypically used for genomic annotations. Files are loaded into a sqlite3\ndatabase, allowing much more complex manipulation of hierarchical\nfeatures (e.g., genes, transcripts, and exons) than is possible with\nplain-text methods alone.\n",
    "homepage": "https://github.com/daler/gffutils",
    "latest_version": "0.10.1",
    "maintainers": [
        "dorton21"
    ],
    "name": "py-gffutils",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.10.1",
            "sha256": "a8fc39006d7aa353147238160640e2210b168f7849cb99896be3fc9441e351cb"
        }
    ],
    "versions_deprecated": []
}