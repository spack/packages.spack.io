{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "DICOM to NIfTI converter",
            "name": "dcm2niix"
        },
        {
            "description": "Build manual page from python's ArgumentParser object.",
            "name": "py-argparse-manpage"
        },
        {
            "description": "Validator for the Brain Imaging Data Structure",
            "name": "py-bids-validator"
        },
        {
            "description": "Colored terminal output for Python's logging module",
            "name": "py-coloredlogs"
        },
        {
            "description": "Matplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.",
            "name": "py-matplotlib"
        },
        {
            "description": "Combine multi-echoes from a multi-echo fMRI acquisition.",
            "name": "py-multiecho"
        },
        {
            "description": "Access a multitude of neuroimaging data formats",
            "name": "py-nibabel"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "pandas is a fast, powerful, flexible and easy to use open source data\nanalysis and manipulation tool, built on top of the Python programming\nlanguage.",
            "name": "py-pandas"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A script to remove facial structure from MRI images.",
            "name": "py-pydeface"
        },
        {
            "description": "Pure python package for DICOM medical file reading and writing pydicom\nis a pure Python package for working with DICOM files. It lets you read,\nmodify and write DICOM data in an easy \"pythonic\" way.",
            "name": "py-pydicom"
        },
        {
            "description": "PyQt is a set of Python v2 and v3 bindings for The Qt Company's Qt\napplication framework and runs on all platforms supported by Qt\nincluding Windows, OS X, Linux, iOS and Android. PyQt5 supports Qt v5.",
            "name": "py-pyqt5"
        },
        {
            "description": "PyQt6 is a comprehensive set of Python bindings for Qt v6.",
            "name": "py-pyqt6"
        },
        {
            "description": "pytest: simple powerful testing with Python.",
            "name": "py-pytest"
        },
        {
            "description": "Invoke py.test as distutils command with dependency resolution.",
            "name": "py-pytest-runner"
        },
        {
            "description": "Extensions to the standard Python datetime module.",
            "name": "py-python-dateutil"
        },
        {
            "description": "a YAML parser/emitter that supports roundtrip preservation of comments,\nseq/map flow style, and map key order",
            "name": "py-ruamel-yaml"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Tomli is a Python library for parsing TOML. Tomli is fully compatible\nwith TOML v1.0.0.",
            "name": "py-tomli"
        },
        {
            "description": "A Fast, Extensible Progress Meter",
            "name": "py-tqdm"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [],
    "description": "Converts and organises raw MRI data-sets according to the Brain Imaging\nData Structure (BIDS).\n",
    "homepage": "https://github.com/Donders-Institute/bidscoin",
    "latest_version": "4.1.1",
    "maintainers": [],
    "name": "py-bidscoin",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "4.1.1",
            "sha256": "28730e9202d3c44d77c0bbdea9565e00adfdd23e85a6f3f121c1bfce1a7b462b"
        },
        {
            "name": "4.0.0",
            "sha256": "3b0c26f2e250e06b6f526cdbee09517e1f339da8035c0a316609b4463d75824d"
        },
        {
            "name": "3.7.4",
            "sha256": "efa32238fb7b75e533e7f5cc318ad5a703716d291985435d43f1de4f18402517"
        }
    ],
    "versions_deprecated": []
}