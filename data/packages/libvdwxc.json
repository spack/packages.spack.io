{
    "aliases": [],
    "build_system": "AutotoolsPackage",
    "conflicts": [
        {
            "description": null,
            "name": "^fftw~mpi",
            "spec": "+mpi"
        },
        {
            "description": null,
            "name": "~mpi",
            "spec": "+pfft"
        },
        {
            "description": null,
            "name": "arch=windows-None-None",
            "spec": "build_system=autotools"
        }
    ],
    "dependencies": [
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "c"
        },
        {
            "description": "NVPL FFT (NVIDIA Performance Libraries FFT) is part of NVIDIA\nPerformance Libraries and provides Fast Fourier Transform (FFT)\ncalculations on ARM CPUs.",
            "name": "fftw-api"
        },
        {
            "description": "The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and\ntools essential to maximizing developer productivity and the performance\nand portability of HPC applications. The NVIDIA HPC SDK C, C++, and\nFortran compilers support GPU acceleration of HPC modeling and\nsimulation applications with standard C++ and Fortran, OpenACC\ndirectives, and CUDA. GPU-accelerated math libraries maximize\nperformance on common HPC algorithms, and optimized communications\nlibraries enable standards-based multi-GPU and scalable systems\nprogramming. Performance profiling and debugging tools simplify porting\nand optimization of HPC applications.",
            "name": "fortran"
        },
        {
            "description": "GNU Make is a tool which controls the generation of executables and\nother non-source files of a program from the program's source files.",
            "name": "gmake"
        },
        {
            "description": "The GNU config.guess and config.sub scripts versioned by timestamp.\nThis package can be used as a build dependency for autotools packages\nthat ship a tarball with outdated config.guess and config.sub files.",
            "name": "gnuconfig"
        },
        {
            "description": "IBM MPI implementation from Spectrum MPI.",
            "name": "mpi"
        },
        {
            "description": "PFFT is a software library for computing massively parallel, fast\nFourier transformations on distributed memory architectures. PFFT can be\nunderstood as a generalization of FFTW-MPI to multidimensional data\ndecomposition.",
            "name": "pfft"
        }
    ],
    "dependent_to": [
        {
            "description": "CP2K is a quantum chemistry and solid state physics software package\nthat can perform atomistic simulations of solid state, liquid,\nmolecular, periodic, material, crystal, and biological systems",
            "name": "cp2k"
        },
        {
            "description": "A real-space finite-difference (time-dependent) density-functional\ntheory code.",
            "name": "octopus"
        },
        {
            "description": "GPAW is a density-functional theory (DFT) Python code based on the\nprojector-augmented wave (PAW) method and the atomic simulation\nenvironment (ASE).",
            "name": "py-gpaw"
        },
        {
            "description": "Domain specific library for electronic structure calculations",
            "name": "sirius"
        }
    ],
    "description": "Portable C library of density functionals with van der Waals\ninteractions for density functional theory\n",
    "homepage": "https://libvdwxc.gitlab.io/libvdwxc/",
    "latest_version": "0.4.0",
    "maintainers": [],
    "name": "libvdwxc",
    "patches": [
        {
            "level": 1,
            "owner": "builtin.libvdwxc",
            "relative_path": "fftw-detection.patch",
            "reverse": false,
            "sha256": "efe99ea2f42463dd1029e185ebf8d5aba6914beb96379af10e3e3be8cb60293f",
            "version": "@:0.4.0",
            "working_dir": "."
        }
    ],
    "resources": [],
    "variants": [
        {
            "default": "autotools",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": true,
            "description": "Enable MPI support",
            "name": "mpi"
        },
        {
            "default": false,
            "description": "Enable support for PFFT",
            "name": "pfft"
        }
    ],
    "versions": [
        {
            "name": "0.4.0",
            "sha256": "3524feb5bb2be86b4688f71653502146b181e66f3f75b8bdaf23dd1ae4a56b33"
        }
    ],
    "versions_deprecated": []
}