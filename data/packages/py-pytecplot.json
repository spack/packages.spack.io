{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "The FlatBuffers serialization format implemented in Python. For a\nfaster and feature-complete version check out the C++ implementation in\n`flatbuffers` package.",
            "name": "py-flatbuffers"
        },
        {
            "description": "IPython provides a rich toolkit to help you make the most out of using\nPython interactively.",
            "name": "py-ipython"
        },
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "Pillow is a fork of the Python Imaging Library (PIL). It adds image\nprocessing capabilities to your Python interpreter. This library\nsupports many file formats, and provides powerful image processing and\ngraphics capabilities.",
            "name": "py-pillow"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "Protocol buffers are Google's language-neutral, platform-neutral,\nextensible mechanism for serializing structured data - think XML, but\nsmaller, faster, and simpler. You define how you want your data to be\nstructured once, then you can use special generated source code to\neasily write and read your structured data to and from a variety of data\nstreams and using a variety of languages.",
            "name": "py-protobuf"
        },
        {
            "description": "PyZMQ: Python bindings for zeromq.",
            "name": "py-pyzmq"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "Python 2 and 3 compatibility utilities.",
            "name": "py-six"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        },
        {
            "description": "Tecplot 360 is a Computational Fluid Dynamics (CFD) and numerical\nsimulation software package used in post-processing simulation results.\nIt is also used in chemistry applications to visualize molecule\nstructure by post-processing charge density data.",
            "name": "tecplot"
        }
    ],
    "dependent_to": [],
    "description": "The pytecplot library is a high level API that connects your Python\nscript to the power of the Tecplot 360 visualization engine. It offers\nline plotting, 2D and 3D surface plots in a variety of formats, and 3D\nvolumetric visualization. Familiarity with Tecplot 360 and the Tecplot\n360 macro language is helpful, but not required.\n",
    "homepage": "https://www.tecplot.com/docs/pytecplot/",
    "latest_version": "1.4.2",
    "maintainers": [],
    "name": "py-pytecplot",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        },
        {
            "default": false,
            "description": "Enable extra functionality.",
            "name": "extras"
        }
    ],
    "versions": [
        {
            "name": "1.4.2",
            "sha256": "586a2ee947314ddd2f28be5523911dd298465b8f6a9145ba351866d5d695ef0d"
        }
    ],
    "versions_deprecated": []
}