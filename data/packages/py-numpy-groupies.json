{
    "aliases": [],
    "build_system": "PythonPackage",
    "conflicts": [],
    "dependencies": [
        {
            "description": "Fundamental package for array computing in Python.",
            "name": "py-numpy"
        },
        {
            "description": "The PyPA recommended tool for installing Python packages.",
            "name": "py-pip"
        },
        {
            "description": "A Python utility that aids in the process of downloading, building,\nupgrading, installing, and uninstalling Python packages.",
            "name": "py-setuptools"
        },
        {
            "description": "The blessed package to manage your versions by scm tags.",
            "name": "py-setuptools-scm"
        },
        {
            "description": "A built-package format for Python.",
            "name": "py-wheel"
        },
        {
            "description": "The Python programming language.",
            "name": "python"
        },
        {
            "description": "A Spack managed Python virtual environment",
            "name": "python-venv"
        }
    ],
    "dependent_to": [
        {
            "description": "Fast & furious GroupBy operations for dask.array.",
            "name": "py-flox"
        },
        {
            "description": "Work with Loom files for single-cell RNA-seq data.",
            "name": "py-loompy"
        }
    ],
    "description": "This package consists of a couple of optimised tools for doing things\nthat can roughly be considered \"group-indexing operations\". The most\nprominent tool is `aggregate`. `aggregate` takes an array of values, and\nan array giving the group number for each of those values. It then\nreturns the sum (or mean, or std, or any, ...etc.) of the values in each\ngroup. You have probably come across this idea before, using `matlab`\naccumarray, `pandas` groupby, or generally MapReduce algorithms and\nhistograms. There are different implementations of `aggregate` provided,\nbased on plain `numpy`, `numba` and `weave`. Performance is a main\nconcern, and so far we comfortably beat similar implementations in other\npackages (check the benchmarks).\n",
    "homepage": "https://github.com/ml31415/numpy-groupies",
    "latest_version": "0.11.2",
    "maintainers": [],
    "name": "py-numpy-groupies",
    "patches": [],
    "resources": [],
    "variants": [
        {
            "default": "python_pip",
            "description": "Build systems supported by the package",
            "name": "build_system"
        }
    ],
    "versions": [
        {
            "name": "0.11.2",
            "sha256": "2fda978c4d28d2f1633a63972f425d0a7f2f12a75505d215b41b6de712e2ec4b"
        },
        {
            "name": "0.9.20",
            "sha256": "923a382d6bc6876384b58a9c0503b05b9d36a660f329695c2d33e4f93fcbbe3d"
        }
    ],
    "versions_deprecated": []
}